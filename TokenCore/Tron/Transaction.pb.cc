// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Transaction.proto

#include "Transaction.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Transaction_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Transaction_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Contract;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Transaction_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_raw;
}  // namespace protobuf_Transaction_2eproto
namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace tronProtocol {
class TransferContractDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferContract>
      _instance;
} _TransferContract_default_instance_;
class TransferAssetContractDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferAssetContract>
      _instance;
} _TransferAssetContract_default_instance_;
class TriggerSmartContractDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TriggerSmartContract>
      _instance;
} _TriggerSmartContract_default_instance_;
class FreezeBalanceContractDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FreezeBalanceContract>
      _instance;
} _FreezeBalanceContract_default_instance_;
class UnfreezeBalanceContractDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnfreezeBalanceContract>
      _instance;
} _UnfreezeBalanceContract_default_instance_;
class ContractDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Contract>
      _instance;
} _Contract_default_instance_;
class rawDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<raw>
      _instance;
} _raw_default_instance_;
class TransactionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Transaction>
      _instance;
} _Transaction_default_instance_;
}  // namespace tronProtocol
namespace protobuf_Transaction_2eproto {
static void InitDefaultsTransferContract() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tronProtocol::_TransferContract_default_instance_;
    new (ptr) ::tronProtocol::TransferContract();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tronProtocol::TransferContract::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TransferContract =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTransferContract}, {}};

static void InitDefaultsTransferAssetContract() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tronProtocol::_TransferAssetContract_default_instance_;
    new (ptr) ::tronProtocol::TransferAssetContract();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tronProtocol::TransferAssetContract::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TransferAssetContract =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTransferAssetContract}, {}};

static void InitDefaultsTriggerSmartContract() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tronProtocol::_TriggerSmartContract_default_instance_;
    new (ptr) ::tronProtocol::TriggerSmartContract();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tronProtocol::TriggerSmartContract::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TriggerSmartContract =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTriggerSmartContract}, {}};

static void InitDefaultsFreezeBalanceContract() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tronProtocol::_FreezeBalanceContract_default_instance_;
    new (ptr) ::tronProtocol::FreezeBalanceContract();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tronProtocol::FreezeBalanceContract::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FreezeBalanceContract =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFreezeBalanceContract}, {}};

static void InitDefaultsUnfreezeBalanceContract() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tronProtocol::_UnfreezeBalanceContract_default_instance_;
    new (ptr) ::tronProtocol::UnfreezeBalanceContract();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tronProtocol::UnfreezeBalanceContract::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UnfreezeBalanceContract =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUnfreezeBalanceContract}, {}};

static void InitDefaultsContract() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tronProtocol::_Contract_default_instance_;
    new (ptr) ::tronProtocol::Contract();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tronProtocol::Contract::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Contract =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsContract}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsraw() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tronProtocol::_raw_default_instance_;
    new (ptr) ::tronProtocol::raw();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tronProtocol::raw::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_raw =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsraw}, {
      &protobuf_Transaction_2eproto::scc_info_Contract.base,}};

static void InitDefaultsTransaction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tronProtocol::_Transaction_default_instance_;
    new (ptr) ::tronProtocol::Transaction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tronProtocol::Transaction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Transaction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTransaction}, {
      &protobuf_Transaction_2eproto::scc_info_raw.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TransferContract.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransferAssetContract.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TriggerSmartContract.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FreezeBalanceContract.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnfreezeBalanceContract.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Contract.base);
  ::google::protobuf::internal::InitSCC(&scc_info_raw.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Transaction.base);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::TransferContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::TransferContract, owner_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::TransferContract, to_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::TransferContract, amount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::TransferAssetContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::TransferAssetContract, asset_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::TransferAssetContract, owner_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::TransferAssetContract, to_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::TransferAssetContract, amount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::TriggerSmartContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::TriggerSmartContract, owner_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::TriggerSmartContract, contract_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::TriggerSmartContract, call_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::TriggerSmartContract, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::FreezeBalanceContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::FreezeBalanceContract, owner_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::FreezeBalanceContract, frozen_balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::FreezeBalanceContract, frozen_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::FreezeBalanceContract, resource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::FreezeBalanceContract, receiver_address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::UnfreezeBalanceContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::UnfreezeBalanceContract, owner_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::UnfreezeBalanceContract, resource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::UnfreezeBalanceContract, receiver_address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::Contract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::Contract, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::Contract, parameter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::raw, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::raw, ref_block_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::raw, ref_block_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::raw, expiration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::raw, contract_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::raw, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::raw, fee_limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::Transaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::Transaction, raw_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tronProtocol::Transaction, signature_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tronProtocol::TransferContract)},
  { 8, -1, sizeof(::tronProtocol::TransferAssetContract)},
  { 17, -1, sizeof(::tronProtocol::TriggerSmartContract)},
  { 26, -1, sizeof(::tronProtocol::FreezeBalanceContract)},
  { 36, -1, sizeof(::tronProtocol::UnfreezeBalanceContract)},
  { 44, -1, sizeof(::tronProtocol::Contract)},
  { 51, -1, sizeof(::tronProtocol::raw)},
  { 62, -1, sizeof(::tronProtocol::Transaction)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tronProtocol::_TransferContract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tronProtocol::_TransferAssetContract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tronProtocol::_TriggerSmartContract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tronProtocol::_FreezeBalanceContract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tronProtocol::_UnfreezeBalanceContract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tronProtocol::_Contract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tronProtocol::_raw_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tronProtocol::_Transaction_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Transaction.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021Transaction.proto\022\014tronProtocol\032\031googl"
      "e/protobuf/any.proto\"M\n\020TransferContract"
      "\022\025\n\rowner_address\030\001 \001(\014\022\022\n\nto_address\030\002 "
      "\001(\014\022\016\n\006amount\030\003 \001(\003\"f\n\025TransferAssetCont"
      "ract\022\022\n\nasset_name\030\001 \001(\014\022\025\n\rowner_addres"
      "s\030\002 \001(\014\022\022\n\nto_address\030\003 \001(\014\022\016\n\006amount\030\004 "
      "\001(\003\"i\n\024TriggerSmartContract\022\025\n\rowner_add"
      "ress\030\001 \001(\014\022\030\n\020contract_address\030\002 \001(\014\022\022\n\n"
      "call_value\030\003 \001(\003\022\014\n\004data\030\004 \001(\014\"\247\001\n\025Freez"
      "eBalanceContract\022\025\n\rowner_address\030\001 \001(\014\022"
      "\026\n\016frozen_balance\030\002 \001(\003\022\027\n\017frozen_durati"
      "on\030\003 \001(\003\022,\n\010resource\030\n \001(\0162\032.tronProtoco"
      "l.ResourceCode\022\030\n\020receiver_address\030\017 \001(\014"
      "\"x\n\027UnfreezeBalanceContract\022\025\n\rowner_add"
      "ress\030\001 \001(\014\022,\n\010resource\030\n \001(\0162\032.tronProto"
      "col.ResourceCode\022\030\n\020receiver_address\030\017 \001"
      "(\014\"\200\007\n\010Contract\0221\n\004type\030\001 \001(\0162#.tronProt"
      "ocol.Contract.ContractType\022\'\n\tparameter\030"
      "\002 \001(\0132\024.google.protobuf.Any\"\227\006\n\014Contract"
      "Type\022\031\n\025AccountCreateContract\020\000\022\024\n\020Trans"
      "ferContract\020\001\022\031\n\025TransferAssetContract\020\002"
      "\022\025\n\021VoteAssetContract\020\003\022\027\n\023VoteWitnessCo"
      "ntract\020\004\022\031\n\025WitnessCreateContract\020\005\022\026\n\022A"
      "ssetIssueContract\020\006\022\031\n\025WitnessUpdateCont"
      "ract\020\010\022!\n\035ParticipateAssetIssueContract\020"
      "\t\022\031\n\025AccountUpdateContract\020\n\022\031\n\025FreezeBa"
      "lanceContract\020\013\022\033\n\027UnfreezeBalanceContra"
      "ct\020\014\022\033\n\027WithdrawBalanceContract\020\r\022\031\n\025Unf"
      "reezeAssetContract\020\016\022\027\n\023UpdateAssetContr"
      "act\020\017\022\032\n\026ProposalCreateContract\020\020\022\033\n\027Pro"
      "posalApproveContract\020\021\022\032\n\026ProposalDelete"
      "Contract\020\022\022\030\n\024SetAccountIdContract\020\023\022\022\n\016"
      "CustomContract\020\024\022\027\n\023CreateSmartContract\020"
      "\036\022\030\n\024TriggerSmartContract\020\037\022\017\n\013GetContra"
      "ct\020 \022\031\n\025UpdateSettingContract\020!\022\032\n\026Excha"
      "ngeCreateContract\020)\022\032\n\026ExchangeInjectCon"
      "tract\020*\022\034\n\030ExchangeWithdrawContract\020+\022\037\n"
      "\033ExchangeTransactionContract\020,\022\035\n\031Update"
      "EnergyLimitContract\020-\"\232\001\n\003raw\022\027\n\017ref_blo"
      "ck_bytes\030\001 \001(\014\022\026\n\016ref_block_hash\030\004 \001(\014\022\022"
      "\n\nexpiration\030\010 \001(\003\022(\n\010contract\030\013 \001(\0132\026.t"
      "ronProtocol.Contract\022\021\n\ttimestamp\030\016 \001(\003\022"
      "\021\n\tfee_limit\030\022 \001(\003\"E\n\013Transaction\022#\n\010raw"
      "_data\030\001 \001(\0132\021.tronProtocol.raw\022\021\n\tsignat"
      "ure\030\002 \001(\014*)\n\014ResourceCode\022\r\n\tBANDWIDTH\020\000"
      "\022\n\n\006ENERGY\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1820);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Transaction.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Transaction_2eproto
namespace tronProtocol {
const ::google::protobuf::EnumDescriptor* Contract_ContractType_descriptor() {
  protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Transaction_2eproto::file_level_enum_descriptors[0];
}
bool Contract_ContractType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 30:
    case 31:
    case 32:
    case 33:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Contract_ContractType Contract::AccountCreateContract;
const Contract_ContractType Contract::TransferContract;
const Contract_ContractType Contract::TransferAssetContract;
const Contract_ContractType Contract::VoteAssetContract;
const Contract_ContractType Contract::VoteWitnessContract;
const Contract_ContractType Contract::WitnessCreateContract;
const Contract_ContractType Contract::AssetIssueContract;
const Contract_ContractType Contract::WitnessUpdateContract;
const Contract_ContractType Contract::ParticipateAssetIssueContract;
const Contract_ContractType Contract::AccountUpdateContract;
const Contract_ContractType Contract::FreezeBalanceContract;
const Contract_ContractType Contract::UnfreezeBalanceContract;
const Contract_ContractType Contract::WithdrawBalanceContract;
const Contract_ContractType Contract::UnfreezeAssetContract;
const Contract_ContractType Contract::UpdateAssetContract;
const Contract_ContractType Contract::ProposalCreateContract;
const Contract_ContractType Contract::ProposalApproveContract;
const Contract_ContractType Contract::ProposalDeleteContract;
const Contract_ContractType Contract::SetAccountIdContract;
const Contract_ContractType Contract::CustomContract;
const Contract_ContractType Contract::CreateSmartContract;
const Contract_ContractType Contract::TriggerSmartContract;
const Contract_ContractType Contract::GetContract;
const Contract_ContractType Contract::UpdateSettingContract;
const Contract_ContractType Contract::ExchangeCreateContract;
const Contract_ContractType Contract::ExchangeInjectContract;
const Contract_ContractType Contract::ExchangeWithdrawContract;
const Contract_ContractType Contract::ExchangeTransactionContract;
const Contract_ContractType Contract::UpdateEnergyLimitContract;
const Contract_ContractType Contract::ContractType_MIN;
const Contract_ContractType Contract::ContractType_MAX;
const int Contract::ContractType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ResourceCode_descriptor() {
  protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Transaction_2eproto::file_level_enum_descriptors[1];
}
bool ResourceCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TransferContract::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferContract::kOwnerAddressFieldNumber;
const int TransferContract::kToAddressFieldNumber;
const int TransferContract::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferContract::TransferContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Transaction_2eproto::scc_info_TransferContract.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tronProtocol.TransferContract)
}
TransferContract::TransferContract(const TransferContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  to_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_address().size() > 0) {
    to_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_address_);
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:tronProtocol.TransferContract)
}

void TransferContract::SharedCtor() {
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_LONGLONG(0);
}

TransferContract::~TransferContract() {
  // @@protoc_insertion_point(destructor:tronProtocol.TransferContract)
  SharedDtor();
}

void TransferContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransferContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransferContract::descriptor() {
  ::protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferContract& TransferContract::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Transaction_2eproto::scc_info_TransferContract.base);
  return *internal_default_instance();
}


void TransferContract::Clear() {
// @@protoc_insertion_point(message_clear_start:tronProtocol.TransferContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool TransferContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tronProtocol.TransferContract)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes to_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_to_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 amount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tronProtocol.TransferContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tronProtocol.TransferContract)
  return false;
#undef DO_
}

void TransferContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tronProtocol.TransferContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  // bytes to_address = 2;
  if (this->to_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->to_address(), output);
  }

  // int64 amount = 3;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tronProtocol.TransferContract)
}

::google::protobuf::uint8* TransferContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tronProtocol.TransferContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  // bytes to_address = 2;
  if (this->to_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->to_address(), target);
  }

  // int64 amount = 3;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->amount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tronProtocol.TransferContract)
  return target;
}

size_t TransferContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tronProtocol.TransferContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // bytes to_address = 2;
  if (this->to_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->to_address());
  }

  // int64 amount = 3;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tronProtocol.TransferContract)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tronProtocol.TransferContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tronProtocol.TransferContract)
    MergeFrom(*source);
  }
}

void TransferContract::MergeFrom(const TransferContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tronProtocol.TransferContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.to_address().size() > 0) {

    to_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_address_);
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
}

void TransferContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tronProtocol.TransferContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferContract::CopyFrom(const TransferContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tronProtocol.TransferContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferContract::IsInitialized() const {
  return true;
}

void TransferContract::Swap(TransferContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferContract::InternalSwap(TransferContract* other) {
  using std::swap;
  owner_address_.Swap(&other->owner_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_address_.Swap(&other->to_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(amount_, other->amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransferContract::GetMetadata() const {
  protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferAssetContract::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferAssetContract::kAssetNameFieldNumber;
const int TransferAssetContract::kOwnerAddressFieldNumber;
const int TransferAssetContract::kToAddressFieldNumber;
const int TransferAssetContract::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferAssetContract::TransferAssetContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Transaction_2eproto::scc_info_TransferAssetContract.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tronProtocol.TransferAssetContract)
}
TransferAssetContract::TransferAssetContract(const TransferAssetContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  asset_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.asset_name().size() > 0) {
    asset_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asset_name_);
  }
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  to_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_address().size() > 0) {
    to_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_address_);
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:tronProtocol.TransferAssetContract)
}

void TransferAssetContract::SharedCtor() {
  asset_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_LONGLONG(0);
}

TransferAssetContract::~TransferAssetContract() {
  // @@protoc_insertion_point(destructor:tronProtocol.TransferAssetContract)
  SharedDtor();
}

void TransferAssetContract::SharedDtor() {
  asset_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransferAssetContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransferAssetContract::descriptor() {
  ::protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferAssetContract& TransferAssetContract::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Transaction_2eproto::scc_info_TransferAssetContract.base);
  return *internal_default_instance();
}


void TransferAssetContract::Clear() {
// @@protoc_insertion_point(message_clear_start:tronProtocol.TransferAssetContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  asset_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool TransferAssetContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tronProtocol.TransferAssetContract)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes asset_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_asset_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes owner_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes to_address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_to_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 amount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tronProtocol.TransferAssetContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tronProtocol.TransferAssetContract)
  return false;
#undef DO_
}

void TransferAssetContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tronProtocol.TransferAssetContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes asset_name = 1;
  if (this->asset_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->asset_name(), output);
  }

  // bytes owner_address = 2;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->owner_address(), output);
  }

  // bytes to_address = 3;
  if (this->to_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->to_address(), output);
  }

  // int64 amount = 4;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tronProtocol.TransferAssetContract)
}

::google::protobuf::uint8* TransferAssetContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tronProtocol.TransferAssetContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes asset_name = 1;
  if (this->asset_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->asset_name(), target);
  }

  // bytes owner_address = 2;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->owner_address(), target);
  }

  // bytes to_address = 3;
  if (this->to_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->to_address(), target);
  }

  // int64 amount = 4;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->amount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tronProtocol.TransferAssetContract)
  return target;
}

size_t TransferAssetContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tronProtocol.TransferAssetContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes asset_name = 1;
  if (this->asset_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->asset_name());
  }

  // bytes owner_address = 2;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // bytes to_address = 3;
  if (this->to_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->to_address());
  }

  // int64 amount = 4;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferAssetContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tronProtocol.TransferAssetContract)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferAssetContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferAssetContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tronProtocol.TransferAssetContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tronProtocol.TransferAssetContract)
    MergeFrom(*source);
  }
}

void TransferAssetContract::MergeFrom(const TransferAssetContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tronProtocol.TransferAssetContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.asset_name().size() > 0) {

    asset_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asset_name_);
  }
  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.to_address().size() > 0) {

    to_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_address_);
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
}

void TransferAssetContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tronProtocol.TransferAssetContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferAssetContract::CopyFrom(const TransferAssetContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tronProtocol.TransferAssetContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferAssetContract::IsInitialized() const {
  return true;
}

void TransferAssetContract::Swap(TransferAssetContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferAssetContract::InternalSwap(TransferAssetContract* other) {
  using std::swap;
  asset_name_.Swap(&other->asset_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  owner_address_.Swap(&other->owner_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_address_.Swap(&other->to_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(amount_, other->amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransferAssetContract::GetMetadata() const {
  protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TriggerSmartContract::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TriggerSmartContract::kOwnerAddressFieldNumber;
const int TriggerSmartContract::kContractAddressFieldNumber;
const int TriggerSmartContract::kCallValueFieldNumber;
const int TriggerSmartContract::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TriggerSmartContract::TriggerSmartContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Transaction_2eproto::scc_info_TriggerSmartContract.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tronProtocol.TriggerSmartContract)
}
TriggerSmartContract::TriggerSmartContract(const TriggerSmartContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  contract_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contract_address().size() > 0) {
    contract_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_address_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  call_value_ = from.call_value_;
  // @@protoc_insertion_point(copy_constructor:tronProtocol.TriggerSmartContract)
}

void TriggerSmartContract::SharedCtor() {
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  call_value_ = GOOGLE_LONGLONG(0);
}

TriggerSmartContract::~TriggerSmartContract() {
  // @@protoc_insertion_point(destructor:tronProtocol.TriggerSmartContract)
  SharedDtor();
}

void TriggerSmartContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TriggerSmartContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TriggerSmartContract::descriptor() {
  ::protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TriggerSmartContract& TriggerSmartContract::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Transaction_2eproto::scc_info_TriggerSmartContract.base);
  return *internal_default_instance();
}


void TriggerSmartContract::Clear() {
// @@protoc_insertion_point(message_clear_start:tronProtocol.TriggerSmartContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  call_value_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool TriggerSmartContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tronProtocol.TriggerSmartContract)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes contract_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_contract_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 call_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &call_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tronProtocol.TriggerSmartContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tronProtocol.TriggerSmartContract)
  return false;
#undef DO_
}

void TriggerSmartContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tronProtocol.TriggerSmartContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  // bytes contract_address = 2;
  if (this->contract_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->contract_address(), output);
  }

  // int64 call_value = 3;
  if (this->call_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->call_value(), output);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tronProtocol.TriggerSmartContract)
}

::google::protobuf::uint8* TriggerSmartContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tronProtocol.TriggerSmartContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  // bytes contract_address = 2;
  if (this->contract_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->contract_address(), target);
  }

  // int64 call_value = 3;
  if (this->call_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->call_value(), target);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tronProtocol.TriggerSmartContract)
  return target;
}

size_t TriggerSmartContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tronProtocol.TriggerSmartContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // bytes contract_address = 2;
  if (this->contract_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->contract_address());
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // int64 call_value = 3;
  if (this->call_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->call_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TriggerSmartContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tronProtocol.TriggerSmartContract)
  GOOGLE_DCHECK_NE(&from, this);
  const TriggerSmartContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TriggerSmartContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tronProtocol.TriggerSmartContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tronProtocol.TriggerSmartContract)
    MergeFrom(*source);
  }
}

void TriggerSmartContract::MergeFrom(const TriggerSmartContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tronProtocol.TriggerSmartContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.contract_address().size() > 0) {

    contract_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_address_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.call_value() != 0) {
    set_call_value(from.call_value());
  }
}

void TriggerSmartContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tronProtocol.TriggerSmartContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TriggerSmartContract::CopyFrom(const TriggerSmartContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tronProtocol.TriggerSmartContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TriggerSmartContract::IsInitialized() const {
  return true;
}

void TriggerSmartContract::Swap(TriggerSmartContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TriggerSmartContract::InternalSwap(TriggerSmartContract* other) {
  using std::swap;
  owner_address_.Swap(&other->owner_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  contract_address_.Swap(&other->contract_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(call_value_, other->call_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TriggerSmartContract::GetMetadata() const {
  protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FreezeBalanceContract::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FreezeBalanceContract::kOwnerAddressFieldNumber;
const int FreezeBalanceContract::kFrozenBalanceFieldNumber;
const int FreezeBalanceContract::kFrozenDurationFieldNumber;
const int FreezeBalanceContract::kResourceFieldNumber;
const int FreezeBalanceContract::kReceiverAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FreezeBalanceContract::FreezeBalanceContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Transaction_2eproto::scc_info_FreezeBalanceContract.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tronProtocol.FreezeBalanceContract)
}
FreezeBalanceContract::FreezeBalanceContract(const FreezeBalanceContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  receiver_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.receiver_address().size() > 0) {
    receiver_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receiver_address_);
  }
  ::memcpy(&frozen_balance_, &from.frozen_balance_,
    static_cast<size_t>(reinterpret_cast<char*>(&resource_) -
    reinterpret_cast<char*>(&frozen_balance_)) + sizeof(resource_));
  // @@protoc_insertion_point(copy_constructor:tronProtocol.FreezeBalanceContract)
}

void FreezeBalanceContract::SharedCtor() {
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&frozen_balance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resource_) -
      reinterpret_cast<char*>(&frozen_balance_)) + sizeof(resource_));
}

FreezeBalanceContract::~FreezeBalanceContract() {
  // @@protoc_insertion_point(destructor:tronProtocol.FreezeBalanceContract)
  SharedDtor();
}

void FreezeBalanceContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FreezeBalanceContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FreezeBalanceContract::descriptor() {
  ::protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FreezeBalanceContract& FreezeBalanceContract::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Transaction_2eproto::scc_info_FreezeBalanceContract.base);
  return *internal_default_instance();
}


void FreezeBalanceContract::Clear() {
// @@protoc_insertion_point(message_clear_start:tronProtocol.FreezeBalanceContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&frozen_balance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resource_) -
      reinterpret_cast<char*>(&frozen_balance_)) + sizeof(resource_));
  _internal_metadata_.Clear();
}

bool FreezeBalanceContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tronProtocol.FreezeBalanceContract)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 frozen_balance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &frozen_balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 frozen_duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &frozen_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tronProtocol.ResourceCode resource = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_resource(static_cast< ::tronProtocol::ResourceCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes receiver_address = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_receiver_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tronProtocol.FreezeBalanceContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tronProtocol.FreezeBalanceContract)
  return false;
#undef DO_
}

void FreezeBalanceContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tronProtocol.FreezeBalanceContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  // int64 frozen_balance = 2;
  if (this->frozen_balance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->frozen_balance(), output);
  }

  // int64 frozen_duration = 3;
  if (this->frozen_duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->frozen_duration(), output);
  }

  // .tronProtocol.ResourceCode resource = 10;
  if (this->resource() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->resource(), output);
  }

  // bytes receiver_address = 15;
  if (this->receiver_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->receiver_address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tronProtocol.FreezeBalanceContract)
}

::google::protobuf::uint8* FreezeBalanceContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tronProtocol.FreezeBalanceContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  // int64 frozen_balance = 2;
  if (this->frozen_balance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->frozen_balance(), target);
  }

  // int64 frozen_duration = 3;
  if (this->frozen_duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->frozen_duration(), target);
  }

  // .tronProtocol.ResourceCode resource = 10;
  if (this->resource() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->resource(), target);
  }

  // bytes receiver_address = 15;
  if (this->receiver_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->receiver_address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tronProtocol.FreezeBalanceContract)
  return target;
}

size_t FreezeBalanceContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tronProtocol.FreezeBalanceContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // bytes receiver_address = 15;
  if (this->receiver_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->receiver_address());
  }

  // int64 frozen_balance = 2;
  if (this->frozen_balance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frozen_balance());
  }

  // int64 frozen_duration = 3;
  if (this->frozen_duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frozen_duration());
  }

  // .tronProtocol.ResourceCode resource = 10;
  if (this->resource() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->resource());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FreezeBalanceContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tronProtocol.FreezeBalanceContract)
  GOOGLE_DCHECK_NE(&from, this);
  const FreezeBalanceContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FreezeBalanceContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tronProtocol.FreezeBalanceContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tronProtocol.FreezeBalanceContract)
    MergeFrom(*source);
  }
}

void FreezeBalanceContract::MergeFrom(const FreezeBalanceContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tronProtocol.FreezeBalanceContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.receiver_address().size() > 0) {

    receiver_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receiver_address_);
  }
  if (from.frozen_balance() != 0) {
    set_frozen_balance(from.frozen_balance());
  }
  if (from.frozen_duration() != 0) {
    set_frozen_duration(from.frozen_duration());
  }
  if (from.resource() != 0) {
    set_resource(from.resource());
  }
}

void FreezeBalanceContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tronProtocol.FreezeBalanceContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FreezeBalanceContract::CopyFrom(const FreezeBalanceContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tronProtocol.FreezeBalanceContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FreezeBalanceContract::IsInitialized() const {
  return true;
}

void FreezeBalanceContract::Swap(FreezeBalanceContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FreezeBalanceContract::InternalSwap(FreezeBalanceContract* other) {
  using std::swap;
  owner_address_.Swap(&other->owner_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  receiver_address_.Swap(&other->receiver_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(frozen_balance_, other->frozen_balance_);
  swap(frozen_duration_, other->frozen_duration_);
  swap(resource_, other->resource_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FreezeBalanceContract::GetMetadata() const {
  protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnfreezeBalanceContract::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnfreezeBalanceContract::kOwnerAddressFieldNumber;
const int UnfreezeBalanceContract::kResourceFieldNumber;
const int UnfreezeBalanceContract::kReceiverAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnfreezeBalanceContract::UnfreezeBalanceContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Transaction_2eproto::scc_info_UnfreezeBalanceContract.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tronProtocol.UnfreezeBalanceContract)
}
UnfreezeBalanceContract::UnfreezeBalanceContract(const UnfreezeBalanceContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_address().size() > 0) {
    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  receiver_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.receiver_address().size() > 0) {
    receiver_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receiver_address_);
  }
  resource_ = from.resource_;
  // @@protoc_insertion_point(copy_constructor:tronProtocol.UnfreezeBalanceContract)
}

void UnfreezeBalanceContract::SharedCtor() {
  owner_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_ = 0;
}

UnfreezeBalanceContract::~UnfreezeBalanceContract() {
  // @@protoc_insertion_point(destructor:tronProtocol.UnfreezeBalanceContract)
  SharedDtor();
}

void UnfreezeBalanceContract::SharedDtor() {
  owner_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UnfreezeBalanceContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UnfreezeBalanceContract::descriptor() {
  ::protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnfreezeBalanceContract& UnfreezeBalanceContract::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Transaction_2eproto::scc_info_UnfreezeBalanceContract.base);
  return *internal_default_instance();
}


void UnfreezeBalanceContract::Clear() {
// @@protoc_insertion_point(message_clear_start:tronProtocol.UnfreezeBalanceContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_ = 0;
  _internal_metadata_.Clear();
}

bool UnfreezeBalanceContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tronProtocol.UnfreezeBalanceContract)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes owner_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_owner_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tronProtocol.ResourceCode resource = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_resource(static_cast< ::tronProtocol::ResourceCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes receiver_address = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_receiver_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tronProtocol.UnfreezeBalanceContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tronProtocol.UnfreezeBalanceContract)
  return false;
#undef DO_
}

void UnfreezeBalanceContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tronProtocol.UnfreezeBalanceContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->owner_address(), output);
  }

  // .tronProtocol.ResourceCode resource = 10;
  if (this->resource() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->resource(), output);
  }

  // bytes receiver_address = 15;
  if (this->receiver_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->receiver_address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tronProtocol.UnfreezeBalanceContract)
}

::google::protobuf::uint8* UnfreezeBalanceContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tronProtocol.UnfreezeBalanceContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->owner_address(), target);
  }

  // .tronProtocol.ResourceCode resource = 10;
  if (this->resource() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->resource(), target);
  }

  // bytes receiver_address = 15;
  if (this->receiver_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->receiver_address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tronProtocol.UnfreezeBalanceContract)
  return target;
}

size_t UnfreezeBalanceContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tronProtocol.UnfreezeBalanceContract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes owner_address = 1;
  if (this->owner_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->owner_address());
  }

  // bytes receiver_address = 15;
  if (this->receiver_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->receiver_address());
  }

  // .tronProtocol.ResourceCode resource = 10;
  if (this->resource() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->resource());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnfreezeBalanceContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tronProtocol.UnfreezeBalanceContract)
  GOOGLE_DCHECK_NE(&from, this);
  const UnfreezeBalanceContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnfreezeBalanceContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tronProtocol.UnfreezeBalanceContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tronProtocol.UnfreezeBalanceContract)
    MergeFrom(*source);
  }
}

void UnfreezeBalanceContract::MergeFrom(const UnfreezeBalanceContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tronProtocol.UnfreezeBalanceContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_address().size() > 0) {

    owner_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_address_);
  }
  if (from.receiver_address().size() > 0) {

    receiver_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receiver_address_);
  }
  if (from.resource() != 0) {
    set_resource(from.resource());
  }
}

void UnfreezeBalanceContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tronProtocol.UnfreezeBalanceContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnfreezeBalanceContract::CopyFrom(const UnfreezeBalanceContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tronProtocol.UnfreezeBalanceContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnfreezeBalanceContract::IsInitialized() const {
  return true;
}

void UnfreezeBalanceContract::Swap(UnfreezeBalanceContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnfreezeBalanceContract::InternalSwap(UnfreezeBalanceContract* other) {
  using std::swap;
  owner_address_.Swap(&other->owner_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  receiver_address_.Swap(&other->receiver_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(resource_, other->resource_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UnfreezeBalanceContract::GetMetadata() const {
  protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Contract::InitAsDefaultInstance() {
  ::tronProtocol::_Contract_default_instance_._instance.get_mutable()->parameter_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void Contract::clear_parameter() {
  if (GetArenaNoVirtual() == NULL && parameter_ != NULL) {
    delete parameter_;
  }
  parameter_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Contract::kTypeFieldNumber;
const int Contract::kParameterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Contract::Contract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Transaction_2eproto::scc_info_Contract.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tronProtocol.Contract)
}
Contract::Contract(const Contract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_parameter()) {
    parameter_ = new ::google::protobuf::Any(*from.parameter_);
  } else {
    parameter_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:tronProtocol.Contract)
}

void Contract::SharedCtor() {
  ::memset(&parameter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&parameter_)) + sizeof(type_));
}

Contract::~Contract() {
  // @@protoc_insertion_point(destructor:tronProtocol.Contract)
  SharedDtor();
}

void Contract::SharedDtor() {
  if (this != internal_default_instance()) delete parameter_;
}

void Contract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Contract::descriptor() {
  ::protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Contract& Contract::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Transaction_2eproto::scc_info_Contract.base);
  return *internal_default_instance();
}


void Contract::Clear() {
// @@protoc_insertion_point(message_clear_start:tronProtocol.Contract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && parameter_ != NULL) {
    delete parameter_;
  }
  parameter_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Contract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tronProtocol.Contract)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tronProtocol.Contract.ContractType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::tronProtocol::Contract_ContractType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any parameter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parameter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tronProtocol.Contract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tronProtocol.Contract)
  return false;
#undef DO_
}

void Contract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tronProtocol.Contract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tronProtocol.Contract.ContractType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .google.protobuf.Any parameter = 2;
  if (this->has_parameter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_parameter(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tronProtocol.Contract)
}

::google::protobuf::uint8* Contract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tronProtocol.Contract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tronProtocol.Contract.ContractType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .google.protobuf.Any parameter = 2;
  if (this->has_parameter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_parameter(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tronProtocol.Contract)
  return target;
}

size_t Contract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tronProtocol.Contract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Any parameter = 2;
  if (this->has_parameter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *parameter_);
  }

  // .tronProtocol.Contract.ContractType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Contract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tronProtocol.Contract)
  GOOGLE_DCHECK_NE(&from, this);
  const Contract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Contract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tronProtocol.Contract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tronProtocol.Contract)
    MergeFrom(*source);
  }
}

void Contract::MergeFrom(const Contract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tronProtocol.Contract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_parameter()) {
    mutable_parameter()->::google::protobuf::Any::MergeFrom(from.parameter());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Contract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tronProtocol.Contract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Contract::CopyFrom(const Contract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tronProtocol.Contract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Contract::IsInitialized() const {
  return true;
}

void Contract::Swap(Contract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Contract::InternalSwap(Contract* other) {
  using std::swap;
  swap(parameter_, other->parameter_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Contract::GetMetadata() const {
  protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void raw::InitAsDefaultInstance() {
  ::tronProtocol::_raw_default_instance_._instance.get_mutable()->contract_ = const_cast< ::tronProtocol::Contract*>(
      ::tronProtocol::Contract::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int raw::kRefBlockBytesFieldNumber;
const int raw::kRefBlockHashFieldNumber;
const int raw::kExpirationFieldNumber;
const int raw::kContractFieldNumber;
const int raw::kTimestampFieldNumber;
const int raw::kFeeLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

raw::raw()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Transaction_2eproto::scc_info_raw.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tronProtocol.raw)
}
raw::raw(const raw& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ref_block_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ref_block_bytes().size() > 0) {
    ref_block_bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ref_block_bytes_);
  }
  ref_block_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ref_block_hash().size() > 0) {
    ref_block_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ref_block_hash_);
  }
  if (from.has_contract()) {
    contract_ = new ::tronProtocol::Contract(*from.contract_);
  } else {
    contract_ = NULL;
  }
  ::memcpy(&expiration_, &from.expiration_,
    static_cast<size_t>(reinterpret_cast<char*>(&fee_limit_) -
    reinterpret_cast<char*>(&expiration_)) + sizeof(fee_limit_));
  // @@protoc_insertion_point(copy_constructor:tronProtocol.raw)
}

void raw::SharedCtor() {
  ref_block_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ref_block_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&contract_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fee_limit_) -
      reinterpret_cast<char*>(&contract_)) + sizeof(fee_limit_));
}

raw::~raw() {
  // @@protoc_insertion_point(destructor:tronProtocol.raw)
  SharedDtor();
}

void raw::SharedDtor() {
  ref_block_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ref_block_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete contract_;
}

void raw::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* raw::descriptor() {
  ::protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const raw& raw::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Transaction_2eproto::scc_info_raw.base);
  return *internal_default_instance();
}


void raw::Clear() {
// @@protoc_insertion_point(message_clear_start:tronProtocol.raw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ref_block_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ref_block_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && contract_ != NULL) {
    delete contract_;
  }
  contract_ = NULL;
  ::memset(&expiration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fee_limit_) -
      reinterpret_cast<char*>(&expiration_)) + sizeof(fee_limit_));
  _internal_metadata_.Clear();
}

bool raw::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tronProtocol.raw)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes ref_block_bytes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ref_block_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ref_block_hash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ref_block_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 expiration = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &expiration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tronProtocol.Contract contract = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_contract()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 fee_limit = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fee_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tronProtocol.raw)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tronProtocol.raw)
  return false;
#undef DO_
}

void raw::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tronProtocol.raw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ref_block_bytes = 1;
  if (this->ref_block_bytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->ref_block_bytes(), output);
  }

  // bytes ref_block_hash = 4;
  if (this->ref_block_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->ref_block_hash(), output);
  }

  // int64 expiration = 8;
  if (this->expiration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->expiration(), output);
  }

  // .tronProtocol.Contract contract = 11;
  if (this->has_contract()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_contract(), output);
  }

  // int64 timestamp = 14;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->timestamp(), output);
  }

  // int64 fee_limit = 18;
  if (this->fee_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->fee_limit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tronProtocol.raw)
}

::google::protobuf::uint8* raw::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tronProtocol.raw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ref_block_bytes = 1;
  if (this->ref_block_bytes().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->ref_block_bytes(), target);
  }

  // bytes ref_block_hash = 4;
  if (this->ref_block_hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->ref_block_hash(), target);
  }

  // int64 expiration = 8;
  if (this->expiration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->expiration(), target);
  }

  // .tronProtocol.Contract contract = 11;
  if (this->has_contract()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_contract(), deterministic, target);
  }

  // int64 timestamp = 14;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->timestamp(), target);
  }

  // int64 fee_limit = 18;
  if (this->fee_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->fee_limit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tronProtocol.raw)
  return target;
}

size_t raw::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tronProtocol.raw)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes ref_block_bytes = 1;
  if (this->ref_block_bytes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ref_block_bytes());
  }

  // bytes ref_block_hash = 4;
  if (this->ref_block_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ref_block_hash());
  }

  // .tronProtocol.Contract contract = 11;
  if (this->has_contract()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *contract_);
  }

  // int64 expiration = 8;
  if (this->expiration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->expiration());
  }

  // int64 timestamp = 14;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  // int64 fee_limit = 18;
  if (this->fee_limit() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->fee_limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void raw::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tronProtocol.raw)
  GOOGLE_DCHECK_NE(&from, this);
  const raw* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const raw>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tronProtocol.raw)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tronProtocol.raw)
    MergeFrom(*source);
  }
}

void raw::MergeFrom(const raw& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tronProtocol.raw)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ref_block_bytes().size() > 0) {

    ref_block_bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ref_block_bytes_);
  }
  if (from.ref_block_hash().size() > 0) {

    ref_block_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ref_block_hash_);
  }
  if (from.has_contract()) {
    mutable_contract()->::tronProtocol::Contract::MergeFrom(from.contract());
  }
  if (from.expiration() != 0) {
    set_expiration(from.expiration());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.fee_limit() != 0) {
    set_fee_limit(from.fee_limit());
  }
}

void raw::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tronProtocol.raw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void raw::CopyFrom(const raw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tronProtocol.raw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool raw::IsInitialized() const {
  return true;
}

void raw::Swap(raw* other) {
  if (other == this) return;
  InternalSwap(other);
}
void raw::InternalSwap(raw* other) {
  using std::swap;
  ref_block_bytes_.Swap(&other->ref_block_bytes_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ref_block_hash_.Swap(&other->ref_block_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(contract_, other->contract_);
  swap(expiration_, other->expiration_);
  swap(timestamp_, other->timestamp_);
  swap(fee_limit_, other->fee_limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata raw::GetMetadata() const {
  protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Transaction::InitAsDefaultInstance() {
  ::tronProtocol::_Transaction_default_instance_._instance.get_mutable()->raw_data_ = const_cast< ::tronProtocol::raw*>(
      ::tronProtocol::raw::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Transaction::kRawDataFieldNumber;
const int Transaction::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Transaction::Transaction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Transaction_2eproto::scc_info_Transaction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tronProtocol.Transaction)
}
Transaction::Transaction(const Transaction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.has_raw_data()) {
    raw_data_ = new ::tronProtocol::raw(*from.raw_data_);
  } else {
    raw_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tronProtocol.Transaction)
}

void Transaction::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raw_data_ = NULL;
}

Transaction::~Transaction() {
  // @@protoc_insertion_point(destructor:tronProtocol.Transaction)
  SharedDtor();
}

void Transaction::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete raw_data_;
}

void Transaction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Transaction::descriptor() {
  ::protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Transaction& Transaction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Transaction_2eproto::scc_info_Transaction.base);
  return *internal_default_instance();
}


void Transaction::Clear() {
// @@protoc_insertion_point(message_clear_start:tronProtocol.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && raw_data_ != NULL) {
    delete raw_data_;
  }
  raw_data_ = NULL;
  _internal_metadata_.Clear();
}

bool Transaction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tronProtocol.Transaction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tronProtocol.raw raw_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_raw_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tronProtocol.Transaction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tronProtocol.Transaction)
  return false;
#undef DO_
}

void Transaction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tronProtocol.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tronProtocol.raw raw_data = 1;
  if (this->has_raw_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_raw_data(), output);
  }

  // bytes signature = 2;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->signature(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tronProtocol.Transaction)
}

::google::protobuf::uint8* Transaction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tronProtocol.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tronProtocol.raw raw_data = 1;
  if (this->has_raw_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_raw_data(), deterministic, target);
  }

  // bytes signature = 2;
  if (this->signature().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->signature(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tronProtocol.Transaction)
  return target;
}

size_t Transaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tronProtocol.Transaction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes signature = 2;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->signature());
  }

  // .tronProtocol.raw raw_data = 1;
  if (this->has_raw_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *raw_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Transaction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tronProtocol.Transaction)
  GOOGLE_DCHECK_NE(&from, this);
  const Transaction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Transaction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tronProtocol.Transaction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tronProtocol.Transaction)
    MergeFrom(*source);
  }
}

void Transaction::MergeFrom(const Transaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tronProtocol.Transaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.has_raw_data()) {
    mutable_raw_data()->::tronProtocol::raw::MergeFrom(from.raw_data());
  }
}

void Transaction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tronProtocol.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Transaction::CopyFrom(const Transaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tronProtocol.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Transaction::IsInitialized() const {
  return true;
}

void Transaction::Swap(Transaction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Transaction::InternalSwap(Transaction* other) {
  using std::swap;
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(raw_data_, other->raw_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Transaction::GetMetadata() const {
  protobuf_Transaction_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Transaction_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tronProtocol
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tronProtocol::TransferContract* Arena::CreateMaybeMessage< ::tronProtocol::TransferContract >(Arena* arena) {
  return Arena::CreateInternal< ::tronProtocol::TransferContract >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tronProtocol::TransferAssetContract* Arena::CreateMaybeMessage< ::tronProtocol::TransferAssetContract >(Arena* arena) {
  return Arena::CreateInternal< ::tronProtocol::TransferAssetContract >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tronProtocol::TriggerSmartContract* Arena::CreateMaybeMessage< ::tronProtocol::TriggerSmartContract >(Arena* arena) {
  return Arena::CreateInternal< ::tronProtocol::TriggerSmartContract >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tronProtocol::FreezeBalanceContract* Arena::CreateMaybeMessage< ::tronProtocol::FreezeBalanceContract >(Arena* arena) {
  return Arena::CreateInternal< ::tronProtocol::FreezeBalanceContract >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tronProtocol::UnfreezeBalanceContract* Arena::CreateMaybeMessage< ::tronProtocol::UnfreezeBalanceContract >(Arena* arena) {
  return Arena::CreateInternal< ::tronProtocol::UnfreezeBalanceContract >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tronProtocol::Contract* Arena::CreateMaybeMessage< ::tronProtocol::Contract >(Arena* arena) {
  return Arena::CreateInternal< ::tronProtocol::Contract >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tronProtocol::raw* Arena::CreateMaybeMessage< ::tronProtocol::raw >(Arena* arena) {
  return Arena::CreateInternal< ::tronProtocol::raw >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tronProtocol::Transaction* Arena::CreateMaybeMessage< ::tronProtocol::Transaction >(Arena* arena) {
  return Arena::CreateInternal< ::tronProtocol::Transaction >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
