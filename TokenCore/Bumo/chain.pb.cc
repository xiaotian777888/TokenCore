// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chain.proto

#include "chain.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_chain_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AssetKey;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AssetProperty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConsensusValueValidation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Contract;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LedgerHeader;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OperationIssueAsset;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OperationLog;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OperationPayCoin;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OperationSetMetadata;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OperationTypeThreshold;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Signer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Trigger_OperationTrigger;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AccountThreshold;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Asset;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OperationPayAsset;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OperationSetSignerWeight;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OperationSetThreshold;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Transaction;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TransactionEnvSet;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Trigger;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_AccountPrivilege;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_OperationSetPrivilege;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_OperationCreateAccount;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_TransactionEnv;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chain_2eproto ::google::protobuf::internal::SCCInfo<9> scc_info_Operation;
}  // namespace protobuf_chain_2eproto
namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_KeyPair;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LedgerUpgrade;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Signature;
}  // namespace protobuf_common_2eproto
namespace bumoProtocol {
class AccountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Account>
      _instance;
} _Account_default_instance_;
class AssetKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssetKey>
      _instance;
} _AssetKey_default_instance_;
class AssetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Asset>
      _instance;
} _Asset_default_instance_;
class AssetPropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssetProperty>
      _instance;
} _AssetProperty_default_instance_;
class AssetStoreDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssetStore>
      _instance;
} _AssetStore_default_instance_;
class LedgerHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LedgerHeader>
      _instance;
} _LedgerHeader_default_instance_;
class LedgerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ledger>
      _instance;
} _Ledger_default_instance_;
class OperationPayAssetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationPayAsset>
      _instance;
} _OperationPayAsset_default_instance_;
class OperationTypeThresholdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationTypeThreshold>
      _instance;
} _OperationTypeThreshold_default_instance_;
class AccountPrivilegeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountPrivilege>
      _instance;
} _AccountPrivilege_default_instance_;
class AccountThresholdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountThreshold>
      _instance;
} _AccountThreshold_default_instance_;
class OperationIssueAssetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationIssueAsset>
      _instance;
} _OperationIssueAsset_default_instance_;
class OperationPayCoinDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationPayCoin>
      _instance;
} _OperationPayCoin_default_instance_;
class OperationSetSignerWeightDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationSetSignerWeight>
      _instance;
} _OperationSetSignerWeight_default_instance_;
class OperationLogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationLog>
      _instance;
} _OperationLog_default_instance_;
class OperationSetPrivilegeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationSetPrivilege>
      _instance;
} _OperationSetPrivilege_default_instance_;
class OperationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Operation>
      _instance;
} _Operation_default_instance_;
class OperationSetThresholdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationSetThreshold>
      _instance;
} _OperationSetThreshold_default_instance_;
class TransactionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Transaction>
      _instance;
} _Transaction_default_instance_;
class SignerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Signer>
      _instance;
} _Signer_default_instance_;
class Trigger_OperationTriggerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Trigger_OperationTrigger>
      _instance;
} _Trigger_OperationTrigger_default_instance_;
class TriggerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Trigger>
      _instance;
} _Trigger_default_instance_;
class TransactionEnvDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransactionEnv>
      _instance;
} _TransactionEnv_default_instance_;
class TransactionEnvStoreDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransactionEnvStore>
      _instance;
} _TransactionEnvStore_default_instance_;
class TransactionEnvSetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransactionEnvSet>
      _instance;
} _TransactionEnvSet_default_instance_;
class ConsensusValueValidationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConsensusValueValidation>
      _instance;
} _ConsensusValueValidation_default_instance_;
class ConsensusValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConsensusValue>
      _instance;
} _ConsensusValue_default_instance_;
class ContractDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Contract>
      _instance;
} _Contract_default_instance_;
class OperationCreateAccountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationCreateAccount>
      _instance;
} _OperationCreateAccount_default_instance_;
class OperationSetMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperationSetMetadata>
      _instance;
} _OperationSetMetadata_default_instance_;
}  // namespace bumoProtocol
namespace protobuf_chain_2eproto {
static void InitDefaultsAccount() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_Account_default_instance_;
    new (ptr) ::bumoProtocol::Account();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::Account::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Account =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAccount}, {
      &protobuf_chain_2eproto::scc_info_AccountPrivilege.base,
      &protobuf_chain_2eproto::scc_info_Contract.base,}};

static void InitDefaultsAssetKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_AssetKey_default_instance_;
    new (ptr) ::bumoProtocol::AssetKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::AssetKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AssetKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAssetKey}, {}};

static void InitDefaultsAsset() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_Asset_default_instance_;
    new (ptr) ::bumoProtocol::Asset();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::Asset::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Asset =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAsset}, {
      &protobuf_chain_2eproto::scc_info_AssetKey.base,}};

static void InitDefaultsAssetProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_AssetProperty_default_instance_;
    new (ptr) ::bumoProtocol::AssetProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::AssetProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AssetProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAssetProperty}, {}};

static void InitDefaultsAssetStore() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_AssetStore_default_instance_;
    new (ptr) ::bumoProtocol::AssetStore();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::AssetStore::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AssetStore =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAssetStore}, {
      &protobuf_chain_2eproto::scc_info_AssetKey.base,
      &protobuf_chain_2eproto::scc_info_AssetProperty.base,}};

static void InitDefaultsLedgerHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_LedgerHeader_default_instance_;
    new (ptr) ::bumoProtocol::LedgerHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::LedgerHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LedgerHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLedgerHeader}, {}};

static void InitDefaultsLedger() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_Ledger_default_instance_;
    new (ptr) ::bumoProtocol::Ledger();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::Ledger::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Ledger =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLedger}, {
      &protobuf_chain_2eproto::scc_info_LedgerHeader.base,
      &protobuf_chain_2eproto::scc_info_TransactionEnv.base,}};

static void InitDefaultsOperationPayAsset() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_OperationPayAsset_default_instance_;
    new (ptr) ::bumoProtocol::OperationPayAsset();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::OperationPayAsset::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OperationPayAsset =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOperationPayAsset}, {
      &protobuf_chain_2eproto::scc_info_Asset.base,}};

static void InitDefaultsOperationTypeThreshold() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_OperationTypeThreshold_default_instance_;
    new (ptr) ::bumoProtocol::OperationTypeThreshold();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::OperationTypeThreshold::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OperationTypeThreshold =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOperationTypeThreshold}, {}};

static void InitDefaultsAccountPrivilege() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_AccountPrivilege_default_instance_;
    new (ptr) ::bumoProtocol::AccountPrivilege();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::AccountPrivilege::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AccountPrivilege =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAccountPrivilege}, {
      &protobuf_chain_2eproto::scc_info_Signer.base,
      &protobuf_chain_2eproto::scc_info_AccountThreshold.base,}};

static void InitDefaultsAccountThreshold() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_AccountThreshold_default_instance_;
    new (ptr) ::bumoProtocol::AccountThreshold();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::AccountThreshold::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AccountThreshold =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAccountThreshold}, {
      &protobuf_chain_2eproto::scc_info_OperationTypeThreshold.base,}};

static void InitDefaultsOperationIssueAsset() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_OperationIssueAsset_default_instance_;
    new (ptr) ::bumoProtocol::OperationIssueAsset();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::OperationIssueAsset::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OperationIssueAsset =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOperationIssueAsset}, {}};

static void InitDefaultsOperationPayCoin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_OperationPayCoin_default_instance_;
    new (ptr) ::bumoProtocol::OperationPayCoin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::OperationPayCoin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OperationPayCoin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOperationPayCoin}, {}};

static void InitDefaultsOperationSetSignerWeight() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_OperationSetSignerWeight_default_instance_;
    new (ptr) ::bumoProtocol::OperationSetSignerWeight();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::OperationSetSignerWeight::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OperationSetSignerWeight =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOperationSetSignerWeight}, {
      &protobuf_chain_2eproto::scc_info_Signer.base,}};

static void InitDefaultsOperationLog() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_OperationLog_default_instance_;
    new (ptr) ::bumoProtocol::OperationLog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::OperationLog::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OperationLog =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOperationLog}, {}};

static void InitDefaultsOperationSetPrivilege() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_OperationSetPrivilege_default_instance_;
    new (ptr) ::bumoProtocol::OperationSetPrivilege();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::OperationSetPrivilege::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_OperationSetPrivilege =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsOperationSetPrivilege}, {
      &protobuf_chain_2eproto::scc_info_Signer.base,
      &protobuf_chain_2eproto::scc_info_OperationTypeThreshold.base,}};

static void InitDefaultsOperation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_Operation_default_instance_;
    new (ptr) ::bumoProtocol::Operation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::Operation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_Operation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsOperation}, {
      &protobuf_chain_2eproto::scc_info_OperationCreateAccount.base,
      &protobuf_chain_2eproto::scc_info_OperationIssueAsset.base,
      &protobuf_chain_2eproto::scc_info_OperationPayAsset.base,
      &protobuf_chain_2eproto::scc_info_OperationSetMetadata.base,
      &protobuf_chain_2eproto::scc_info_OperationSetSignerWeight.base,
      &protobuf_chain_2eproto::scc_info_OperationSetThreshold.base,
      &protobuf_chain_2eproto::scc_info_OperationPayCoin.base,
      &protobuf_chain_2eproto::scc_info_OperationLog.base,
      &protobuf_chain_2eproto::scc_info_OperationSetPrivilege.base,}};

static void InitDefaultsOperationSetThreshold() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_OperationSetThreshold_default_instance_;
    new (ptr) ::bumoProtocol::OperationSetThreshold();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::OperationSetThreshold::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OperationSetThreshold =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOperationSetThreshold}, {
      &protobuf_chain_2eproto::scc_info_OperationTypeThreshold.base,}};

static void InitDefaultsTransaction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_Transaction_default_instance_;
    new (ptr) ::bumoProtocol::Transaction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::Transaction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Transaction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTransaction}, {
      &protobuf_chain_2eproto::scc_info_Operation.base,}};

static void InitDefaultsSigner() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_Signer_default_instance_;
    new (ptr) ::bumoProtocol::Signer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::Signer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Signer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSigner}, {}};

static void InitDefaultsTrigger_OperationTrigger() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_Trigger_OperationTrigger_default_instance_;
    new (ptr) ::bumoProtocol::Trigger_OperationTrigger();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::Trigger_OperationTrigger::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Trigger_OperationTrigger =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTrigger_OperationTrigger}, {}};

static void InitDefaultsTrigger() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_Trigger_default_instance_;
    new (ptr) ::bumoProtocol::Trigger();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::Trigger::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Trigger =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTrigger}, {
      &protobuf_chain_2eproto::scc_info_Trigger_OperationTrigger.base,}};

static void InitDefaultsTransactionEnv() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_TransactionEnv_default_instance_;
    new (ptr) ::bumoProtocol::TransactionEnv();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::TransactionEnv::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_TransactionEnv =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsTransactionEnv}, {
      &protobuf_chain_2eproto::scc_info_Transaction.base,
      &protobuf_common_2eproto::scc_info_Signature.base,
      &protobuf_chain_2eproto::scc_info_Trigger.base,}};

static void InitDefaultsTransactionEnvStore() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_TransactionEnvStore_default_instance_;
    new (ptr) ::bumoProtocol::TransactionEnvStore();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::TransactionEnvStore::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TransactionEnvStore =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTransactionEnvStore}, {
      &protobuf_chain_2eproto::scc_info_TransactionEnv.base,}};

static void InitDefaultsTransactionEnvSet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_TransactionEnvSet_default_instance_;
    new (ptr) ::bumoProtocol::TransactionEnvSet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::TransactionEnvSet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TransactionEnvSet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTransactionEnvSet}, {
      &protobuf_chain_2eproto::scc_info_TransactionEnv.base,}};

static void InitDefaultsConsensusValueValidation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_ConsensusValueValidation_default_instance_;
    new (ptr) ::bumoProtocol::ConsensusValueValidation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::ConsensusValueValidation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConsensusValueValidation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConsensusValueValidation}, {}};

static void InitDefaultsConsensusValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_ConsensusValue_default_instance_;
    new (ptr) ::bumoProtocol::ConsensusValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::ConsensusValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ConsensusValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsConsensusValue}, {
      &protobuf_chain_2eproto::scc_info_TransactionEnvSet.base,
      &protobuf_common_2eproto::scc_info_LedgerUpgrade.base,
      &protobuf_chain_2eproto::scc_info_ConsensusValueValidation.base,}};

static void InitDefaultsContract() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_Contract_default_instance_;
    new (ptr) ::bumoProtocol::Contract();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::Contract::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Contract =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsContract}, {}};

static void InitDefaultsOperationCreateAccount() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_OperationCreateAccount_default_instance_;
    new (ptr) ::bumoProtocol::OperationCreateAccount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::OperationCreateAccount::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_OperationCreateAccount =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsOperationCreateAccount}, {
      &protobuf_chain_2eproto::scc_info_Contract.base,
      &protobuf_chain_2eproto::scc_info_AccountPrivilege.base,
      &protobuf_common_2eproto::scc_info_KeyPair.base,}};

static void InitDefaultsOperationSetMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_OperationSetMetadata_default_instance_;
    new (ptr) ::bumoProtocol::OperationSetMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::OperationSetMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OperationSetMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOperationSetMetadata}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Account.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AssetKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Asset.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AssetProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AssetStore.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LedgerHeader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ledger.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OperationPayAsset.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OperationTypeThreshold.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccountPrivilege.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccountThreshold.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OperationIssueAsset.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OperationPayCoin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OperationSetSignerWeight.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OperationLog.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OperationSetPrivilege.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Operation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OperationSetThreshold.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Transaction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Signer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Trigger_OperationTrigger.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Trigger.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransactionEnv.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransactionEnvStore.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransactionEnvSet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConsensusValueValidation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConsensusValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Contract.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OperationCreateAccount.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OperationSetMetadata.base);
}

::google::protobuf::Metadata file_level_metadata[30];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Account, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Account, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Account, nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Account, priv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Account, metadatas_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Account, assets_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Account, contract_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Account, balance_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AssetKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AssetKey, issuer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AssetKey, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AssetKey, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Asset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Asset, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Asset, amount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AssetProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AssetProperty, decimal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AssetProperty, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AssetProperty, max_supply_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AssetProperty, issued_amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AssetProperty, fee_percent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AssetStore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AssetStore, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AssetStore, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AssetStore, property_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::LedgerHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::LedgerHeader, seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::LedgerHeader, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::LedgerHeader, previous_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::LedgerHeader, account_tree_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::LedgerHeader, close_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::LedgerHeader, consensus_value_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::LedgerHeader, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::LedgerHeader, tx_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::LedgerHeader, validators_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::LedgerHeader, fees_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::LedgerHeader, reserve_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Ledger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Ledger, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Ledger, transaction_envs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationPayAsset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationPayAsset, dest_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationPayAsset, asset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationPayAsset, input_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationTypeThreshold, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationTypeThreshold, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationTypeThreshold, threshold_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AccountPrivilege, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AccountPrivilege, master_weight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AccountPrivilege, signers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AccountPrivilege, thresholds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AccountThreshold, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AccountThreshold, tx_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::AccountThreshold, type_thresholds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationIssueAsset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationIssueAsset, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationIssueAsset, amount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationPayCoin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationPayCoin, dest_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationPayCoin, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationPayCoin, input_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationSetSignerWeight, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationSetSignerWeight, master_weight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationSetSignerWeight, signers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationLog, topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationLog, datas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationSetPrivilege, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationSetPrivilege, master_weight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationSetPrivilege, signers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationSetPrivilege, tx_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationSetPrivilege, type_thresholds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Operation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Operation, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Operation, source_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Operation, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Operation, create_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Operation, issue_asset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Operation, pay_asset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Operation, set_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Operation, set_signer_weight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Operation, set_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Operation, pay_coin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Operation, log_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Operation, set_privilege_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationSetThreshold, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationSetThreshold, tx_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationSetThreshold, type_thresholds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Transaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Transaction, source_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Transaction, nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Transaction, fee_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Transaction, gas_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Transaction, ceil_ledger_seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Transaction, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Transaction, operations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Signer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Signer, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Signer, weight_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Trigger_OperationTrigger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Trigger_OperationTrigger, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Trigger_OperationTrigger, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Trigger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Trigger, transaction_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Trigger, ledger_seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Trigger, transaction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::TransactionEnv, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::TransactionEnv, transaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::TransactionEnv, signatures_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::TransactionEnv, trigger_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::TransactionEnvStore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::TransactionEnvStore, transaction_env_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::TransactionEnvStore, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::TransactionEnvStore, error_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::TransactionEnvStore, ledger_seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::TransactionEnvStore, close_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::TransactionEnvStore, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::TransactionEnvStore, actual_fee_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::TransactionEnvSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::TransactionEnvSet, txs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::ConsensusValueValidation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::ConsensusValueValidation, expire_tx_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::ConsensusValueValidation, error_tx_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::ConsensusValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::ConsensusValue, txset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::ConsensusValue, close_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::ConsensusValue, previous_proof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::ConsensusValue, ledger_seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::ConsensusValue, previous_ledger_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::ConsensusValue, ledger_upgrade_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::ConsensusValue, validation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Contract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Contract, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Contract, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationCreateAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationCreateAccount, dest_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationCreateAccount, contract_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationCreateAccount, priv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationCreateAccount, metadatas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationCreateAccount, init_balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationCreateAccount, init_input_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationSetMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationSetMetadata, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationSetMetadata, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationSetMetadata, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::OperationSetMetadata, delete_flag_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bumoProtocol::Account)},
  { 12, -1, sizeof(::bumoProtocol::AssetKey)},
  { 20, -1, sizeof(::bumoProtocol::Asset)},
  { 27, -1, sizeof(::bumoProtocol::AssetProperty)},
  { 37, -1, sizeof(::bumoProtocol::AssetStore)},
  { 45, -1, sizeof(::bumoProtocol::LedgerHeader)},
  { 61, -1, sizeof(::bumoProtocol::Ledger)},
  { 68, -1, sizeof(::bumoProtocol::OperationPayAsset)},
  { 76, -1, sizeof(::bumoProtocol::OperationTypeThreshold)},
  { 83, -1, sizeof(::bumoProtocol::AccountPrivilege)},
  { 91, -1, sizeof(::bumoProtocol::AccountThreshold)},
  { 98, -1, sizeof(::bumoProtocol::OperationIssueAsset)},
  { 105, -1, sizeof(::bumoProtocol::OperationPayCoin)},
  { 113, -1, sizeof(::bumoProtocol::OperationSetSignerWeight)},
  { 120, -1, sizeof(::bumoProtocol::OperationLog)},
  { 127, -1, sizeof(::bumoProtocol::OperationSetPrivilege)},
  { 136, -1, sizeof(::bumoProtocol::Operation)},
  { 153, -1, sizeof(::bumoProtocol::OperationSetThreshold)},
  { 160, -1, sizeof(::bumoProtocol::Transaction)},
  { 172, -1, sizeof(::bumoProtocol::Signer)},
  { 179, -1, sizeof(::bumoProtocol::Trigger_OperationTrigger)},
  { 186, -1, sizeof(::bumoProtocol::Trigger)},
  { 194, -1, sizeof(::bumoProtocol::TransactionEnv)},
  { 202, -1, sizeof(::bumoProtocol::TransactionEnvStore)},
  { 214, -1, sizeof(::bumoProtocol::TransactionEnvSet)},
  { 220, -1, sizeof(::bumoProtocol::ConsensusValueValidation)},
  { 227, -1, sizeof(::bumoProtocol::ConsensusValue)},
  { 239, -1, sizeof(::bumoProtocol::Contract)},
  { 246, -1, sizeof(::bumoProtocol::OperationCreateAccount)},
  { 257, -1, sizeof(::bumoProtocol::OperationSetMetadata)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_Account_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_AssetKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_Asset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_AssetProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_AssetStore_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_LedgerHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_Ledger_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_OperationPayAsset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_OperationTypeThreshold_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_AccountPrivilege_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_AccountThreshold_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_OperationIssueAsset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_OperationPayCoin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_OperationSetSignerWeight_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_OperationLog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_OperationSetPrivilege_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_Operation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_OperationSetThreshold_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_Transaction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_Signer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_Trigger_OperationTrigger_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_Trigger_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_TransactionEnv_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_TransactionEnvStore_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_TransactionEnvSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_ConsensusValueValidation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_ConsensusValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_Contract_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_OperationCreateAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_OperationSetMetadata_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "chain.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 30);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013chain.proto\022\014bumoProtocol\032\014common.prot"
      "o\"\277\001\n\007Account\022\017\n\007address\030\001 \001(\t\022\r\n\005nonce\030"
      "\002 \001(\003\022,\n\004priv\030\003 \001(\0132\036.bumoProtocol.Accou"
      "ntPrivilege\022\026\n\016metadatas_hash\030\004 \001(\014\022\023\n\013a"
      "ssets_hash\030\005 \001(\014\022(\n\010contract\030\006 \001(\0132\026.bum"
      "oProtocol.Contract\022\017\n\007balance\030\007 \001(\003\"6\n\010A"
      "ssetKey\022\016\n\006issuer\030\001 \001(\t\022\014\n\004code\030\002 \001(\t\022\014\n"
      "\004type\030\003 \001(\005\"<\n\005Asset\022#\n\003key\030\001 \001(\0132\026.bumo"
      "Protocol.AssetKey\022\016\n\006amount\030\002 \001(\003\"u\n\rAss"
      "etProperty\022\017\n\007decimal\030\001 \001(\005\022\023\n\013descripti"
      "on\030\002 \001(\t\022\022\n\nmax_supply\030\003 \001(\003\022\025\n\rissued_a"
      "mount\030\004 \001(\003\022\023\n\013fee_percent\030\005 \001(\005\"p\n\nAsse"
      "tStore\022#\n\003key\030\001 \001(\0132\026.bumoProtocol.Asset"
      "Key\022\016\n\006amount\030\002 \001(\003\022-\n\010property\030\003 \001(\0132\033."
      "bumoProtocol.AssetProperty\"\355\001\n\014LedgerHea"
      "der\022\013\n\003seq\030\001 \001(\003\022\014\n\004hash\030\002 \001(\014\022\025\n\rprevio"
      "us_hash\030\003 \001(\014\022\031\n\021account_tree_hash\030\004 \001(\014"
      "\022\022\n\nclose_time\030\005 \001(\003\022\034\n\024consensus_value_"
      "hash\030\006 \001(\014\022\017\n\007version\030\007 \001(\003\022\020\n\010tx_count\030"
      "\010 \001(\003\022\027\n\017validators_hash\030\t \001(\014\022\021\n\tfees_h"
      "ash\030\n \001(\014\022\017\n\007reserve\030\013 \001(\t\"l\n\006Ledger\022*\n\006"
      "header\030\001 \001(\0132\032.bumoProtocol.LedgerHeader"
      "\0226\n\020transaction_envs\030\002 \003(\0132\034.bumoProtoco"
      "l.TransactionEnv\"\\\n\021OperationPayAsset\022\024\n"
      "\014dest_address\030\001 \001(\t\022\"\n\005asset\030\002 \001(\0132\023.bum"
      "oProtocol.Asset\022\r\n\005input\030\003 \001(\t\"W\n\026Operat"
      "ionTypeThreshold\022*\n\004type\030\001 \001(\0162\034.bumoPro"
      "tocol.Operation.Type\022\021\n\tthreshold\030\002 \001(\003\""
      "\204\001\n\020AccountPrivilege\022\025\n\rmaster_weight\030\001 "
      "\001(\003\022%\n\007signers\030\002 \003(\0132\024.bumoProtocol.Sign"
      "er\0222\n\nthresholds\030\003 \001(\0132\036.bumoProtocol.Ac"
      "countThreshold\"g\n\020AccountThreshold\022\024\n\014tx"
      "_threshold\030\001 \001(\003\022=\n\017type_thresholds\030\002 \003("
      "\0132$.bumoProtocol.OperationTypeThreshold\""
      "3\n\023OperationIssueAsset\022\014\n\004code\030\001 \001(\t\022\016\n\006"
      "amount\030\002 \001(\003\"G\n\020OperationPayCoin\022\024\n\014dest"
      "_address\030\001 \001(\t\022\016\n\006amount\030\002 \001(\003\022\r\n\005input\030"
      "\003 \001(\t\"X\n\030OperationSetSignerWeight\022\025\n\rmas"
      "ter_weight\030\001 \001(\003\022%\n\007signers\030\002 \003(\0132\024.bumo"
      "Protocol.Signer\",\n\014OperationLog\022\r\n\005topic"
      "\030\001 \001(\t\022\r\n\005datas\030\002 \003(\t\"\252\001\n\025OperationSetPr"
      "ivilege\022\025\n\rmaster_weight\030\001 \001(\t\022%\n\007signer"
      "s\030\002 \003(\0132\024.bumoProtocol.Signer\022\024\n\014tx_thre"
      "shold\030\003 \001(\t\022=\n\017type_thresholds\030\004 \003(\0132$.b"
      "umoProtocol.OperationTypeThreshold\"\213\006\n\tO"
      "peration\022*\n\004type\030\001 \001(\0162\034.bumoProtocol.Op"
      "eration.Type\022\026\n\016source_address\030\002 \001(\t\022\020\n\010"
      "metadata\030\003 \001(\014\022<\n\016create_account\030\004 \001(\0132$"
      ".bumoProtocol.OperationCreateAccount\0226\n\013"
      "issue_asset\030\005 \001(\0132!.bumoProtocol.Operati"
      "onIssueAsset\0222\n\tpay_asset\030\006 \001(\0132\037.bumoPr"
      "otocol.OperationPayAsset\0228\n\014set_metadata"
      "\030\007 \001(\0132\".bumoProtocol.OperationSetMetada"
      "ta\022A\n\021set_signer_weight\030\010 \001(\0132&.bumoProt"
      "ocol.OperationSetSignerWeight\022:\n\rset_thr"
      "eshold\030\t \001(\0132#.bumoProtocol.OperationSet"
      "Threshold\0220\n\010pay_coin\030\n \001(\0132\036.bumoProtoc"
      "ol.OperationPayCoin\022\'\n\003log\030\013 \001(\0132\032.bumoP"
      "rotocol.OperationLog\022:\n\rset_privilege\030\014 "
      "\001(\0132#.bumoProtocol.OperationSetPrivilege"
      "\"\255\001\n\004Type\022\013\n\007UNKNOWN\020\000\022\022\n\016CREATE_ACCOUNT"
      "\020\001\022\017\n\013ISSUE_ASSET\020\002\022\r\n\tPAY_ASSET\020\003\022\020\n\014SE"
      "T_METADATA\020\004\022\025\n\021SET_SIGNER_WEIGHT\020\005\022\021\n\rS"
      "ET_THRESHOLD\020\006\022\014\n\010PAY_COIN\020\007\022\007\n\003LOG\020\010\022\021\n"
      "\rSET_PRIVILEGE\020\t\"l\n\025OperationSetThreshol"
      "d\022\024\n\014tx_threshold\030\001 \001(\003\022=\n\017type_threshol"
      "ds\030\002 \003(\0132$.bumoProtocol.OperationTypeThr"
      "eshold\"\331\001\n\013Transaction\022\026\n\016source_address"
      "\030\001 \001(\t\022\r\n\005nonce\030\002 \001(\003\022\021\n\tfee_limit\030\003 \001(\003"
      "\022\021\n\tgas_price\030\004 \001(\003\022\027\n\017ceil_ledger_seq\030\005"
      " \001(\003\022\020\n\010metadata\030\006 \001(\014\022+\n\noperations\030\007 \003"
      "(\0132\027.bumoProtocol.Operation\"%\n\005Limit\022\013\n\007"
      "UNKNOWN\020\000\022\017\n\nOPERATIONS\020\350\007\"O\n\006Signer\022\017\n\007"
      "address\030\001 \001(\t\022\016\n\006weight\030\002 \001(\003\"$\n\005Limit\022\017"
      "\n\013SIGNER_NONE\020\000\022\n\n\006SIGNER\020d\"\221\002\n\007Trigger\022"
      "\?\n\020transaction_type\030\001 \001(\0162%.bumoProtocol"
      ".Trigger.TransactionType\022\022\n\nledger_seq\030\002"
      " \001(\003\022;\n\013transaction\030\003 \001(\0132&.bumoProtocol"
      ".Trigger.OperationTrigger\032/\n\020OperationTr"
      "igger\022\014\n\004hash\030\001 \001(\014\022\r\n\005index\030\002 \001(\003\"C\n\017Tr"
      "ansactionType\022\026\n\022NORMAL_TRANSACTION\020\000\022\030\n"
      "\024CONTRACT_TRANSACTION\020\001\"\225\001\n\016TransactionE"
      "nv\022.\n\013transaction\030\001 \001(\0132\031.bumoProtocol.T"
      "ransaction\022+\n\nsignatures\030\002 \003(\0132\027.bumoPro"
      "tocol.Signature\022&\n\007trigger\030\003 \001(\0132\025.bumoP"
      "rotocol.Trigger\"\276\001\n\023TransactionEnvStore\022"
      "5\n\017transaction_env\030\001 \001(\0132\034.bumoProtocol."
      "TransactionEnv\022\022\n\nerror_code\030\002 \001(\005\022\022\n\ner"
      "ror_desc\030\003 \001(\t\022\022\n\nledger_seq\030\004 \001(\003\022\022\n\ncl"
      "ose_time\030\005 \001(\003\022\014\n\004hash\030\006 \001(\014\022\022\n\nactual_f"
      "ee\030\007 \001(\003\">\n\021TransactionEnvSet\022)\n\003txs\030\002 \003"
      "(\0132\034.bumoProtocol.TransactionEnv\"G\n\030Cons"
      "ensusValueValidation\022\025\n\rexpire_tx_ids\030\001 "
      "\003(\005\022\024\n\014error_tx_ids\030\002 \003(\005\"\217\002\n\016ConsensusV"
      "alue\022.\n\005txset\030\001 \001(\0132\037.bumoProtocol.Trans"
      "actionEnvSet\022\022\n\nclose_time\030\002 \001(\003\022\026\n\016prev"
      "ious_proof\030\003 \001(\014\022\022\n\nledger_seq\030\004 \001(\003\022\034\n\024"
      "previous_ledger_hash\030\005 \001(\014\0223\n\016ledger_upg"
      "rade\030\006 \001(\0132\033.bumoProtocol.LedgerUpgrade\022"
      ":\n\nvalidation\030\007 \001(\0132&.bumoProtocol.Conse"
      "nsusValueValidation\"n\n\010Contract\0221\n\004type\030"
      "\001 \001(\0162#.bumoProtocol.Contract.ContractTy"
      "pe\022\017\n\007payload\030\002 \001(\t\"\036\n\014ContractType\022\016\n\nJ"
      "AVASCRIPT\020\000\"\332\001\n\026OperationCreateAccount\022\024"
      "\n\014dest_address\030\001 \001(\t\022(\n\010contract\030\002 \001(\0132\026"
      ".bumoProtocol.Contract\022,\n\004priv\030\003 \001(\0132\036.b"
      "umoProtocol.AccountPrivilege\022(\n\tmetadata"
      "s\030\004 \003(\0132\025.bumoProtocol.KeyPair\022\024\n\014init_b"
      "alance\030\005 \001(\003\022\022\n\ninit_input\030\006 \001(\t\"X\n\024Oper"
      "ationSetMetadata\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002"
      " \001(\t\022\017\n\007version\030\003 \001(\003\022\023\n\013delete_flag\030\004 \001"
      "(\010*#\n\005Limit\022\013\n\007UNKNOWN\020\000\022\r\n\tSIGNATURE\020dB"
      "\"\n io.bumo.sdk.core.extend.protobufb\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4523);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "chain.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_chain_2eproto
namespace bumoProtocol {
const ::google::protobuf::EnumDescriptor* Operation_Type_descriptor() {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_chain_2eproto::file_level_enum_descriptors[0];
}
bool Operation_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Operation_Type Operation::UNKNOWN;
const Operation_Type Operation::CREATE_ACCOUNT;
const Operation_Type Operation::ISSUE_ASSET;
const Operation_Type Operation::PAY_ASSET;
const Operation_Type Operation::SET_METADATA;
const Operation_Type Operation::SET_SIGNER_WEIGHT;
const Operation_Type Operation::SET_THRESHOLD;
const Operation_Type Operation::PAY_COIN;
const Operation_Type Operation::LOG;
const Operation_Type Operation::SET_PRIVILEGE;
const Operation_Type Operation::Type_MIN;
const Operation_Type Operation::Type_MAX;
const int Operation::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Transaction_Limit_descriptor() {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_chain_2eproto::file_level_enum_descriptors[1];
}
bool Transaction_Limit_IsValid(int value) {
  switch (value) {
    case 0:
    case 1000:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Transaction_Limit Transaction::UNKNOWN;
const Transaction_Limit Transaction::OPERATIONS;
const Transaction_Limit Transaction::Limit_MIN;
const Transaction_Limit Transaction::Limit_MAX;
const int Transaction::Limit_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Signer_Limit_descriptor() {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_chain_2eproto::file_level_enum_descriptors[2];
}
bool Signer_Limit_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Signer_Limit Signer::SIGNER_NONE;
const Signer_Limit Signer::SIGNER;
const Signer_Limit Signer::Limit_MIN;
const Signer_Limit Signer::Limit_MAX;
const int Signer::Limit_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Trigger_TransactionType_descriptor() {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_chain_2eproto::file_level_enum_descriptors[3];
}
bool Trigger_TransactionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Trigger_TransactionType Trigger::NORMAL_TRANSACTION;
const Trigger_TransactionType Trigger::CONTRACT_TRANSACTION;
const Trigger_TransactionType Trigger::TransactionType_MIN;
const Trigger_TransactionType Trigger::TransactionType_MAX;
const int Trigger::TransactionType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Contract_ContractType_descriptor() {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_chain_2eproto::file_level_enum_descriptors[4];
}
bool Contract_ContractType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Contract_ContractType Contract::JAVASCRIPT;
const Contract_ContractType Contract::ContractType_MIN;
const Contract_ContractType Contract::ContractType_MAX;
const int Contract::ContractType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Limit_descriptor() {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_chain_2eproto::file_level_enum_descriptors[5];
}
bool Limit_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Account::InitAsDefaultInstance() {
  ::bumoProtocol::_Account_default_instance_._instance.get_mutable()->priv_ = const_cast< ::bumoProtocol::AccountPrivilege*>(
      ::bumoProtocol::AccountPrivilege::internal_default_instance());
  ::bumoProtocol::_Account_default_instance_._instance.get_mutable()->contract_ = const_cast< ::bumoProtocol::Contract*>(
      ::bumoProtocol::Contract::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Account::kAddressFieldNumber;
const int Account::kNonceFieldNumber;
const int Account::kPrivFieldNumber;
const int Account::kMetadatasHashFieldNumber;
const int Account::kAssetsHashFieldNumber;
const int Account::kContractFieldNumber;
const int Account::kBalanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Account::Account()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_Account.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.Account)
}
Account::Account(const Account& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  metadatas_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.metadatas_hash().size() > 0) {
    metadatas_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadatas_hash_);
  }
  assets_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.assets_hash().size() > 0) {
    assets_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.assets_hash_);
  }
  if (from.has_priv()) {
    priv_ = new ::bumoProtocol::AccountPrivilege(*from.priv_);
  } else {
    priv_ = NULL;
  }
  if (from.has_contract()) {
    contract_ = new ::bumoProtocol::Contract(*from.contract_);
  } else {
    contract_ = NULL;
  }
  ::memcpy(&nonce_, &from.nonce_,
    static_cast<size_t>(reinterpret_cast<char*>(&balance_) -
    reinterpret_cast<char*>(&nonce_)) + sizeof(balance_));
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.Account)
}

void Account::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadatas_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  assets_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&priv_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&balance_) -
      reinterpret_cast<char*>(&priv_)) + sizeof(balance_));
}

Account::~Account() {
  // @@protoc_insertion_point(destructor:bumoProtocol.Account)
  SharedDtor();
}

void Account::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadatas_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  assets_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete priv_;
  if (this != internal_default_instance()) delete contract_;
}

void Account::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Account::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Account& Account::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_Account.base);
  return *internal_default_instance();
}


void Account::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.Account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadatas_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  assets_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && priv_ != NULL) {
    delete priv_;
  }
  priv_ = NULL;
  if (GetArenaNoVirtual() == NULL && contract_ != NULL) {
    delete contract_;
  }
  contract_ = NULL;
  ::memset(&nonce_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&balance_) -
      reinterpret_cast<char*>(&nonce_)) + sizeof(balance_));
  _internal_metadata_.Clear();
}

bool Account::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.Account)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.Account.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 nonce = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nonce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bumoProtocol.AccountPrivilege priv = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_priv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes metadatas_hash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_metadatas_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes assets_hash = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_assets_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bumoProtocol.Contract contract = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_contract()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 balance = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.Account)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.Account)
  return false;
#undef DO_
}

void Account::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.Account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.Account.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // int64 nonce = 2;
  if (this->nonce() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->nonce(), output);
  }

  // .bumoProtocol.AccountPrivilege priv = 3;
  if (this->has_priv()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_priv(), output);
  }

  // bytes metadatas_hash = 4;
  if (this->metadatas_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->metadatas_hash(), output);
  }

  // bytes assets_hash = 5;
  if (this->assets_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->assets_hash(), output);
  }

  // .bumoProtocol.Contract contract = 6;
  if (this->has_contract()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_contract(), output);
  }

  // int64 balance = 7;
  if (this->balance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->balance(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.Account)
}

::google::protobuf::uint8* Account::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.Account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.Account.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // int64 nonce = 2;
  if (this->nonce() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->nonce(), target);
  }

  // .bumoProtocol.AccountPrivilege priv = 3;
  if (this->has_priv()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_priv(), deterministic, target);
  }

  // bytes metadatas_hash = 4;
  if (this->metadatas_hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->metadatas_hash(), target);
  }

  // bytes assets_hash = 5;
  if (this->assets_hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->assets_hash(), target);
  }

  // .bumoProtocol.Contract contract = 6;
  if (this->has_contract()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_contract(), deterministic, target);
  }

  // int64 balance = 7;
  if (this->balance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->balance(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.Account)
  return target;
}

size_t Account::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.Account)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // bytes metadatas_hash = 4;
  if (this->metadatas_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->metadatas_hash());
  }

  // bytes assets_hash = 5;
  if (this->assets_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->assets_hash());
  }

  // .bumoProtocol.AccountPrivilege priv = 3;
  if (this->has_priv()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *priv_);
  }

  // .bumoProtocol.Contract contract = 6;
  if (this->has_contract()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *contract_);
  }

  // int64 nonce = 2;
  if (this->nonce() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nonce());
  }

  // int64 balance = 7;
  if (this->balance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->balance());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Account::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.Account)
  GOOGLE_DCHECK_NE(&from, this);
  const Account* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Account>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.Account)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.Account)
    MergeFrom(*source);
  }
}

void Account::MergeFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.Account)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.metadatas_hash().size() > 0) {

    metadatas_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadatas_hash_);
  }
  if (from.assets_hash().size() > 0) {

    assets_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.assets_hash_);
  }
  if (from.has_priv()) {
    mutable_priv()->::bumoProtocol::AccountPrivilege::MergeFrom(from.priv());
  }
  if (from.has_contract()) {
    mutable_contract()->::bumoProtocol::Contract::MergeFrom(from.contract());
  }
  if (from.nonce() != 0) {
    set_nonce(from.nonce());
  }
  if (from.balance() != 0) {
    set_balance(from.balance());
  }
}

void Account::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Account::CopyFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Account::IsInitialized() const {
  return true;
}

void Account::Swap(Account* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Account::InternalSwap(Account* other) {
  using std::swap;
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  metadatas_hash_.Swap(&other->metadatas_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  assets_hash_.Swap(&other->assets_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(priv_, other->priv_);
  swap(contract_, other->contract_);
  swap(nonce_, other->nonce_);
  swap(balance_, other->balance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Account::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AssetKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssetKey::kIssuerFieldNumber;
const int AssetKey::kCodeFieldNumber;
const int AssetKey::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssetKey::AssetKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_AssetKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.AssetKey)
}
AssetKey::AssetKey(const AssetKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  issuer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.issuer().size() > 0) {
    issuer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issuer_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.AssetKey)
}

void AssetKey::SharedCtor() {
  issuer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

AssetKey::~AssetKey() {
  // @@protoc_insertion_point(destructor:bumoProtocol.AssetKey)
  SharedDtor();
}

void AssetKey::SharedDtor() {
  issuer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AssetKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AssetKey::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AssetKey& AssetKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_AssetKey.base);
  return *internal_default_instance();
}


void AssetKey::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.AssetKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  issuer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool AssetKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.AssetKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string issuer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issuer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->issuer().data(), static_cast<int>(this->issuer().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.AssetKey.issuer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.AssetKey.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.AssetKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.AssetKey)
  return false;
#undef DO_
}

void AssetKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.AssetKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string issuer = 1;
  if (this->issuer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->issuer().data(), static_cast<int>(this->issuer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.AssetKey.issuer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->issuer(), output);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.AssetKey.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->code(), output);
  }

  // int32 type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.AssetKey)
}

::google::protobuf::uint8* AssetKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.AssetKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string issuer = 1;
  if (this->issuer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->issuer().data(), static_cast<int>(this->issuer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.AssetKey.issuer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->issuer(), target);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.AssetKey.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code(), target);
  }

  // int32 type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.AssetKey)
  return target;
}

size_t AssetKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.AssetKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string issuer = 1;
  if (this->issuer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->issuer());
  }

  // string code = 2;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // int32 type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssetKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.AssetKey)
  GOOGLE_DCHECK_NE(&from, this);
  const AssetKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssetKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.AssetKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.AssetKey)
    MergeFrom(*source);
  }
}

void AssetKey::MergeFrom(const AssetKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.AssetKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.issuer().size() > 0) {

    issuer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issuer_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void AssetKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.AssetKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssetKey::CopyFrom(const AssetKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.AssetKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetKey::IsInitialized() const {
  return true;
}

void AssetKey::Swap(AssetKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssetKey::InternalSwap(AssetKey* other) {
  using std::swap;
  issuer_.Swap(&other->issuer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AssetKey::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Asset::InitAsDefaultInstance() {
  ::bumoProtocol::_Asset_default_instance_._instance.get_mutable()->key_ = const_cast< ::bumoProtocol::AssetKey*>(
      ::bumoProtocol::AssetKey::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Asset::kKeyFieldNumber;
const int Asset::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Asset::Asset()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_Asset.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.Asset)
}
Asset::Asset(const Asset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::bumoProtocol::AssetKey(*from.key_);
  } else {
    key_ = NULL;
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.Asset)
}

void Asset::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&key_)) + sizeof(amount_));
}

Asset::~Asset() {
  // @@protoc_insertion_point(destructor:bumoProtocol.Asset)
  SharedDtor();
}

void Asset::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
}

void Asset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Asset::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Asset& Asset::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_Asset.base);
  return *internal_default_instance();
}


void Asset::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.Asset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  amount_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Asset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.Asset)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bumoProtocol.AssetKey key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 amount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.Asset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.Asset)
  return false;
#undef DO_
}

void Asset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.Asset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bumoProtocol.AssetKey key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_key(), output);
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.Asset)
}

::google::protobuf::uint8* Asset::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.Asset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bumoProtocol.AssetKey key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_key(), deterministic, target);
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->amount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.Asset)
  return target;
}

size_t Asset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.Asset)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bumoProtocol.AssetKey key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Asset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.Asset)
  GOOGLE_DCHECK_NE(&from, this);
  const Asset* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Asset>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.Asset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.Asset)
    MergeFrom(*source);
  }
}

void Asset::MergeFrom(const Asset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.Asset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::bumoProtocol::AssetKey::MergeFrom(from.key());
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
}

void Asset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.Asset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Asset::CopyFrom(const Asset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.Asset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Asset::IsInitialized() const {
  return true;
}

void Asset::Swap(Asset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Asset::InternalSwap(Asset* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(amount_, other->amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Asset::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AssetProperty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssetProperty::kDecimalFieldNumber;
const int AssetProperty::kDescriptionFieldNumber;
const int AssetProperty::kMaxSupplyFieldNumber;
const int AssetProperty::kIssuedAmountFieldNumber;
const int AssetProperty::kFeePercentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssetProperty::AssetProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_AssetProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.AssetProperty)
}
AssetProperty::AssetProperty(const AssetProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&max_supply_, &from.max_supply_,
    static_cast<size_t>(reinterpret_cast<char*>(&issued_amount_) -
    reinterpret_cast<char*>(&max_supply_)) + sizeof(issued_amount_));
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.AssetProperty)
}

void AssetProperty::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&max_supply_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&issued_amount_) -
      reinterpret_cast<char*>(&max_supply_)) + sizeof(issued_amount_));
}

AssetProperty::~AssetProperty() {
  // @@protoc_insertion_point(destructor:bumoProtocol.AssetProperty)
  SharedDtor();
}

void AssetProperty::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AssetProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AssetProperty::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AssetProperty& AssetProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_AssetProperty.base);
  return *internal_default_instance();
}


void AssetProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.AssetProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&max_supply_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&issued_amount_) -
      reinterpret_cast<char*>(&max_supply_)) + sizeof(issued_amount_));
  _internal_metadata_.Clear();
}

bool AssetProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.AssetProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 decimal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &decimal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.AssetProperty.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 max_supply = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_supply_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 issued_amount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &issued_amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fee_percent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fee_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.AssetProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.AssetProperty)
  return false;
#undef DO_
}

void AssetProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.AssetProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 decimal = 1;
  if (this->decimal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->decimal(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.AssetProperty.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // int64 max_supply = 3;
  if (this->max_supply() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->max_supply(), output);
  }

  // int64 issued_amount = 4;
  if (this->issued_amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->issued_amount(), output);
  }

  // int32 fee_percent = 5;
  if (this->fee_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->fee_percent(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.AssetProperty)
}

::google::protobuf::uint8* AssetProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.AssetProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 decimal = 1;
  if (this->decimal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->decimal(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.AssetProperty.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // int64 max_supply = 3;
  if (this->max_supply() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->max_supply(), target);
  }

  // int64 issued_amount = 4;
  if (this->issued_amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->issued_amount(), target);
  }

  // int32 fee_percent = 5;
  if (this->fee_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->fee_percent(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.AssetProperty)
  return target;
}

size_t AssetProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.AssetProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // int64 max_supply = 3;
  if (this->max_supply() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->max_supply());
  }

  // int32 decimal = 1;
  if (this->decimal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->decimal());
  }

  // int32 fee_percent = 5;
  if (this->fee_percent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fee_percent());
  }

  // int64 issued_amount = 4;
  if (this->issued_amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->issued_amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssetProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.AssetProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const AssetProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssetProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.AssetProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.AssetProperty)
    MergeFrom(*source);
  }
}

void AssetProperty::MergeFrom(const AssetProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.AssetProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.max_supply() != 0) {
    set_max_supply(from.max_supply());
  }
  if (from.decimal() != 0) {
    set_decimal(from.decimal());
  }
  if (from.fee_percent() != 0) {
    set_fee_percent(from.fee_percent());
  }
  if (from.issued_amount() != 0) {
    set_issued_amount(from.issued_amount());
  }
}

void AssetProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.AssetProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssetProperty::CopyFrom(const AssetProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.AssetProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetProperty::IsInitialized() const {
  return true;
}

void AssetProperty::Swap(AssetProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssetProperty::InternalSwap(AssetProperty* other) {
  using std::swap;
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(max_supply_, other->max_supply_);
  swap(decimal_, other->decimal_);
  swap(fee_percent_, other->fee_percent_);
  swap(issued_amount_, other->issued_amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AssetProperty::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AssetStore::InitAsDefaultInstance() {
  ::bumoProtocol::_AssetStore_default_instance_._instance.get_mutable()->key_ = const_cast< ::bumoProtocol::AssetKey*>(
      ::bumoProtocol::AssetKey::internal_default_instance());
  ::bumoProtocol::_AssetStore_default_instance_._instance.get_mutable()->property_ = const_cast< ::bumoProtocol::AssetProperty*>(
      ::bumoProtocol::AssetProperty::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssetStore::kKeyFieldNumber;
const int AssetStore::kAmountFieldNumber;
const int AssetStore::kPropertyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssetStore::AssetStore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_AssetStore.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.AssetStore)
}
AssetStore::AssetStore(const AssetStore& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::bumoProtocol::AssetKey(*from.key_);
  } else {
    key_ = NULL;
  }
  if (from.has_property()) {
    property_ = new ::bumoProtocol::AssetProperty(*from.property_);
  } else {
    property_ = NULL;
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.AssetStore)
}

void AssetStore::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&key_)) + sizeof(amount_));
}

AssetStore::~AssetStore() {
  // @@protoc_insertion_point(destructor:bumoProtocol.AssetStore)
  SharedDtor();
}

void AssetStore::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete property_;
}

void AssetStore::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AssetStore::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AssetStore& AssetStore::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_AssetStore.base);
  return *internal_default_instance();
}


void AssetStore::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.AssetStore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  if (GetArenaNoVirtual() == NULL && property_ != NULL) {
    delete property_;
  }
  property_ = NULL;
  amount_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool AssetStore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.AssetStore)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bumoProtocol.AssetKey key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 amount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bumoProtocol.AssetProperty property = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.AssetStore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.AssetStore)
  return false;
#undef DO_
}

void AssetStore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.AssetStore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bumoProtocol.AssetKey key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_key(), output);
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->amount(), output);
  }

  // .bumoProtocol.AssetProperty property = 3;
  if (this->has_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_property(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.AssetStore)
}

::google::protobuf::uint8* AssetStore::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.AssetStore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bumoProtocol.AssetKey key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_key(), deterministic, target);
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->amount(), target);
  }

  // .bumoProtocol.AssetProperty property = 3;
  if (this->has_property()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_property(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.AssetStore)
  return target;
}

size_t AssetStore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.AssetStore)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bumoProtocol.AssetKey key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // .bumoProtocol.AssetProperty property = 3;
  if (this->has_property()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *property_);
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssetStore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.AssetStore)
  GOOGLE_DCHECK_NE(&from, this);
  const AssetStore* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssetStore>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.AssetStore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.AssetStore)
    MergeFrom(*source);
  }
}

void AssetStore::MergeFrom(const AssetStore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.AssetStore)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::bumoProtocol::AssetKey::MergeFrom(from.key());
  }
  if (from.has_property()) {
    mutable_property()->::bumoProtocol::AssetProperty::MergeFrom(from.property());
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
}

void AssetStore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.AssetStore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssetStore::CopyFrom(const AssetStore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.AssetStore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetStore::IsInitialized() const {
  return true;
}

void AssetStore::Swap(AssetStore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssetStore::InternalSwap(AssetStore* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(property_, other->property_);
  swap(amount_, other->amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AssetStore::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LedgerHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LedgerHeader::kSeqFieldNumber;
const int LedgerHeader::kHashFieldNumber;
const int LedgerHeader::kPreviousHashFieldNumber;
const int LedgerHeader::kAccountTreeHashFieldNumber;
const int LedgerHeader::kCloseTimeFieldNumber;
const int LedgerHeader::kConsensusValueHashFieldNumber;
const int LedgerHeader::kVersionFieldNumber;
const int LedgerHeader::kTxCountFieldNumber;
const int LedgerHeader::kValidatorsHashFieldNumber;
const int LedgerHeader::kFeesHashFieldNumber;
const int LedgerHeader::kReserveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LedgerHeader::LedgerHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_LedgerHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.LedgerHeader)
}
LedgerHeader::LedgerHeader(const LedgerHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  previous_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.previous_hash().size() > 0) {
    previous_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.previous_hash_);
  }
  account_tree_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_tree_hash().size() > 0) {
    account_tree_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_tree_hash_);
  }
  consensus_value_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.consensus_value_hash().size() > 0) {
    consensus_value_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consensus_value_hash_);
  }
  validators_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.validators_hash().size() > 0) {
    validators_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.validators_hash_);
  }
  fees_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fees_hash().size() > 0) {
    fees_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fees_hash_);
  }
  reserve_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reserve().size() > 0) {
    reserve_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reserve_);
  }
  ::memcpy(&seq_, &from.seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&tx_count_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(tx_count_));
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.LedgerHeader)
}

void LedgerHeader::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  previous_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_tree_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consensus_value_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validators_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fees_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reserve_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tx_count_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(tx_count_));
}

LedgerHeader::~LedgerHeader() {
  // @@protoc_insertion_point(destructor:bumoProtocol.LedgerHeader)
  SharedDtor();
}

void LedgerHeader::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  previous_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_tree_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consensus_value_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validators_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fees_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reserve_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LedgerHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LedgerHeader::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LedgerHeader& LedgerHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_LedgerHeader.base);
  return *internal_default_instance();
}


void LedgerHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.LedgerHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  previous_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_tree_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consensus_value_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validators_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fees_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reserve_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tx_count_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(tx_count_));
  _internal_metadata_.Clear();
}

bool LedgerHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.LedgerHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 seq = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes previous_hash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_previous_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes account_tree_hash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account_tree_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 close_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &close_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes consensus_value_hash = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_consensus_value_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 version = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 tx_count = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tx_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes validators_hash = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_validators_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes fees_hash = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_fees_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reserve = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reserve()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reserve().data(), static_cast<int>(this->reserve().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.LedgerHeader.reserve"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.LedgerHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.LedgerHeader)
  return false;
#undef DO_
}

void LedgerHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.LedgerHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seq = 1;
  if (this->seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->seq(), output);
  }

  // bytes hash = 2;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->hash(), output);
  }

  // bytes previous_hash = 3;
  if (this->previous_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->previous_hash(), output);
  }

  // bytes account_tree_hash = 4;
  if (this->account_tree_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->account_tree_hash(), output);
  }

  // int64 close_time = 5;
  if (this->close_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->close_time(), output);
  }

  // bytes consensus_value_hash = 6;
  if (this->consensus_value_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->consensus_value_hash(), output);
  }

  // int64 version = 7;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->version(), output);
  }

  // int64 tx_count = 8;
  if (this->tx_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->tx_count(), output);
  }

  // bytes validators_hash = 9;
  if (this->validators_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->validators_hash(), output);
  }

  // bytes fees_hash = 10;
  if (this->fees_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->fees_hash(), output);
  }

  // string reserve = 11;
  if (this->reserve().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reserve().data(), static_cast<int>(this->reserve().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.LedgerHeader.reserve");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->reserve(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.LedgerHeader)
}

::google::protobuf::uint8* LedgerHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.LedgerHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seq = 1;
  if (this->seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->seq(), target);
  }

  // bytes hash = 2;
  if (this->hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->hash(), target);
  }

  // bytes previous_hash = 3;
  if (this->previous_hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->previous_hash(), target);
  }

  // bytes account_tree_hash = 4;
  if (this->account_tree_hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->account_tree_hash(), target);
  }

  // int64 close_time = 5;
  if (this->close_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->close_time(), target);
  }

  // bytes consensus_value_hash = 6;
  if (this->consensus_value_hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->consensus_value_hash(), target);
  }

  // int64 version = 7;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->version(), target);
  }

  // int64 tx_count = 8;
  if (this->tx_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->tx_count(), target);
  }

  // bytes validators_hash = 9;
  if (this->validators_hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->validators_hash(), target);
  }

  // bytes fees_hash = 10;
  if (this->fees_hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->fees_hash(), target);
  }

  // string reserve = 11;
  if (this->reserve().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reserve().data(), static_cast<int>(this->reserve().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.LedgerHeader.reserve");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->reserve(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.LedgerHeader)
  return target;
}

size_t LedgerHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.LedgerHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes hash = 2;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hash());
  }

  // bytes previous_hash = 3;
  if (this->previous_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->previous_hash());
  }

  // bytes account_tree_hash = 4;
  if (this->account_tree_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account_tree_hash());
  }

  // bytes consensus_value_hash = 6;
  if (this->consensus_value_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->consensus_value_hash());
  }

  // bytes validators_hash = 9;
  if (this->validators_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->validators_hash());
  }

  // bytes fees_hash = 10;
  if (this->fees_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->fees_hash());
  }

  // string reserve = 11;
  if (this->reserve().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reserve());
  }

  // int64 seq = 1;
  if (this->seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seq());
  }

  // int64 close_time = 5;
  if (this->close_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->close_time());
  }

  // int64 version = 7;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->version());
  }

  // int64 tx_count = 8;
  if (this->tx_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tx_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LedgerHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.LedgerHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const LedgerHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LedgerHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.LedgerHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.LedgerHeader)
    MergeFrom(*source);
  }
}

void LedgerHeader::MergeFrom(const LedgerHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.LedgerHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.previous_hash().size() > 0) {

    previous_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.previous_hash_);
  }
  if (from.account_tree_hash().size() > 0) {

    account_tree_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_tree_hash_);
  }
  if (from.consensus_value_hash().size() > 0) {

    consensus_value_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consensus_value_hash_);
  }
  if (from.validators_hash().size() > 0) {

    validators_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.validators_hash_);
  }
  if (from.fees_hash().size() > 0) {

    fees_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fees_hash_);
  }
  if (from.reserve().size() > 0) {

    reserve_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reserve_);
  }
  if (from.seq() != 0) {
    set_seq(from.seq());
  }
  if (from.close_time() != 0) {
    set_close_time(from.close_time());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.tx_count() != 0) {
    set_tx_count(from.tx_count());
  }
}

void LedgerHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.LedgerHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LedgerHeader::CopyFrom(const LedgerHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.LedgerHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LedgerHeader::IsInitialized() const {
  return true;
}

void LedgerHeader::Swap(LedgerHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LedgerHeader::InternalSwap(LedgerHeader* other) {
  using std::swap;
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  previous_hash_.Swap(&other->previous_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_tree_hash_.Swap(&other->account_tree_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  consensus_value_hash_.Swap(&other->consensus_value_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  validators_hash_.Swap(&other->validators_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  fees_hash_.Swap(&other->fees_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reserve_.Swap(&other->reserve_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(seq_, other->seq_);
  swap(close_time_, other->close_time_);
  swap(version_, other->version_);
  swap(tx_count_, other->tx_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LedgerHeader::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ledger::InitAsDefaultInstance() {
  ::bumoProtocol::_Ledger_default_instance_._instance.get_mutable()->header_ = const_cast< ::bumoProtocol::LedgerHeader*>(
      ::bumoProtocol::LedgerHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ledger::kHeaderFieldNumber;
const int Ledger::kTransactionEnvsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ledger::Ledger()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_Ledger.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.Ledger)
}
Ledger::Ledger(const Ledger& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      transaction_envs_(from.transaction_envs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::bumoProtocol::LedgerHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.Ledger)
}

void Ledger::SharedCtor() {
  header_ = NULL;
}

Ledger::~Ledger() {
  // @@protoc_insertion_point(destructor:bumoProtocol.Ledger)
  SharedDtor();
}

void Ledger::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void Ledger::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ledger::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ledger& Ledger::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_Ledger.base);
  return *internal_default_instance();
}


void Ledger::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.Ledger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_envs_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool Ledger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.Ledger)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bumoProtocol.LedgerHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bumoProtocol.TransactionEnv transaction_envs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_transaction_envs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.Ledger)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.Ledger)
  return false;
#undef DO_
}

void Ledger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.Ledger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bumoProtocol.LedgerHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // repeated .bumoProtocol.TransactionEnv transaction_envs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transaction_envs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->transaction_envs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.Ledger)
}

::google::protobuf::uint8* Ledger::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.Ledger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bumoProtocol.LedgerHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // repeated .bumoProtocol.TransactionEnv transaction_envs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transaction_envs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->transaction_envs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.Ledger)
  return target;
}

size_t Ledger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.Ledger)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bumoProtocol.TransactionEnv transaction_envs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->transaction_envs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->transaction_envs(static_cast<int>(i)));
    }
  }

  // .bumoProtocol.LedgerHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ledger::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.Ledger)
  GOOGLE_DCHECK_NE(&from, this);
  const Ledger* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ledger>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.Ledger)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.Ledger)
    MergeFrom(*source);
  }
}

void Ledger::MergeFrom(const Ledger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.Ledger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transaction_envs_.MergeFrom(from.transaction_envs_);
  if (from.has_header()) {
    mutable_header()->::bumoProtocol::LedgerHeader::MergeFrom(from.header());
  }
}

void Ledger::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.Ledger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ledger::CopyFrom(const Ledger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.Ledger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ledger::IsInitialized() const {
  return true;
}

void Ledger::Swap(Ledger* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ledger::InternalSwap(Ledger* other) {
  using std::swap;
  CastToBase(&transaction_envs_)->InternalSwap(CastToBase(&other->transaction_envs_));
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ledger::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperationPayAsset::InitAsDefaultInstance() {
  ::bumoProtocol::_OperationPayAsset_default_instance_._instance.get_mutable()->asset_ = const_cast< ::bumoProtocol::Asset*>(
      ::bumoProtocol::Asset::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationPayAsset::kDestAddressFieldNumber;
const int OperationPayAsset::kAssetFieldNumber;
const int OperationPayAsset::kInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationPayAsset::OperationPayAsset()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_OperationPayAsset.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.OperationPayAsset)
}
OperationPayAsset::OperationPayAsset(const OperationPayAsset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dest_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dest_address().size() > 0) {
    dest_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dest_address_);
  }
  input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.input().size() > 0) {
    input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_);
  }
  if (from.has_asset()) {
    asset_ = new ::bumoProtocol::Asset(*from.asset_);
  } else {
    asset_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.OperationPayAsset)
}

void OperationPayAsset::SharedCtor() {
  dest_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_ = NULL;
}

OperationPayAsset::~OperationPayAsset() {
  // @@protoc_insertion_point(destructor:bumoProtocol.OperationPayAsset)
  SharedDtor();
}

void OperationPayAsset::SharedDtor() {
  dest_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete asset_;
}

void OperationPayAsset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OperationPayAsset::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperationPayAsset& OperationPayAsset::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_OperationPayAsset.base);
  return *internal_default_instance();
}


void OperationPayAsset::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.OperationPayAsset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dest_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && asset_ != NULL) {
    delete asset_;
  }
  asset_ = NULL;
  _internal_metadata_.Clear();
}

bool OperationPayAsset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.OperationPayAsset)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string dest_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dest_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dest_address().data(), static_cast<int>(this->dest_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.OperationPayAsset.dest_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bumoProtocol.Asset asset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_asset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string input = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->input().data(), static_cast<int>(this->input().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.OperationPayAsset.input"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.OperationPayAsset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.OperationPayAsset)
  return false;
#undef DO_
}

void OperationPayAsset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.OperationPayAsset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dest_address = 1;
  if (this->dest_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dest_address().data(), static_cast<int>(this->dest_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationPayAsset.dest_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dest_address(), output);
  }

  // .bumoProtocol.Asset asset = 2;
  if (this->has_asset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_asset(), output);
  }

  // string input = 3;
  if (this->input().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input().data(), static_cast<int>(this->input().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationPayAsset.input");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->input(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.OperationPayAsset)
}

::google::protobuf::uint8* OperationPayAsset::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.OperationPayAsset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dest_address = 1;
  if (this->dest_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dest_address().data(), static_cast<int>(this->dest_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationPayAsset.dest_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dest_address(), target);
  }

  // .bumoProtocol.Asset asset = 2;
  if (this->has_asset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_asset(), deterministic, target);
  }

  // string input = 3;
  if (this->input().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input().data(), static_cast<int>(this->input().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationPayAsset.input");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->input(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.OperationPayAsset)
  return target;
}

size_t OperationPayAsset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.OperationPayAsset)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string dest_address = 1;
  if (this->dest_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dest_address());
  }

  // string input = 3;
  if (this->input().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->input());
  }

  // .bumoProtocol.Asset asset = 2;
  if (this->has_asset()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *asset_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperationPayAsset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.OperationPayAsset)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationPayAsset* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationPayAsset>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.OperationPayAsset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.OperationPayAsset)
    MergeFrom(*source);
  }
}

void OperationPayAsset::MergeFrom(const OperationPayAsset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.OperationPayAsset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dest_address().size() > 0) {

    dest_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dest_address_);
  }
  if (from.input().size() > 0) {

    input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_);
  }
  if (from.has_asset()) {
    mutable_asset()->::bumoProtocol::Asset::MergeFrom(from.asset());
  }
}

void OperationPayAsset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.OperationPayAsset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationPayAsset::CopyFrom(const OperationPayAsset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.OperationPayAsset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationPayAsset::IsInitialized() const {
  return true;
}

void OperationPayAsset::Swap(OperationPayAsset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationPayAsset::InternalSwap(OperationPayAsset* other) {
  using std::swap;
  dest_address_.Swap(&other->dest_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  input_.Swap(&other->input_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(asset_, other->asset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OperationPayAsset::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperationTypeThreshold::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationTypeThreshold::kTypeFieldNumber;
const int OperationTypeThreshold::kThresholdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationTypeThreshold::OperationTypeThreshold()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_OperationTypeThreshold.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.OperationTypeThreshold)
}
OperationTypeThreshold::OperationTypeThreshold(const OperationTypeThreshold& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&threshold_, &from.threshold_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&threshold_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.OperationTypeThreshold)
}

void OperationTypeThreshold::SharedCtor() {
  ::memset(&threshold_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&threshold_)) + sizeof(type_));
}

OperationTypeThreshold::~OperationTypeThreshold() {
  // @@protoc_insertion_point(destructor:bumoProtocol.OperationTypeThreshold)
  SharedDtor();
}

void OperationTypeThreshold::SharedDtor() {
}

void OperationTypeThreshold::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OperationTypeThreshold::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperationTypeThreshold& OperationTypeThreshold::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_OperationTypeThreshold.base);
  return *internal_default_instance();
}


void OperationTypeThreshold::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.OperationTypeThreshold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&threshold_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&threshold_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool OperationTypeThreshold::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.OperationTypeThreshold)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bumoProtocol.Operation.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::bumoProtocol::Operation_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 threshold = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.OperationTypeThreshold)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.OperationTypeThreshold)
  return false;
#undef DO_
}

void OperationTypeThreshold::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.OperationTypeThreshold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bumoProtocol.Operation.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // int64 threshold = 2;
  if (this->threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->threshold(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.OperationTypeThreshold)
}

::google::protobuf::uint8* OperationTypeThreshold::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.OperationTypeThreshold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bumoProtocol.Operation.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // int64 threshold = 2;
  if (this->threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->threshold(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.OperationTypeThreshold)
  return target;
}

size_t OperationTypeThreshold::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.OperationTypeThreshold)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 threshold = 2;
  if (this->threshold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->threshold());
  }

  // .bumoProtocol.Operation.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperationTypeThreshold::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.OperationTypeThreshold)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationTypeThreshold* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationTypeThreshold>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.OperationTypeThreshold)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.OperationTypeThreshold)
    MergeFrom(*source);
  }
}

void OperationTypeThreshold::MergeFrom(const OperationTypeThreshold& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.OperationTypeThreshold)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.threshold() != 0) {
    set_threshold(from.threshold());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void OperationTypeThreshold::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.OperationTypeThreshold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationTypeThreshold::CopyFrom(const OperationTypeThreshold& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.OperationTypeThreshold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationTypeThreshold::IsInitialized() const {
  return true;
}

void OperationTypeThreshold::Swap(OperationTypeThreshold* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationTypeThreshold::InternalSwap(OperationTypeThreshold* other) {
  using std::swap;
  swap(threshold_, other->threshold_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OperationTypeThreshold::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountPrivilege::InitAsDefaultInstance() {
  ::bumoProtocol::_AccountPrivilege_default_instance_._instance.get_mutable()->thresholds_ = const_cast< ::bumoProtocol::AccountThreshold*>(
      ::bumoProtocol::AccountThreshold::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountPrivilege::kMasterWeightFieldNumber;
const int AccountPrivilege::kSignersFieldNumber;
const int AccountPrivilege::kThresholdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountPrivilege::AccountPrivilege()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_AccountPrivilege.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.AccountPrivilege)
}
AccountPrivilege::AccountPrivilege(const AccountPrivilege& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      signers_(from.signers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_thresholds()) {
    thresholds_ = new ::bumoProtocol::AccountThreshold(*from.thresholds_);
  } else {
    thresholds_ = NULL;
  }
  master_weight_ = from.master_weight_;
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.AccountPrivilege)
}

void AccountPrivilege::SharedCtor() {
  ::memset(&thresholds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&master_weight_) -
      reinterpret_cast<char*>(&thresholds_)) + sizeof(master_weight_));
}

AccountPrivilege::~AccountPrivilege() {
  // @@protoc_insertion_point(destructor:bumoProtocol.AccountPrivilege)
  SharedDtor();
}

void AccountPrivilege::SharedDtor() {
  if (this != internal_default_instance()) delete thresholds_;
}

void AccountPrivilege::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccountPrivilege::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountPrivilege& AccountPrivilege::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_AccountPrivilege.base);
  return *internal_default_instance();
}


void AccountPrivilege::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.AccountPrivilege)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signers_.Clear();
  if (GetArenaNoVirtual() == NULL && thresholds_ != NULL) {
    delete thresholds_;
  }
  thresholds_ = NULL;
  master_weight_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool AccountPrivilege::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.AccountPrivilege)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 master_weight = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &master_weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bumoProtocol.Signer signers = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_signers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bumoProtocol.AccountThreshold thresholds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_thresholds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.AccountPrivilege)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.AccountPrivilege)
  return false;
#undef DO_
}

void AccountPrivilege::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.AccountPrivilege)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 master_weight = 1;
  if (this->master_weight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->master_weight(), output);
  }

  // repeated .bumoProtocol.Signer signers = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->signers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->signers(static_cast<int>(i)),
      output);
  }

  // .bumoProtocol.AccountThreshold thresholds = 3;
  if (this->has_thresholds()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_thresholds(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.AccountPrivilege)
}

::google::protobuf::uint8* AccountPrivilege::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.AccountPrivilege)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 master_weight = 1;
  if (this->master_weight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->master_weight(), target);
  }

  // repeated .bumoProtocol.Signer signers = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->signers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->signers(static_cast<int>(i)), deterministic, target);
  }

  // .bumoProtocol.AccountThreshold thresholds = 3;
  if (this->has_thresholds()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_thresholds(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.AccountPrivilege)
  return target;
}

size_t AccountPrivilege::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.AccountPrivilege)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bumoProtocol.Signer signers = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->signers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->signers(static_cast<int>(i)));
    }
  }

  // .bumoProtocol.AccountThreshold thresholds = 3;
  if (this->has_thresholds()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *thresholds_);
  }

  // int64 master_weight = 1;
  if (this->master_weight() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->master_weight());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountPrivilege::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.AccountPrivilege)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountPrivilege* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountPrivilege>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.AccountPrivilege)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.AccountPrivilege)
    MergeFrom(*source);
  }
}

void AccountPrivilege::MergeFrom(const AccountPrivilege& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.AccountPrivilege)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  signers_.MergeFrom(from.signers_);
  if (from.has_thresholds()) {
    mutable_thresholds()->::bumoProtocol::AccountThreshold::MergeFrom(from.thresholds());
  }
  if (from.master_weight() != 0) {
    set_master_weight(from.master_weight());
  }
}

void AccountPrivilege::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.AccountPrivilege)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountPrivilege::CopyFrom(const AccountPrivilege& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.AccountPrivilege)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountPrivilege::IsInitialized() const {
  return true;
}

void AccountPrivilege::Swap(AccountPrivilege* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountPrivilege::InternalSwap(AccountPrivilege* other) {
  using std::swap;
  CastToBase(&signers_)->InternalSwap(CastToBase(&other->signers_));
  swap(thresholds_, other->thresholds_);
  swap(master_weight_, other->master_weight_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccountPrivilege::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountThreshold::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountThreshold::kTxThresholdFieldNumber;
const int AccountThreshold::kTypeThresholdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountThreshold::AccountThreshold()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_AccountThreshold.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.AccountThreshold)
}
AccountThreshold::AccountThreshold(const AccountThreshold& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      type_thresholds_(from.type_thresholds_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tx_threshold_ = from.tx_threshold_;
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.AccountThreshold)
}

void AccountThreshold::SharedCtor() {
  tx_threshold_ = GOOGLE_LONGLONG(0);
}

AccountThreshold::~AccountThreshold() {
  // @@protoc_insertion_point(destructor:bumoProtocol.AccountThreshold)
  SharedDtor();
}

void AccountThreshold::SharedDtor() {
}

void AccountThreshold::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccountThreshold::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountThreshold& AccountThreshold::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_AccountThreshold.base);
  return *internal_default_instance();
}


void AccountThreshold::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.AccountThreshold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_thresholds_.Clear();
  tx_threshold_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool AccountThreshold::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.AccountThreshold)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 tx_threshold = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tx_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bumoProtocol.OperationTypeThreshold type_thresholds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_type_thresholds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.AccountThreshold)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.AccountThreshold)
  return false;
#undef DO_
}

void AccountThreshold::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.AccountThreshold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 tx_threshold = 1;
  if (this->tx_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->tx_threshold(), output);
  }

  // repeated .bumoProtocol.OperationTypeThreshold type_thresholds = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_thresholds_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->type_thresholds(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.AccountThreshold)
}

::google::protobuf::uint8* AccountThreshold::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.AccountThreshold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 tx_threshold = 1;
  if (this->tx_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->tx_threshold(), target);
  }

  // repeated .bumoProtocol.OperationTypeThreshold type_thresholds = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_thresholds_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->type_thresholds(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.AccountThreshold)
  return target;
}

size_t AccountThreshold::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.AccountThreshold)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bumoProtocol.OperationTypeThreshold type_thresholds = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->type_thresholds_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->type_thresholds(static_cast<int>(i)));
    }
  }

  // int64 tx_threshold = 1;
  if (this->tx_threshold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tx_threshold());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountThreshold::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.AccountThreshold)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountThreshold* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountThreshold>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.AccountThreshold)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.AccountThreshold)
    MergeFrom(*source);
  }
}

void AccountThreshold::MergeFrom(const AccountThreshold& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.AccountThreshold)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  type_thresholds_.MergeFrom(from.type_thresholds_);
  if (from.tx_threshold() != 0) {
    set_tx_threshold(from.tx_threshold());
  }
}

void AccountThreshold::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.AccountThreshold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountThreshold::CopyFrom(const AccountThreshold& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.AccountThreshold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountThreshold::IsInitialized() const {
  return true;
}

void AccountThreshold::Swap(AccountThreshold* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountThreshold::InternalSwap(AccountThreshold* other) {
  using std::swap;
  CastToBase(&type_thresholds_)->InternalSwap(CastToBase(&other->type_thresholds_));
  swap(tx_threshold_, other->tx_threshold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccountThreshold::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperationIssueAsset::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationIssueAsset::kCodeFieldNumber;
const int OperationIssueAsset::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationIssueAsset::OperationIssueAsset()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_OperationIssueAsset.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.OperationIssueAsset)
}
OperationIssueAsset::OperationIssueAsset(const OperationIssueAsset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.OperationIssueAsset)
}

void OperationIssueAsset::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_LONGLONG(0);
}

OperationIssueAsset::~OperationIssueAsset() {
  // @@protoc_insertion_point(destructor:bumoProtocol.OperationIssueAsset)
  SharedDtor();
}

void OperationIssueAsset::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OperationIssueAsset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OperationIssueAsset::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperationIssueAsset& OperationIssueAsset::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_OperationIssueAsset.base);
  return *internal_default_instance();
}


void OperationIssueAsset::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.OperationIssueAsset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool OperationIssueAsset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.OperationIssueAsset)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.OperationIssueAsset.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 amount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.OperationIssueAsset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.OperationIssueAsset)
  return false;
#undef DO_
}

void OperationIssueAsset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.OperationIssueAsset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationIssueAsset.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.OperationIssueAsset)
}

::google::protobuf::uint8* OperationIssueAsset::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.OperationIssueAsset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationIssueAsset.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->amount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.OperationIssueAsset)
  return target;
}

size_t OperationIssueAsset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.OperationIssueAsset)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string code = 1;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperationIssueAsset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.OperationIssueAsset)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationIssueAsset* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationIssueAsset>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.OperationIssueAsset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.OperationIssueAsset)
    MergeFrom(*source);
  }
}

void OperationIssueAsset::MergeFrom(const OperationIssueAsset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.OperationIssueAsset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
}

void OperationIssueAsset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.OperationIssueAsset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationIssueAsset::CopyFrom(const OperationIssueAsset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.OperationIssueAsset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationIssueAsset::IsInitialized() const {
  return true;
}

void OperationIssueAsset::Swap(OperationIssueAsset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationIssueAsset::InternalSwap(OperationIssueAsset* other) {
  using std::swap;
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(amount_, other->amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OperationIssueAsset::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperationPayCoin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationPayCoin::kDestAddressFieldNumber;
const int OperationPayCoin::kAmountFieldNumber;
const int OperationPayCoin::kInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationPayCoin::OperationPayCoin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_OperationPayCoin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.OperationPayCoin)
}
OperationPayCoin::OperationPayCoin(const OperationPayCoin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dest_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dest_address().size() > 0) {
    dest_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dest_address_);
  }
  input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.input().size() > 0) {
    input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_);
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.OperationPayCoin)
}

void OperationPayCoin::SharedCtor() {
  dest_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_LONGLONG(0);
}

OperationPayCoin::~OperationPayCoin() {
  // @@protoc_insertion_point(destructor:bumoProtocol.OperationPayCoin)
  SharedDtor();
}

void OperationPayCoin::SharedDtor() {
  dest_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OperationPayCoin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OperationPayCoin::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperationPayCoin& OperationPayCoin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_OperationPayCoin.base);
  return *internal_default_instance();
}


void OperationPayCoin::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.OperationPayCoin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dest_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool OperationPayCoin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.OperationPayCoin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string dest_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dest_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dest_address().data(), static_cast<int>(this->dest_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.OperationPayCoin.dest_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 amount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string input = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->input().data(), static_cast<int>(this->input().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.OperationPayCoin.input"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.OperationPayCoin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.OperationPayCoin)
  return false;
#undef DO_
}

void OperationPayCoin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.OperationPayCoin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dest_address = 1;
  if (this->dest_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dest_address().data(), static_cast<int>(this->dest_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationPayCoin.dest_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dest_address(), output);
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->amount(), output);
  }

  // string input = 3;
  if (this->input().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input().data(), static_cast<int>(this->input().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationPayCoin.input");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->input(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.OperationPayCoin)
}

::google::protobuf::uint8* OperationPayCoin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.OperationPayCoin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dest_address = 1;
  if (this->dest_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dest_address().data(), static_cast<int>(this->dest_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationPayCoin.dest_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dest_address(), target);
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->amount(), target);
  }

  // string input = 3;
  if (this->input().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input().data(), static_cast<int>(this->input().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationPayCoin.input");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->input(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.OperationPayCoin)
  return target;
}

size_t OperationPayCoin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.OperationPayCoin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string dest_address = 1;
  if (this->dest_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dest_address());
  }

  // string input = 3;
  if (this->input().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->input());
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperationPayCoin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.OperationPayCoin)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationPayCoin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationPayCoin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.OperationPayCoin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.OperationPayCoin)
    MergeFrom(*source);
  }
}

void OperationPayCoin::MergeFrom(const OperationPayCoin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.OperationPayCoin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dest_address().size() > 0) {

    dest_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dest_address_);
  }
  if (from.input().size() > 0) {

    input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_);
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
}

void OperationPayCoin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.OperationPayCoin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationPayCoin::CopyFrom(const OperationPayCoin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.OperationPayCoin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationPayCoin::IsInitialized() const {
  return true;
}

void OperationPayCoin::Swap(OperationPayCoin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationPayCoin::InternalSwap(OperationPayCoin* other) {
  using std::swap;
  dest_address_.Swap(&other->dest_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  input_.Swap(&other->input_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(amount_, other->amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OperationPayCoin::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperationSetSignerWeight::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationSetSignerWeight::kMasterWeightFieldNumber;
const int OperationSetSignerWeight::kSignersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationSetSignerWeight::OperationSetSignerWeight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_OperationSetSignerWeight.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.OperationSetSignerWeight)
}
OperationSetSignerWeight::OperationSetSignerWeight(const OperationSetSignerWeight& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      signers_(from.signers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  master_weight_ = from.master_weight_;
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.OperationSetSignerWeight)
}

void OperationSetSignerWeight::SharedCtor() {
  master_weight_ = GOOGLE_LONGLONG(0);
}

OperationSetSignerWeight::~OperationSetSignerWeight() {
  // @@protoc_insertion_point(destructor:bumoProtocol.OperationSetSignerWeight)
  SharedDtor();
}

void OperationSetSignerWeight::SharedDtor() {
}

void OperationSetSignerWeight::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OperationSetSignerWeight::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperationSetSignerWeight& OperationSetSignerWeight::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_OperationSetSignerWeight.base);
  return *internal_default_instance();
}


void OperationSetSignerWeight::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.OperationSetSignerWeight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signers_.Clear();
  master_weight_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool OperationSetSignerWeight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.OperationSetSignerWeight)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 master_weight = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &master_weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bumoProtocol.Signer signers = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_signers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.OperationSetSignerWeight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.OperationSetSignerWeight)
  return false;
#undef DO_
}

void OperationSetSignerWeight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.OperationSetSignerWeight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 master_weight = 1;
  if (this->master_weight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->master_weight(), output);
  }

  // repeated .bumoProtocol.Signer signers = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->signers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->signers(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.OperationSetSignerWeight)
}

::google::protobuf::uint8* OperationSetSignerWeight::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.OperationSetSignerWeight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 master_weight = 1;
  if (this->master_weight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->master_weight(), target);
  }

  // repeated .bumoProtocol.Signer signers = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->signers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->signers(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.OperationSetSignerWeight)
  return target;
}

size_t OperationSetSignerWeight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.OperationSetSignerWeight)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bumoProtocol.Signer signers = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->signers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->signers(static_cast<int>(i)));
    }
  }

  // int64 master_weight = 1;
  if (this->master_weight() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->master_weight());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperationSetSignerWeight::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.OperationSetSignerWeight)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationSetSignerWeight* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationSetSignerWeight>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.OperationSetSignerWeight)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.OperationSetSignerWeight)
    MergeFrom(*source);
  }
}

void OperationSetSignerWeight::MergeFrom(const OperationSetSignerWeight& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.OperationSetSignerWeight)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  signers_.MergeFrom(from.signers_);
  if (from.master_weight() != 0) {
    set_master_weight(from.master_weight());
  }
}

void OperationSetSignerWeight::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.OperationSetSignerWeight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationSetSignerWeight::CopyFrom(const OperationSetSignerWeight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.OperationSetSignerWeight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationSetSignerWeight::IsInitialized() const {
  return true;
}

void OperationSetSignerWeight::Swap(OperationSetSignerWeight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationSetSignerWeight::InternalSwap(OperationSetSignerWeight* other) {
  using std::swap;
  CastToBase(&signers_)->InternalSwap(CastToBase(&other->signers_));
  swap(master_weight_, other->master_weight_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OperationSetSignerWeight::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperationLog::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationLog::kTopicFieldNumber;
const int OperationLog::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationLog::OperationLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_OperationLog.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.OperationLog)
}
OperationLog::OperationLog(const OperationLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      datas_(from.datas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic().size() > 0) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.OperationLog)
}

void OperationLog::SharedCtor() {
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OperationLog::~OperationLog() {
  // @@protoc_insertion_point(destructor:bumoProtocol.OperationLog)
  SharedDtor();
}

void OperationLog::SharedDtor() {
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OperationLog::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OperationLog::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperationLog& OperationLog::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_OperationLog.base);
  return *internal_default_instance();
}


void OperationLog::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.OperationLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  datas_.Clear();
  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool OperationLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.OperationLog)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string topic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.OperationLog.topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string datas = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_datas()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->datas(this->datas_size() - 1).data(),
            static_cast<int>(this->datas(this->datas_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.OperationLog.datas"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.OperationLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.OperationLog)
  return false;
#undef DO_
}

void OperationLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.OperationLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationLog.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->topic(), output);
  }

  // repeated string datas = 2;
  for (int i = 0, n = this->datas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->datas(i).data(), static_cast<int>(this->datas(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationLog.datas");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->datas(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.OperationLog)
}

::google::protobuf::uint8* OperationLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.OperationLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationLog.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->topic(), target);
  }

  // repeated string datas = 2;
  for (int i = 0, n = this->datas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->datas(i).data(), static_cast<int>(this->datas(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationLog.datas");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->datas(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.OperationLog)
  return target;
}

size_t OperationLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.OperationLog)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string datas = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->datas_size());
  for (int i = 0, n = this->datas_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->datas(i));
  }

  // string topic = 1;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperationLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.OperationLog)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.OperationLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.OperationLog)
    MergeFrom(*source);
  }
}

void OperationLog::MergeFrom(const OperationLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.OperationLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  datas_.MergeFrom(from.datas_);
  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
}

void OperationLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.OperationLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationLog::CopyFrom(const OperationLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.OperationLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationLog::IsInitialized() const {
  return true;
}

void OperationLog::Swap(OperationLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationLog::InternalSwap(OperationLog* other) {
  using std::swap;
  datas_.InternalSwap(CastToBase(&other->datas_));
  topic_.Swap(&other->topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OperationLog::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperationSetPrivilege::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationSetPrivilege::kMasterWeightFieldNumber;
const int OperationSetPrivilege::kSignersFieldNumber;
const int OperationSetPrivilege::kTxThresholdFieldNumber;
const int OperationSetPrivilege::kTypeThresholdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationSetPrivilege::OperationSetPrivilege()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_OperationSetPrivilege.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.OperationSetPrivilege)
}
OperationSetPrivilege::OperationSetPrivilege(const OperationSetPrivilege& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      signers_(from.signers_),
      type_thresholds_(from.type_thresholds_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  master_weight_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.master_weight().size() > 0) {
    master_weight_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.master_weight_);
  }
  tx_threshold_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tx_threshold().size() > 0) {
    tx_threshold_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_threshold_);
  }
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.OperationSetPrivilege)
}

void OperationSetPrivilege::SharedCtor() {
  master_weight_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_threshold_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OperationSetPrivilege::~OperationSetPrivilege() {
  // @@protoc_insertion_point(destructor:bumoProtocol.OperationSetPrivilege)
  SharedDtor();
}

void OperationSetPrivilege::SharedDtor() {
  master_weight_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_threshold_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OperationSetPrivilege::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OperationSetPrivilege::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperationSetPrivilege& OperationSetPrivilege::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_OperationSetPrivilege.base);
  return *internal_default_instance();
}


void OperationSetPrivilege::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.OperationSetPrivilege)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signers_.Clear();
  type_thresholds_.Clear();
  master_weight_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_threshold_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool OperationSetPrivilege::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.OperationSetPrivilege)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string master_weight = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_master_weight()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->master_weight().data(), static_cast<int>(this->master_weight().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.OperationSetPrivilege.master_weight"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bumoProtocol.Signer signers = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_signers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tx_threshold = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tx_threshold()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tx_threshold().data(), static_cast<int>(this->tx_threshold().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.OperationSetPrivilege.tx_threshold"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bumoProtocol.OperationTypeThreshold type_thresholds = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_type_thresholds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.OperationSetPrivilege)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.OperationSetPrivilege)
  return false;
#undef DO_
}

void OperationSetPrivilege::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.OperationSetPrivilege)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string master_weight = 1;
  if (this->master_weight().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->master_weight().data(), static_cast<int>(this->master_weight().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationSetPrivilege.master_weight");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->master_weight(), output);
  }

  // repeated .bumoProtocol.Signer signers = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->signers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->signers(static_cast<int>(i)),
      output);
  }

  // string tx_threshold = 3;
  if (this->tx_threshold().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tx_threshold().data(), static_cast<int>(this->tx_threshold().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationSetPrivilege.tx_threshold");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tx_threshold(), output);
  }

  // repeated .bumoProtocol.OperationTypeThreshold type_thresholds = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_thresholds_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->type_thresholds(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.OperationSetPrivilege)
}

::google::protobuf::uint8* OperationSetPrivilege::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.OperationSetPrivilege)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string master_weight = 1;
  if (this->master_weight().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->master_weight().data(), static_cast<int>(this->master_weight().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationSetPrivilege.master_weight");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->master_weight(), target);
  }

  // repeated .bumoProtocol.Signer signers = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->signers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->signers(static_cast<int>(i)), deterministic, target);
  }

  // string tx_threshold = 3;
  if (this->tx_threshold().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tx_threshold().data(), static_cast<int>(this->tx_threshold().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationSetPrivilege.tx_threshold");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tx_threshold(), target);
  }

  // repeated .bumoProtocol.OperationTypeThreshold type_thresholds = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_thresholds_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->type_thresholds(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.OperationSetPrivilege)
  return target;
}

size_t OperationSetPrivilege::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.OperationSetPrivilege)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bumoProtocol.Signer signers = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->signers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->signers(static_cast<int>(i)));
    }
  }

  // repeated .bumoProtocol.OperationTypeThreshold type_thresholds = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->type_thresholds_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->type_thresholds(static_cast<int>(i)));
    }
  }

  // string master_weight = 1;
  if (this->master_weight().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->master_weight());
  }

  // string tx_threshold = 3;
  if (this->tx_threshold().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tx_threshold());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperationSetPrivilege::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.OperationSetPrivilege)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationSetPrivilege* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationSetPrivilege>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.OperationSetPrivilege)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.OperationSetPrivilege)
    MergeFrom(*source);
  }
}

void OperationSetPrivilege::MergeFrom(const OperationSetPrivilege& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.OperationSetPrivilege)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  signers_.MergeFrom(from.signers_);
  type_thresholds_.MergeFrom(from.type_thresholds_);
  if (from.master_weight().size() > 0) {

    master_weight_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.master_weight_);
  }
  if (from.tx_threshold().size() > 0) {

    tx_threshold_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_threshold_);
  }
}

void OperationSetPrivilege::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.OperationSetPrivilege)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationSetPrivilege::CopyFrom(const OperationSetPrivilege& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.OperationSetPrivilege)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationSetPrivilege::IsInitialized() const {
  return true;
}

void OperationSetPrivilege::Swap(OperationSetPrivilege* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationSetPrivilege::InternalSwap(OperationSetPrivilege* other) {
  using std::swap;
  CastToBase(&signers_)->InternalSwap(CastToBase(&other->signers_));
  CastToBase(&type_thresholds_)->InternalSwap(CastToBase(&other->type_thresholds_));
  master_weight_.Swap(&other->master_weight_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tx_threshold_.Swap(&other->tx_threshold_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OperationSetPrivilege::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Operation::InitAsDefaultInstance() {
  ::bumoProtocol::_Operation_default_instance_._instance.get_mutable()->create_account_ = const_cast< ::bumoProtocol::OperationCreateAccount*>(
      ::bumoProtocol::OperationCreateAccount::internal_default_instance());
  ::bumoProtocol::_Operation_default_instance_._instance.get_mutable()->issue_asset_ = const_cast< ::bumoProtocol::OperationIssueAsset*>(
      ::bumoProtocol::OperationIssueAsset::internal_default_instance());
  ::bumoProtocol::_Operation_default_instance_._instance.get_mutable()->pay_asset_ = const_cast< ::bumoProtocol::OperationPayAsset*>(
      ::bumoProtocol::OperationPayAsset::internal_default_instance());
  ::bumoProtocol::_Operation_default_instance_._instance.get_mutable()->set_metadata_ = const_cast< ::bumoProtocol::OperationSetMetadata*>(
      ::bumoProtocol::OperationSetMetadata::internal_default_instance());
  ::bumoProtocol::_Operation_default_instance_._instance.get_mutable()->set_signer_weight_ = const_cast< ::bumoProtocol::OperationSetSignerWeight*>(
      ::bumoProtocol::OperationSetSignerWeight::internal_default_instance());
  ::bumoProtocol::_Operation_default_instance_._instance.get_mutable()->set_threshold_ = const_cast< ::bumoProtocol::OperationSetThreshold*>(
      ::bumoProtocol::OperationSetThreshold::internal_default_instance());
  ::bumoProtocol::_Operation_default_instance_._instance.get_mutable()->pay_coin_ = const_cast< ::bumoProtocol::OperationPayCoin*>(
      ::bumoProtocol::OperationPayCoin::internal_default_instance());
  ::bumoProtocol::_Operation_default_instance_._instance.get_mutable()->log_ = const_cast< ::bumoProtocol::OperationLog*>(
      ::bumoProtocol::OperationLog::internal_default_instance());
  ::bumoProtocol::_Operation_default_instance_._instance.get_mutable()->set_privilege_ = const_cast< ::bumoProtocol::OperationSetPrivilege*>(
      ::bumoProtocol::OperationSetPrivilege::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Operation::kTypeFieldNumber;
const int Operation::kSourceAddressFieldNumber;
const int Operation::kMetadataFieldNumber;
const int Operation::kCreateAccountFieldNumber;
const int Operation::kIssueAssetFieldNumber;
const int Operation::kPayAssetFieldNumber;
const int Operation::kSetMetadataFieldNumber;
const int Operation::kSetSignerWeightFieldNumber;
const int Operation::kSetThresholdFieldNumber;
const int Operation::kPayCoinFieldNumber;
const int Operation::kLogFieldNumber;
const int Operation::kSetPrivilegeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Operation::Operation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_Operation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.Operation)
}
Operation::Operation(const Operation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source_address().size() > 0) {
    source_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_address_);
  }
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.metadata().size() > 0) {
    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  if (from.has_create_account()) {
    create_account_ = new ::bumoProtocol::OperationCreateAccount(*from.create_account_);
  } else {
    create_account_ = NULL;
  }
  if (from.has_issue_asset()) {
    issue_asset_ = new ::bumoProtocol::OperationIssueAsset(*from.issue_asset_);
  } else {
    issue_asset_ = NULL;
  }
  if (from.has_pay_asset()) {
    pay_asset_ = new ::bumoProtocol::OperationPayAsset(*from.pay_asset_);
  } else {
    pay_asset_ = NULL;
  }
  if (from.has_set_metadata()) {
    set_metadata_ = new ::bumoProtocol::OperationSetMetadata(*from.set_metadata_);
  } else {
    set_metadata_ = NULL;
  }
  if (from.has_set_signer_weight()) {
    set_signer_weight_ = new ::bumoProtocol::OperationSetSignerWeight(*from.set_signer_weight_);
  } else {
    set_signer_weight_ = NULL;
  }
  if (from.has_set_threshold()) {
    set_threshold_ = new ::bumoProtocol::OperationSetThreshold(*from.set_threshold_);
  } else {
    set_threshold_ = NULL;
  }
  if (from.has_pay_coin()) {
    pay_coin_ = new ::bumoProtocol::OperationPayCoin(*from.pay_coin_);
  } else {
    pay_coin_ = NULL;
  }
  if (from.has_log()) {
    log_ = new ::bumoProtocol::OperationLog(*from.log_);
  } else {
    log_ = NULL;
  }
  if (from.has_set_privilege()) {
    set_privilege_ = new ::bumoProtocol::OperationSetPrivilege(*from.set_privilege_);
  } else {
    set_privilege_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.Operation)
}

void Operation::SharedCtor() {
  source_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_account_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&create_account_)) + sizeof(type_));
}

Operation::~Operation() {
  // @@protoc_insertion_point(destructor:bumoProtocol.Operation)
  SharedDtor();
}

void Operation::SharedDtor() {
  source_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_account_;
  if (this != internal_default_instance()) delete issue_asset_;
  if (this != internal_default_instance()) delete pay_asset_;
  if (this != internal_default_instance()) delete set_metadata_;
  if (this != internal_default_instance()) delete set_signer_weight_;
  if (this != internal_default_instance()) delete set_threshold_;
  if (this != internal_default_instance()) delete pay_coin_;
  if (this != internal_default_instance()) delete log_;
  if (this != internal_default_instance()) delete set_privilege_;
}

void Operation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Operation::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Operation& Operation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_Operation.base);
  return *internal_default_instance();
}


void Operation::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.Operation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  source_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && create_account_ != NULL) {
    delete create_account_;
  }
  create_account_ = NULL;
  if (GetArenaNoVirtual() == NULL && issue_asset_ != NULL) {
    delete issue_asset_;
  }
  issue_asset_ = NULL;
  if (GetArenaNoVirtual() == NULL && pay_asset_ != NULL) {
    delete pay_asset_;
  }
  pay_asset_ = NULL;
  if (GetArenaNoVirtual() == NULL && set_metadata_ != NULL) {
    delete set_metadata_;
  }
  set_metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && set_signer_weight_ != NULL) {
    delete set_signer_weight_;
  }
  set_signer_weight_ = NULL;
  if (GetArenaNoVirtual() == NULL && set_threshold_ != NULL) {
    delete set_threshold_;
  }
  set_threshold_ = NULL;
  if (GetArenaNoVirtual() == NULL && pay_coin_ != NULL) {
    delete pay_coin_;
  }
  pay_coin_ = NULL;
  if (GetArenaNoVirtual() == NULL && log_ != NULL) {
    delete log_;
  }
  log_ = NULL;
  if (GetArenaNoVirtual() == NULL && set_privilege_ != NULL) {
    delete set_privilege_;
  }
  set_privilege_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Operation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.Operation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bumoProtocol.Operation.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::bumoProtocol::Operation_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string source_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_address().data(), static_cast<int>(this->source_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.Operation.source_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes metadata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bumoProtocol.OperationCreateAccount create_account = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bumoProtocol.OperationIssueAsset issue_asset = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_issue_asset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bumoProtocol.OperationPayAsset pay_asset = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pay_asset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bumoProtocol.OperationSetMetadata set_metadata = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bumoProtocol.OperationSetSignerWeight set_signer_weight = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_signer_weight()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bumoProtocol.OperationSetThreshold set_threshold = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_threshold()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bumoProtocol.OperationPayCoin pay_coin = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pay_coin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bumoProtocol.OperationLog log = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_log()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bumoProtocol.OperationSetPrivilege set_privilege = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_privilege()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.Operation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.Operation)
  return false;
#undef DO_
}

void Operation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.Operation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bumoProtocol.Operation.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // string source_address = 2;
  if (this->source_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_address().data(), static_cast<int>(this->source_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.Operation.source_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->source_address(), output);
  }

  // bytes metadata = 3;
  if (this->metadata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->metadata(), output);
  }

  // .bumoProtocol.OperationCreateAccount create_account = 4;
  if (this->has_create_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_create_account(), output);
  }

  // .bumoProtocol.OperationIssueAsset issue_asset = 5;
  if (this->has_issue_asset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_issue_asset(), output);
  }

  // .bumoProtocol.OperationPayAsset pay_asset = 6;
  if (this->has_pay_asset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_pay_asset(), output);
  }

  // .bumoProtocol.OperationSetMetadata set_metadata = 7;
  if (this->has_set_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_set_metadata(), output);
  }

  // .bumoProtocol.OperationSetSignerWeight set_signer_weight = 8;
  if (this->has_set_signer_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_set_signer_weight(), output);
  }

  // .bumoProtocol.OperationSetThreshold set_threshold = 9;
  if (this->has_set_threshold()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_set_threshold(), output);
  }

  // .bumoProtocol.OperationPayCoin pay_coin = 10;
  if (this->has_pay_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_pay_coin(), output);
  }

  // .bumoProtocol.OperationLog log = 11;
  if (this->has_log()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_log(), output);
  }

  // .bumoProtocol.OperationSetPrivilege set_privilege = 12;
  if (this->has_set_privilege()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_set_privilege(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.Operation)
}

::google::protobuf::uint8* Operation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.Operation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bumoProtocol.Operation.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // string source_address = 2;
  if (this->source_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_address().data(), static_cast<int>(this->source_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.Operation.source_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->source_address(), target);
  }

  // bytes metadata = 3;
  if (this->metadata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->metadata(), target);
  }

  // .bumoProtocol.OperationCreateAccount create_account = 4;
  if (this->has_create_account()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_create_account(), deterministic, target);
  }

  // .bumoProtocol.OperationIssueAsset issue_asset = 5;
  if (this->has_issue_asset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_issue_asset(), deterministic, target);
  }

  // .bumoProtocol.OperationPayAsset pay_asset = 6;
  if (this->has_pay_asset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_pay_asset(), deterministic, target);
  }

  // .bumoProtocol.OperationSetMetadata set_metadata = 7;
  if (this->has_set_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_set_metadata(), deterministic, target);
  }

  // .bumoProtocol.OperationSetSignerWeight set_signer_weight = 8;
  if (this->has_set_signer_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_set_signer_weight(), deterministic, target);
  }

  // .bumoProtocol.OperationSetThreshold set_threshold = 9;
  if (this->has_set_threshold()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_set_threshold(), deterministic, target);
  }

  // .bumoProtocol.OperationPayCoin pay_coin = 10;
  if (this->has_pay_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_pay_coin(), deterministic, target);
  }

  // .bumoProtocol.OperationLog log = 11;
  if (this->has_log()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_log(), deterministic, target);
  }

  // .bumoProtocol.OperationSetPrivilege set_privilege = 12;
  if (this->has_set_privilege()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_set_privilege(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.Operation)
  return target;
}

size_t Operation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.Operation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string source_address = 2;
  if (this->source_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_address());
  }

  // bytes metadata = 3;
  if (this->metadata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->metadata());
  }

  // .bumoProtocol.OperationCreateAccount create_account = 4;
  if (this->has_create_account()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *create_account_);
  }

  // .bumoProtocol.OperationIssueAsset issue_asset = 5;
  if (this->has_issue_asset()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *issue_asset_);
  }

  // .bumoProtocol.OperationPayAsset pay_asset = 6;
  if (this->has_pay_asset()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pay_asset_);
  }

  // .bumoProtocol.OperationSetMetadata set_metadata = 7;
  if (this->has_set_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *set_metadata_);
  }

  // .bumoProtocol.OperationSetSignerWeight set_signer_weight = 8;
  if (this->has_set_signer_weight()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *set_signer_weight_);
  }

  // .bumoProtocol.OperationSetThreshold set_threshold = 9;
  if (this->has_set_threshold()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *set_threshold_);
  }

  // .bumoProtocol.OperationPayCoin pay_coin = 10;
  if (this->has_pay_coin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pay_coin_);
  }

  // .bumoProtocol.OperationLog log = 11;
  if (this->has_log()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *log_);
  }

  // .bumoProtocol.OperationSetPrivilege set_privilege = 12;
  if (this->has_set_privilege()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *set_privilege_);
  }

  // .bumoProtocol.Operation.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Operation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.Operation)
  GOOGLE_DCHECK_NE(&from, this);
  const Operation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Operation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.Operation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.Operation)
    MergeFrom(*source);
  }
}

void Operation::MergeFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.Operation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.source_address().size() > 0) {

    source_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_address_);
  }
  if (from.metadata().size() > 0) {

    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  if (from.has_create_account()) {
    mutable_create_account()->::bumoProtocol::OperationCreateAccount::MergeFrom(from.create_account());
  }
  if (from.has_issue_asset()) {
    mutable_issue_asset()->::bumoProtocol::OperationIssueAsset::MergeFrom(from.issue_asset());
  }
  if (from.has_pay_asset()) {
    mutable_pay_asset()->::bumoProtocol::OperationPayAsset::MergeFrom(from.pay_asset());
  }
  if (from.has_set_metadata()) {
    mutable_set_metadata()->::bumoProtocol::OperationSetMetadata::MergeFrom(from.set_metadata());
  }
  if (from.has_set_signer_weight()) {
    mutable_set_signer_weight()->::bumoProtocol::OperationSetSignerWeight::MergeFrom(from.set_signer_weight());
  }
  if (from.has_set_threshold()) {
    mutable_set_threshold()->::bumoProtocol::OperationSetThreshold::MergeFrom(from.set_threshold());
  }
  if (from.has_pay_coin()) {
    mutable_pay_coin()->::bumoProtocol::OperationPayCoin::MergeFrom(from.pay_coin());
  }
  if (from.has_log()) {
    mutable_log()->::bumoProtocol::OperationLog::MergeFrom(from.log());
  }
  if (from.has_set_privilege()) {
    mutable_set_privilege()->::bumoProtocol::OperationSetPrivilege::MergeFrom(from.set_privilege());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Operation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Operation::CopyFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operation::IsInitialized() const {
  return true;
}

void Operation::Swap(Operation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Operation::InternalSwap(Operation* other) {
  using std::swap;
  source_address_.Swap(&other->source_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  metadata_.Swap(&other->metadata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_account_, other->create_account_);
  swap(issue_asset_, other->issue_asset_);
  swap(pay_asset_, other->pay_asset_);
  swap(set_metadata_, other->set_metadata_);
  swap(set_signer_weight_, other->set_signer_weight_);
  swap(set_threshold_, other->set_threshold_);
  swap(pay_coin_, other->pay_coin_);
  swap(log_, other->log_);
  swap(set_privilege_, other->set_privilege_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Operation::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperationSetThreshold::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationSetThreshold::kTxThresholdFieldNumber;
const int OperationSetThreshold::kTypeThresholdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationSetThreshold::OperationSetThreshold()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_OperationSetThreshold.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.OperationSetThreshold)
}
OperationSetThreshold::OperationSetThreshold(const OperationSetThreshold& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      type_thresholds_(from.type_thresholds_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tx_threshold_ = from.tx_threshold_;
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.OperationSetThreshold)
}

void OperationSetThreshold::SharedCtor() {
  tx_threshold_ = GOOGLE_LONGLONG(0);
}

OperationSetThreshold::~OperationSetThreshold() {
  // @@protoc_insertion_point(destructor:bumoProtocol.OperationSetThreshold)
  SharedDtor();
}

void OperationSetThreshold::SharedDtor() {
}

void OperationSetThreshold::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OperationSetThreshold::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperationSetThreshold& OperationSetThreshold::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_OperationSetThreshold.base);
  return *internal_default_instance();
}


void OperationSetThreshold::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.OperationSetThreshold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_thresholds_.Clear();
  tx_threshold_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool OperationSetThreshold::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.OperationSetThreshold)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 tx_threshold = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tx_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bumoProtocol.OperationTypeThreshold type_thresholds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_type_thresholds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.OperationSetThreshold)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.OperationSetThreshold)
  return false;
#undef DO_
}

void OperationSetThreshold::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.OperationSetThreshold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 tx_threshold = 1;
  if (this->tx_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->tx_threshold(), output);
  }

  // repeated .bumoProtocol.OperationTypeThreshold type_thresholds = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_thresholds_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->type_thresholds(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.OperationSetThreshold)
}

::google::protobuf::uint8* OperationSetThreshold::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.OperationSetThreshold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 tx_threshold = 1;
  if (this->tx_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->tx_threshold(), target);
  }

  // repeated .bumoProtocol.OperationTypeThreshold type_thresholds = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_thresholds_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->type_thresholds(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.OperationSetThreshold)
  return target;
}

size_t OperationSetThreshold::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.OperationSetThreshold)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bumoProtocol.OperationTypeThreshold type_thresholds = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->type_thresholds_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->type_thresholds(static_cast<int>(i)));
    }
  }

  // int64 tx_threshold = 1;
  if (this->tx_threshold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tx_threshold());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperationSetThreshold::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.OperationSetThreshold)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationSetThreshold* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationSetThreshold>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.OperationSetThreshold)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.OperationSetThreshold)
    MergeFrom(*source);
  }
}

void OperationSetThreshold::MergeFrom(const OperationSetThreshold& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.OperationSetThreshold)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  type_thresholds_.MergeFrom(from.type_thresholds_);
  if (from.tx_threshold() != 0) {
    set_tx_threshold(from.tx_threshold());
  }
}

void OperationSetThreshold::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.OperationSetThreshold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationSetThreshold::CopyFrom(const OperationSetThreshold& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.OperationSetThreshold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationSetThreshold::IsInitialized() const {
  return true;
}

void OperationSetThreshold::Swap(OperationSetThreshold* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationSetThreshold::InternalSwap(OperationSetThreshold* other) {
  using std::swap;
  CastToBase(&type_thresholds_)->InternalSwap(CastToBase(&other->type_thresholds_));
  swap(tx_threshold_, other->tx_threshold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OperationSetThreshold::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Transaction::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Transaction::kSourceAddressFieldNumber;
const int Transaction::kNonceFieldNumber;
const int Transaction::kFeeLimitFieldNumber;
const int Transaction::kGasPriceFieldNumber;
const int Transaction::kCeilLedgerSeqFieldNumber;
const int Transaction::kMetadataFieldNumber;
const int Transaction::kOperationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Transaction::Transaction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_Transaction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.Transaction)
}
Transaction::Transaction(const Transaction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      operations_(from.operations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source_address().size() > 0) {
    source_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_address_);
  }
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.metadata().size() > 0) {
    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  ::memcpy(&nonce_, &from.nonce_,
    static_cast<size_t>(reinterpret_cast<char*>(&ceil_ledger_seq_) -
    reinterpret_cast<char*>(&nonce_)) + sizeof(ceil_ledger_seq_));
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.Transaction)
}

void Transaction::SharedCtor() {
  source_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nonce_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ceil_ledger_seq_) -
      reinterpret_cast<char*>(&nonce_)) + sizeof(ceil_ledger_seq_));
}

Transaction::~Transaction() {
  // @@protoc_insertion_point(destructor:bumoProtocol.Transaction)
  SharedDtor();
}

void Transaction::SharedDtor() {
  source_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Transaction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Transaction::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Transaction& Transaction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_Transaction.base);
  return *internal_default_instance();
}


void Transaction::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operations_.Clear();
  source_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nonce_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ceil_ledger_seq_) -
      reinterpret_cast<char*>(&nonce_)) + sizeof(ceil_ledger_seq_));
  _internal_metadata_.Clear();
}

bool Transaction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.Transaction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string source_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_address().data(), static_cast<int>(this->source_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.Transaction.source_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 nonce = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nonce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 fee_limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fee_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 gas_price = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &gas_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ceil_ledger_seq = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ceil_ledger_seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes metadata = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bumoProtocol.Operation operations = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_operations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.Transaction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.Transaction)
  return false;
#undef DO_
}

void Transaction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string source_address = 1;
  if (this->source_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_address().data(), static_cast<int>(this->source_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.Transaction.source_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->source_address(), output);
  }

  // int64 nonce = 2;
  if (this->nonce() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->nonce(), output);
  }

  // int64 fee_limit = 3;
  if (this->fee_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->fee_limit(), output);
  }

  // int64 gas_price = 4;
  if (this->gas_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->gas_price(), output);
  }

  // int64 ceil_ledger_seq = 5;
  if (this->ceil_ledger_seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->ceil_ledger_seq(), output);
  }

  // bytes metadata = 6;
  if (this->metadata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->metadata(), output);
  }

  // repeated .bumoProtocol.Operation operations = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->operations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->operations(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.Transaction)
}

::google::protobuf::uint8* Transaction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string source_address = 1;
  if (this->source_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_address().data(), static_cast<int>(this->source_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.Transaction.source_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->source_address(), target);
  }

  // int64 nonce = 2;
  if (this->nonce() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->nonce(), target);
  }

  // int64 fee_limit = 3;
  if (this->fee_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->fee_limit(), target);
  }

  // int64 gas_price = 4;
  if (this->gas_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->gas_price(), target);
  }

  // int64 ceil_ledger_seq = 5;
  if (this->ceil_ledger_seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->ceil_ledger_seq(), target);
  }

  // bytes metadata = 6;
  if (this->metadata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->metadata(), target);
  }

  // repeated .bumoProtocol.Operation operations = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->operations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->operations(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.Transaction)
  return target;
}

size_t Transaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.Transaction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bumoProtocol.Operation operations = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->operations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->operations(static_cast<int>(i)));
    }
  }

  // string source_address = 1;
  if (this->source_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_address());
  }

  // bytes metadata = 6;
  if (this->metadata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->metadata());
  }

  // int64 nonce = 2;
  if (this->nonce() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nonce());
  }

  // int64 fee_limit = 3;
  if (this->fee_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->fee_limit());
  }

  // int64 gas_price = 4;
  if (this->gas_price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->gas_price());
  }

  // int64 ceil_ledger_seq = 5;
  if (this->ceil_ledger_seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ceil_ledger_seq());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Transaction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.Transaction)
  GOOGLE_DCHECK_NE(&from, this);
  const Transaction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Transaction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.Transaction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.Transaction)
    MergeFrom(*source);
  }
}

void Transaction::MergeFrom(const Transaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.Transaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  operations_.MergeFrom(from.operations_);
  if (from.source_address().size() > 0) {

    source_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_address_);
  }
  if (from.metadata().size() > 0) {

    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  if (from.nonce() != 0) {
    set_nonce(from.nonce());
  }
  if (from.fee_limit() != 0) {
    set_fee_limit(from.fee_limit());
  }
  if (from.gas_price() != 0) {
    set_gas_price(from.gas_price());
  }
  if (from.ceil_ledger_seq() != 0) {
    set_ceil_ledger_seq(from.ceil_ledger_seq());
  }
}

void Transaction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Transaction::CopyFrom(const Transaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Transaction::IsInitialized() const {
  return true;
}

void Transaction::Swap(Transaction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Transaction::InternalSwap(Transaction* other) {
  using std::swap;
  CastToBase(&operations_)->InternalSwap(CastToBase(&other->operations_));
  source_address_.Swap(&other->source_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  metadata_.Swap(&other->metadata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nonce_, other->nonce_);
  swap(fee_limit_, other->fee_limit_);
  swap(gas_price_, other->gas_price_);
  swap(ceil_ledger_seq_, other->ceil_ledger_seq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Transaction::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Signer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Signer::kAddressFieldNumber;
const int Signer::kWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Signer::Signer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_Signer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.Signer)
}
Signer::Signer(const Signer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  weight_ = from.weight_;
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.Signer)
}

void Signer::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  weight_ = GOOGLE_LONGLONG(0);
}

Signer::~Signer() {
  // @@protoc_insertion_point(destructor:bumoProtocol.Signer)
  SharedDtor();
}

void Signer::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Signer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Signer::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Signer& Signer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_Signer.base);
  return *internal_default_instance();
}


void Signer::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.Signer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  weight_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Signer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.Signer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.Signer.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 weight = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.Signer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.Signer)
  return false;
#undef DO_
}

void Signer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.Signer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.Signer.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // int64 weight = 2;
  if (this->weight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->weight(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.Signer)
}

::google::protobuf::uint8* Signer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.Signer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.Signer.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // int64 weight = 2;
  if (this->weight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->weight(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.Signer)
  return target;
}

size_t Signer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.Signer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // int64 weight = 2;
  if (this->weight() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->weight());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Signer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.Signer)
  GOOGLE_DCHECK_NE(&from, this);
  const Signer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Signer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.Signer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.Signer)
    MergeFrom(*source);
  }
}

void Signer::MergeFrom(const Signer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.Signer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.weight() != 0) {
    set_weight(from.weight());
  }
}

void Signer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.Signer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Signer::CopyFrom(const Signer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.Signer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Signer::IsInitialized() const {
  return true;
}

void Signer::Swap(Signer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Signer::InternalSwap(Signer* other) {
  using std::swap;
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(weight_, other->weight_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Signer::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Trigger_OperationTrigger::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Trigger_OperationTrigger::kHashFieldNumber;
const int Trigger_OperationTrigger::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Trigger_OperationTrigger::Trigger_OperationTrigger()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_Trigger_OperationTrigger.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.Trigger.OperationTrigger)
}
Trigger_OperationTrigger::Trigger_OperationTrigger(const Trigger_OperationTrigger& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.Trigger.OperationTrigger)
}

void Trigger_OperationTrigger::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_ = GOOGLE_LONGLONG(0);
}

Trigger_OperationTrigger::~Trigger_OperationTrigger() {
  // @@protoc_insertion_point(destructor:bumoProtocol.Trigger.OperationTrigger)
  SharedDtor();
}

void Trigger_OperationTrigger::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Trigger_OperationTrigger::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Trigger_OperationTrigger::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Trigger_OperationTrigger& Trigger_OperationTrigger::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_Trigger_OperationTrigger.base);
  return *internal_default_instance();
}


void Trigger_OperationTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.Trigger.OperationTrigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Trigger_OperationTrigger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.Trigger.OperationTrigger)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.Trigger.OperationTrigger)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.Trigger.OperationTrigger)
  return false;
#undef DO_
}

void Trigger_OperationTrigger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.Trigger.OperationTrigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->hash(), output);
  }

  // int64 index = 2;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.Trigger.OperationTrigger)
}

::google::protobuf::uint8* Trigger_OperationTrigger::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.Trigger.OperationTrigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes hash = 1;
  if (this->hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->hash(), target);
  }

  // int64 index = 2;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.Trigger.OperationTrigger)
  return target;
}

size_t Trigger_OperationTrigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.Trigger.OperationTrigger)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes hash = 1;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hash());
  }

  // int64 index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Trigger_OperationTrigger::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.Trigger.OperationTrigger)
  GOOGLE_DCHECK_NE(&from, this);
  const Trigger_OperationTrigger* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Trigger_OperationTrigger>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.Trigger.OperationTrigger)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.Trigger.OperationTrigger)
    MergeFrom(*source);
  }
}

void Trigger_OperationTrigger::MergeFrom(const Trigger_OperationTrigger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.Trigger.OperationTrigger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void Trigger_OperationTrigger::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.Trigger.OperationTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Trigger_OperationTrigger::CopyFrom(const Trigger_OperationTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.Trigger.OperationTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Trigger_OperationTrigger::IsInitialized() const {
  return true;
}

void Trigger_OperationTrigger::Swap(Trigger_OperationTrigger* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Trigger_OperationTrigger::InternalSwap(Trigger_OperationTrigger* other) {
  using std::swap;
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Trigger_OperationTrigger::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Trigger::InitAsDefaultInstance() {
  ::bumoProtocol::_Trigger_default_instance_._instance.get_mutable()->transaction_ = const_cast< ::bumoProtocol::Trigger_OperationTrigger*>(
      ::bumoProtocol::Trigger_OperationTrigger::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Trigger::kTransactionTypeFieldNumber;
const int Trigger::kLedgerSeqFieldNumber;
const int Trigger::kTransactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Trigger::Trigger()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_Trigger.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.Trigger)
}
Trigger::Trigger(const Trigger& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_transaction()) {
    transaction_ = new ::bumoProtocol::Trigger_OperationTrigger(*from.transaction_);
  } else {
    transaction_ = NULL;
  }
  ::memcpy(&ledger_seq_, &from.ledger_seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&transaction_type_) -
    reinterpret_cast<char*>(&ledger_seq_)) + sizeof(transaction_type_));
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.Trigger)
}

void Trigger::SharedCtor() {
  ::memset(&transaction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transaction_type_) -
      reinterpret_cast<char*>(&transaction_)) + sizeof(transaction_type_));
}

Trigger::~Trigger() {
  // @@protoc_insertion_point(destructor:bumoProtocol.Trigger)
  SharedDtor();
}

void Trigger::SharedDtor() {
  if (this != internal_default_instance()) delete transaction_;
}

void Trigger::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Trigger::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Trigger& Trigger::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_Trigger.base);
  return *internal_default_instance();
}


void Trigger::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.Trigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && transaction_ != NULL) {
    delete transaction_;
  }
  transaction_ = NULL;
  ::memset(&ledger_seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transaction_type_) -
      reinterpret_cast<char*>(&ledger_seq_)) + sizeof(transaction_type_));
  _internal_metadata_.Clear();
}

bool Trigger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.Trigger)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bumoProtocol.Trigger.TransactionType transaction_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_transaction_type(static_cast< ::bumoProtocol::Trigger_TransactionType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ledger_seq = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ledger_seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bumoProtocol.Trigger.OperationTrigger transaction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.Trigger)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.Trigger)
  return false;
#undef DO_
}

void Trigger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.Trigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bumoProtocol.Trigger.TransactionType transaction_type = 1;
  if (this->transaction_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->transaction_type(), output);
  }

  // int64 ledger_seq = 2;
  if (this->ledger_seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->ledger_seq(), output);
  }

  // .bumoProtocol.Trigger.OperationTrigger transaction = 3;
  if (this->has_transaction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_transaction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.Trigger)
}

::google::protobuf::uint8* Trigger::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.Trigger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bumoProtocol.Trigger.TransactionType transaction_type = 1;
  if (this->transaction_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->transaction_type(), target);
  }

  // int64 ledger_seq = 2;
  if (this->ledger_seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->ledger_seq(), target);
  }

  // .bumoProtocol.Trigger.OperationTrigger transaction = 3;
  if (this->has_transaction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_transaction(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.Trigger)
  return target;
}

size_t Trigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.Trigger)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bumoProtocol.Trigger.OperationTrigger transaction = 3;
  if (this->has_transaction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *transaction_);
  }

  // int64 ledger_seq = 2;
  if (this->ledger_seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ledger_seq());
  }

  // .bumoProtocol.Trigger.TransactionType transaction_type = 1;
  if (this->transaction_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->transaction_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Trigger::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.Trigger)
  GOOGLE_DCHECK_NE(&from, this);
  const Trigger* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Trigger>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.Trigger)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.Trigger)
    MergeFrom(*source);
  }
}

void Trigger::MergeFrom(const Trigger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.Trigger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_transaction()) {
    mutable_transaction()->::bumoProtocol::Trigger_OperationTrigger::MergeFrom(from.transaction());
  }
  if (from.ledger_seq() != 0) {
    set_ledger_seq(from.ledger_seq());
  }
  if (from.transaction_type() != 0) {
    set_transaction_type(from.transaction_type());
  }
}

void Trigger::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.Trigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Trigger::CopyFrom(const Trigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.Trigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Trigger::IsInitialized() const {
  return true;
}

void Trigger::Swap(Trigger* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Trigger::InternalSwap(Trigger* other) {
  using std::swap;
  swap(transaction_, other->transaction_);
  swap(ledger_seq_, other->ledger_seq_);
  swap(transaction_type_, other->transaction_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Trigger::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransactionEnv::InitAsDefaultInstance() {
  ::bumoProtocol::_TransactionEnv_default_instance_._instance.get_mutable()->transaction_ = const_cast< ::bumoProtocol::Transaction*>(
      ::bumoProtocol::Transaction::internal_default_instance());
  ::bumoProtocol::_TransactionEnv_default_instance_._instance.get_mutable()->trigger_ = const_cast< ::bumoProtocol::Trigger*>(
      ::bumoProtocol::Trigger::internal_default_instance());
}
void TransactionEnv::clear_signatures() {
  signatures_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransactionEnv::kTransactionFieldNumber;
const int TransactionEnv::kSignaturesFieldNumber;
const int TransactionEnv::kTriggerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionEnv::TransactionEnv()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_TransactionEnv.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.TransactionEnv)
}
TransactionEnv::TransactionEnv(const TransactionEnv& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      signatures_(from.signatures_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_transaction()) {
    transaction_ = new ::bumoProtocol::Transaction(*from.transaction_);
  } else {
    transaction_ = NULL;
  }
  if (from.has_trigger()) {
    trigger_ = new ::bumoProtocol::Trigger(*from.trigger_);
  } else {
    trigger_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.TransactionEnv)
}

void TransactionEnv::SharedCtor() {
  ::memset(&transaction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trigger_) -
      reinterpret_cast<char*>(&transaction_)) + sizeof(trigger_));
}

TransactionEnv::~TransactionEnv() {
  // @@protoc_insertion_point(destructor:bumoProtocol.TransactionEnv)
  SharedDtor();
}

void TransactionEnv::SharedDtor() {
  if (this != internal_default_instance()) delete transaction_;
  if (this != internal_default_instance()) delete trigger_;
}

void TransactionEnv::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransactionEnv::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransactionEnv& TransactionEnv::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_TransactionEnv.base);
  return *internal_default_instance();
}


void TransactionEnv::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.TransactionEnv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signatures_.Clear();
  if (GetArenaNoVirtual() == NULL && transaction_ != NULL) {
    delete transaction_;
  }
  transaction_ = NULL;
  if (GetArenaNoVirtual() == NULL && trigger_ != NULL) {
    delete trigger_;
  }
  trigger_ = NULL;
  _internal_metadata_.Clear();
}

bool TransactionEnv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.TransactionEnv)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bumoProtocol.Transaction transaction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bumoProtocol.Signature signatures = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_signatures()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bumoProtocol.Trigger trigger = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_trigger()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.TransactionEnv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.TransactionEnv)
  return false;
#undef DO_
}

void TransactionEnv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.TransactionEnv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bumoProtocol.Transaction transaction = 1;
  if (this->has_transaction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_transaction(), output);
  }

  // repeated .bumoProtocol.Signature signatures = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->signatures_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->signatures(static_cast<int>(i)),
      output);
  }

  // .bumoProtocol.Trigger trigger = 3;
  if (this->has_trigger()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_trigger(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.TransactionEnv)
}

::google::protobuf::uint8* TransactionEnv::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.TransactionEnv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bumoProtocol.Transaction transaction = 1;
  if (this->has_transaction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_transaction(), deterministic, target);
  }

  // repeated .bumoProtocol.Signature signatures = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->signatures_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->signatures(static_cast<int>(i)), deterministic, target);
  }

  // .bumoProtocol.Trigger trigger = 3;
  if (this->has_trigger()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_trigger(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.TransactionEnv)
  return target;
}

size_t TransactionEnv::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.TransactionEnv)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bumoProtocol.Signature signatures = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->signatures_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->signatures(static_cast<int>(i)));
    }
  }

  // .bumoProtocol.Transaction transaction = 1;
  if (this->has_transaction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *transaction_);
  }

  // .bumoProtocol.Trigger trigger = 3;
  if (this->has_trigger()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *trigger_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionEnv::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.TransactionEnv)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionEnv* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransactionEnv>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.TransactionEnv)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.TransactionEnv)
    MergeFrom(*source);
  }
}

void TransactionEnv::MergeFrom(const TransactionEnv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.TransactionEnv)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  signatures_.MergeFrom(from.signatures_);
  if (from.has_transaction()) {
    mutable_transaction()->::bumoProtocol::Transaction::MergeFrom(from.transaction());
  }
  if (from.has_trigger()) {
    mutable_trigger()->::bumoProtocol::Trigger::MergeFrom(from.trigger());
  }
}

void TransactionEnv::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.TransactionEnv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionEnv::CopyFrom(const TransactionEnv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.TransactionEnv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionEnv::IsInitialized() const {
  return true;
}

void TransactionEnv::Swap(TransactionEnv* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionEnv::InternalSwap(TransactionEnv* other) {
  using std::swap;
  CastToBase(&signatures_)->InternalSwap(CastToBase(&other->signatures_));
  swap(transaction_, other->transaction_);
  swap(trigger_, other->trigger_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransactionEnv::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransactionEnvStore::InitAsDefaultInstance() {
  ::bumoProtocol::_TransactionEnvStore_default_instance_._instance.get_mutable()->transaction_env_ = const_cast< ::bumoProtocol::TransactionEnv*>(
      ::bumoProtocol::TransactionEnv::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransactionEnvStore::kTransactionEnvFieldNumber;
const int TransactionEnvStore::kErrorCodeFieldNumber;
const int TransactionEnvStore::kErrorDescFieldNumber;
const int TransactionEnvStore::kLedgerSeqFieldNumber;
const int TransactionEnvStore::kCloseTimeFieldNumber;
const int TransactionEnvStore::kHashFieldNumber;
const int TransactionEnvStore::kActualFeeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionEnvStore::TransactionEnvStore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_TransactionEnvStore.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.TransactionEnvStore)
}
TransactionEnvStore::TransactionEnvStore(const TransactionEnvStore& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_desc().size() > 0) {
    error_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_desc_);
  }
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.has_transaction_env()) {
    transaction_env_ = new ::bumoProtocol::TransactionEnv(*from.transaction_env_);
  } else {
    transaction_env_ = NULL;
  }
  ::memcpy(&ledger_seq_, &from.ledger_seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_code_) -
    reinterpret_cast<char*>(&ledger_seq_)) + sizeof(error_code_));
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.TransactionEnvStore)
}

void TransactionEnvStore::SharedCtor() {
  error_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&transaction_env_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&transaction_env_)) + sizeof(error_code_));
}

TransactionEnvStore::~TransactionEnvStore() {
  // @@protoc_insertion_point(destructor:bumoProtocol.TransactionEnvStore)
  SharedDtor();
}

void TransactionEnvStore::SharedDtor() {
  error_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete transaction_env_;
}

void TransactionEnvStore::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransactionEnvStore::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransactionEnvStore& TransactionEnvStore::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_TransactionEnvStore.base);
  return *internal_default_instance();
}


void TransactionEnvStore::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.TransactionEnvStore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && transaction_env_ != NULL) {
    delete transaction_env_;
  }
  transaction_env_ = NULL;
  ::memset(&ledger_seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&ledger_seq_)) + sizeof(error_code_));
  _internal_metadata_.Clear();
}

bool TransactionEnvStore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.TransactionEnvStore)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bumoProtocol.TransactionEnv transaction_env = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transaction_env()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 error_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_desc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_desc().data(), static_cast<int>(this->error_desc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.TransactionEnvStore.error_desc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ledger_seq = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ledger_seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 close_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &close_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes hash = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 actual_fee = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &actual_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.TransactionEnvStore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.TransactionEnvStore)
  return false;
#undef DO_
}

void TransactionEnvStore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.TransactionEnvStore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bumoProtocol.TransactionEnv transaction_env = 1;
  if (this->has_transaction_env()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_transaction_env(), output);
  }

  // int32 error_code = 2;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->error_code(), output);
  }

  // string error_desc = 3;
  if (this->error_desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_desc().data(), static_cast<int>(this->error_desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.TransactionEnvStore.error_desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error_desc(), output);
  }

  // int64 ledger_seq = 4;
  if (this->ledger_seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->ledger_seq(), output);
  }

  // int64 close_time = 5;
  if (this->close_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->close_time(), output);
  }

  // bytes hash = 6;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->hash(), output);
  }

  // int64 actual_fee = 7;
  if (this->actual_fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->actual_fee(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.TransactionEnvStore)
}

::google::protobuf::uint8* TransactionEnvStore::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.TransactionEnvStore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bumoProtocol.TransactionEnv transaction_env = 1;
  if (this->has_transaction_env()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_transaction_env(), deterministic, target);
  }

  // int32 error_code = 2;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->error_code(), target);
  }

  // string error_desc = 3;
  if (this->error_desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_desc().data(), static_cast<int>(this->error_desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.TransactionEnvStore.error_desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error_desc(), target);
  }

  // int64 ledger_seq = 4;
  if (this->ledger_seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->ledger_seq(), target);
  }

  // int64 close_time = 5;
  if (this->close_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->close_time(), target);
  }

  // bytes hash = 6;
  if (this->hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->hash(), target);
  }

  // int64 actual_fee = 7;
  if (this->actual_fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->actual_fee(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.TransactionEnvStore)
  return target;
}

size_t TransactionEnvStore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.TransactionEnvStore)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error_desc = 3;
  if (this->error_desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_desc());
  }

  // bytes hash = 6;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hash());
  }

  // .bumoProtocol.TransactionEnv transaction_env = 1;
  if (this->has_transaction_env()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *transaction_env_);
  }

  // int64 ledger_seq = 4;
  if (this->ledger_seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ledger_seq());
  }

  // int64 close_time = 5;
  if (this->close_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->close_time());
  }

  // int64 actual_fee = 7;
  if (this->actual_fee() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->actual_fee());
  }

  // int32 error_code = 2;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionEnvStore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.TransactionEnvStore)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionEnvStore* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransactionEnvStore>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.TransactionEnvStore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.TransactionEnvStore)
    MergeFrom(*source);
  }
}

void TransactionEnvStore::MergeFrom(const TransactionEnvStore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.TransactionEnvStore)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_desc().size() > 0) {

    error_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_desc_);
  }
  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.has_transaction_env()) {
    mutable_transaction_env()->::bumoProtocol::TransactionEnv::MergeFrom(from.transaction_env());
  }
  if (from.ledger_seq() != 0) {
    set_ledger_seq(from.ledger_seq());
  }
  if (from.close_time() != 0) {
    set_close_time(from.close_time());
  }
  if (from.actual_fee() != 0) {
    set_actual_fee(from.actual_fee());
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
}

void TransactionEnvStore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.TransactionEnvStore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionEnvStore::CopyFrom(const TransactionEnvStore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.TransactionEnvStore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionEnvStore::IsInitialized() const {
  return true;
}

void TransactionEnvStore::Swap(TransactionEnvStore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionEnvStore::InternalSwap(TransactionEnvStore* other) {
  using std::swap;
  error_desc_.Swap(&other->error_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(transaction_env_, other->transaction_env_);
  swap(ledger_seq_, other->ledger_seq_);
  swap(close_time_, other->close_time_);
  swap(actual_fee_, other->actual_fee_);
  swap(error_code_, other->error_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransactionEnvStore::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransactionEnvSet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransactionEnvSet::kTxsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransactionEnvSet::TransactionEnvSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_TransactionEnvSet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.TransactionEnvSet)
}
TransactionEnvSet::TransactionEnvSet(const TransactionEnvSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      txs_(from.txs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.TransactionEnvSet)
}

void TransactionEnvSet::SharedCtor() {
}

TransactionEnvSet::~TransactionEnvSet() {
  // @@protoc_insertion_point(destructor:bumoProtocol.TransactionEnvSet)
  SharedDtor();
}

void TransactionEnvSet::SharedDtor() {
}

void TransactionEnvSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransactionEnvSet::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransactionEnvSet& TransactionEnvSet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_TransactionEnvSet.base);
  return *internal_default_instance();
}


void TransactionEnvSet::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.TransactionEnvSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txs_.Clear();
  _internal_metadata_.Clear();
}

bool TransactionEnvSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.TransactionEnvSet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bumoProtocol.TransactionEnv txs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_txs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.TransactionEnvSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.TransactionEnvSet)
  return false;
#undef DO_
}

void TransactionEnvSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.TransactionEnvSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bumoProtocol.TransactionEnv txs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->txs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->txs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.TransactionEnvSet)
}

::google::protobuf::uint8* TransactionEnvSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.TransactionEnvSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bumoProtocol.TransactionEnv txs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->txs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->txs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.TransactionEnvSet)
  return target;
}

size_t TransactionEnvSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.TransactionEnvSet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bumoProtocol.TransactionEnv txs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->txs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->txs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionEnvSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.TransactionEnvSet)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionEnvSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransactionEnvSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.TransactionEnvSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.TransactionEnvSet)
    MergeFrom(*source);
  }
}

void TransactionEnvSet::MergeFrom(const TransactionEnvSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.TransactionEnvSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  txs_.MergeFrom(from.txs_);
}

void TransactionEnvSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.TransactionEnvSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionEnvSet::CopyFrom(const TransactionEnvSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.TransactionEnvSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionEnvSet::IsInitialized() const {
  return true;
}

void TransactionEnvSet::Swap(TransactionEnvSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransactionEnvSet::InternalSwap(TransactionEnvSet* other) {
  using std::swap;
  CastToBase(&txs_)->InternalSwap(CastToBase(&other->txs_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransactionEnvSet::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConsensusValueValidation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConsensusValueValidation::kExpireTxIdsFieldNumber;
const int ConsensusValueValidation::kErrorTxIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConsensusValueValidation::ConsensusValueValidation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_ConsensusValueValidation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.ConsensusValueValidation)
}
ConsensusValueValidation::ConsensusValueValidation(const ConsensusValueValidation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      expire_tx_ids_(from.expire_tx_ids_),
      error_tx_ids_(from.error_tx_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.ConsensusValueValidation)
}

void ConsensusValueValidation::SharedCtor() {
}

ConsensusValueValidation::~ConsensusValueValidation() {
  // @@protoc_insertion_point(destructor:bumoProtocol.ConsensusValueValidation)
  SharedDtor();
}

void ConsensusValueValidation::SharedDtor() {
}

void ConsensusValueValidation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConsensusValueValidation::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConsensusValueValidation& ConsensusValueValidation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_ConsensusValueValidation.base);
  return *internal_default_instance();
}


void ConsensusValueValidation::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.ConsensusValueValidation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  expire_tx_ids_.Clear();
  error_tx_ids_.Clear();
  _internal_metadata_.Clear();
}

bool ConsensusValueValidation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.ConsensusValueValidation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 expire_tx_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_expire_tx_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_expire_tx_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 error_tx_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_error_tx_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_error_tx_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.ConsensusValueValidation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.ConsensusValueValidation)
  return false;
#undef DO_
}

void ConsensusValueValidation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.ConsensusValueValidation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 expire_tx_ids = 1;
  if (this->expire_tx_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _expire_tx_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->expire_tx_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->expire_tx_ids(i), output);
  }

  // repeated int32 error_tx_ids = 2;
  if (this->error_tx_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _error_tx_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->error_tx_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->error_tx_ids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.ConsensusValueValidation)
}

::google::protobuf::uint8* ConsensusValueValidation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.ConsensusValueValidation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 expire_tx_ids = 1;
  if (this->expire_tx_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _expire_tx_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->expire_tx_ids_, target);
  }

  // repeated int32 error_tx_ids = 2;
  if (this->error_tx_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _error_tx_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->error_tx_ids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.ConsensusValueValidation)
  return target;
}

size_t ConsensusValueValidation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.ConsensusValueValidation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 expire_tx_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->expire_tx_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _expire_tx_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 error_tx_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->error_tx_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _error_tx_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConsensusValueValidation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.ConsensusValueValidation)
  GOOGLE_DCHECK_NE(&from, this);
  const ConsensusValueValidation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConsensusValueValidation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.ConsensusValueValidation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.ConsensusValueValidation)
    MergeFrom(*source);
  }
}

void ConsensusValueValidation::MergeFrom(const ConsensusValueValidation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.ConsensusValueValidation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  expire_tx_ids_.MergeFrom(from.expire_tx_ids_);
  error_tx_ids_.MergeFrom(from.error_tx_ids_);
}

void ConsensusValueValidation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.ConsensusValueValidation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConsensusValueValidation::CopyFrom(const ConsensusValueValidation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.ConsensusValueValidation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConsensusValueValidation::IsInitialized() const {
  return true;
}

void ConsensusValueValidation::Swap(ConsensusValueValidation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConsensusValueValidation::InternalSwap(ConsensusValueValidation* other) {
  using std::swap;
  expire_tx_ids_.InternalSwap(&other->expire_tx_ids_);
  error_tx_ids_.InternalSwap(&other->error_tx_ids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConsensusValueValidation::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConsensusValue::InitAsDefaultInstance() {
  ::bumoProtocol::_ConsensusValue_default_instance_._instance.get_mutable()->txset_ = const_cast< ::bumoProtocol::TransactionEnvSet*>(
      ::bumoProtocol::TransactionEnvSet::internal_default_instance());
  ::bumoProtocol::_ConsensusValue_default_instance_._instance.get_mutable()->ledger_upgrade_ = const_cast< ::bumoProtocol::LedgerUpgrade*>(
      ::bumoProtocol::LedgerUpgrade::internal_default_instance());
  ::bumoProtocol::_ConsensusValue_default_instance_._instance.get_mutable()->validation_ = const_cast< ::bumoProtocol::ConsensusValueValidation*>(
      ::bumoProtocol::ConsensusValueValidation::internal_default_instance());
}
void ConsensusValue::clear_ledger_upgrade() {
  if (GetArenaNoVirtual() == NULL && ledger_upgrade_ != NULL) {
    delete ledger_upgrade_;
  }
  ledger_upgrade_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConsensusValue::kTxsetFieldNumber;
const int ConsensusValue::kCloseTimeFieldNumber;
const int ConsensusValue::kPreviousProofFieldNumber;
const int ConsensusValue::kLedgerSeqFieldNumber;
const int ConsensusValue::kPreviousLedgerHashFieldNumber;
const int ConsensusValue::kLedgerUpgradeFieldNumber;
const int ConsensusValue::kValidationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConsensusValue::ConsensusValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_ConsensusValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.ConsensusValue)
}
ConsensusValue::ConsensusValue(const ConsensusValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  previous_proof_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.previous_proof().size() > 0) {
    previous_proof_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.previous_proof_);
  }
  previous_ledger_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.previous_ledger_hash().size() > 0) {
    previous_ledger_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.previous_ledger_hash_);
  }
  if (from.has_txset()) {
    txset_ = new ::bumoProtocol::TransactionEnvSet(*from.txset_);
  } else {
    txset_ = NULL;
  }
  if (from.has_ledger_upgrade()) {
    ledger_upgrade_ = new ::bumoProtocol::LedgerUpgrade(*from.ledger_upgrade_);
  } else {
    ledger_upgrade_ = NULL;
  }
  if (from.has_validation()) {
    validation_ = new ::bumoProtocol::ConsensusValueValidation(*from.validation_);
  } else {
    validation_ = NULL;
  }
  ::memcpy(&close_time_, &from.close_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&ledger_seq_) -
    reinterpret_cast<char*>(&close_time_)) + sizeof(ledger_seq_));
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.ConsensusValue)
}

void ConsensusValue::SharedCtor() {
  previous_proof_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  previous_ledger_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&txset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ledger_seq_) -
      reinterpret_cast<char*>(&txset_)) + sizeof(ledger_seq_));
}

ConsensusValue::~ConsensusValue() {
  // @@protoc_insertion_point(destructor:bumoProtocol.ConsensusValue)
  SharedDtor();
}

void ConsensusValue::SharedDtor() {
  previous_proof_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  previous_ledger_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete txset_;
  if (this != internal_default_instance()) delete ledger_upgrade_;
  if (this != internal_default_instance()) delete validation_;
}

void ConsensusValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConsensusValue::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConsensusValue& ConsensusValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_ConsensusValue.base);
  return *internal_default_instance();
}


void ConsensusValue::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.ConsensusValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  previous_proof_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  previous_ledger_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && txset_ != NULL) {
    delete txset_;
  }
  txset_ = NULL;
  if (GetArenaNoVirtual() == NULL && ledger_upgrade_ != NULL) {
    delete ledger_upgrade_;
  }
  ledger_upgrade_ = NULL;
  if (GetArenaNoVirtual() == NULL && validation_ != NULL) {
    delete validation_;
  }
  validation_ = NULL;
  ::memset(&close_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ledger_seq_) -
      reinterpret_cast<char*>(&close_time_)) + sizeof(ledger_seq_));
  _internal_metadata_.Clear();
}

bool ConsensusValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.ConsensusValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bumoProtocol.TransactionEnvSet txset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_txset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 close_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &close_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes previous_proof = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_previous_proof()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ledger_seq = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ledger_seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes previous_ledger_hash = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_previous_ledger_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bumoProtocol.LedgerUpgrade ledger_upgrade = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ledger_upgrade()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bumoProtocol.ConsensusValueValidation validation = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_validation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.ConsensusValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.ConsensusValue)
  return false;
#undef DO_
}

void ConsensusValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.ConsensusValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bumoProtocol.TransactionEnvSet txset = 1;
  if (this->has_txset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_txset(), output);
  }

  // int64 close_time = 2;
  if (this->close_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->close_time(), output);
  }

  // bytes previous_proof = 3;
  if (this->previous_proof().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->previous_proof(), output);
  }

  // int64 ledger_seq = 4;
  if (this->ledger_seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->ledger_seq(), output);
  }

  // bytes previous_ledger_hash = 5;
  if (this->previous_ledger_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->previous_ledger_hash(), output);
  }

  // .bumoProtocol.LedgerUpgrade ledger_upgrade = 6;
  if (this->has_ledger_upgrade()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_ledger_upgrade(), output);
  }

  // .bumoProtocol.ConsensusValueValidation validation = 7;
  if (this->has_validation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_validation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.ConsensusValue)
}

::google::protobuf::uint8* ConsensusValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.ConsensusValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bumoProtocol.TransactionEnvSet txset = 1;
  if (this->has_txset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_txset(), deterministic, target);
  }

  // int64 close_time = 2;
  if (this->close_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->close_time(), target);
  }

  // bytes previous_proof = 3;
  if (this->previous_proof().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->previous_proof(), target);
  }

  // int64 ledger_seq = 4;
  if (this->ledger_seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->ledger_seq(), target);
  }

  // bytes previous_ledger_hash = 5;
  if (this->previous_ledger_hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->previous_ledger_hash(), target);
  }

  // .bumoProtocol.LedgerUpgrade ledger_upgrade = 6;
  if (this->has_ledger_upgrade()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_ledger_upgrade(), deterministic, target);
  }

  // .bumoProtocol.ConsensusValueValidation validation = 7;
  if (this->has_validation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_validation(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.ConsensusValue)
  return target;
}

size_t ConsensusValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.ConsensusValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes previous_proof = 3;
  if (this->previous_proof().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->previous_proof());
  }

  // bytes previous_ledger_hash = 5;
  if (this->previous_ledger_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->previous_ledger_hash());
  }

  // .bumoProtocol.TransactionEnvSet txset = 1;
  if (this->has_txset()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *txset_);
  }

  // .bumoProtocol.LedgerUpgrade ledger_upgrade = 6;
  if (this->has_ledger_upgrade()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ledger_upgrade_);
  }

  // .bumoProtocol.ConsensusValueValidation validation = 7;
  if (this->has_validation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *validation_);
  }

  // int64 close_time = 2;
  if (this->close_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->close_time());
  }

  // int64 ledger_seq = 4;
  if (this->ledger_seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ledger_seq());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConsensusValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.ConsensusValue)
  GOOGLE_DCHECK_NE(&from, this);
  const ConsensusValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConsensusValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.ConsensusValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.ConsensusValue)
    MergeFrom(*source);
  }
}

void ConsensusValue::MergeFrom(const ConsensusValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.ConsensusValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.previous_proof().size() > 0) {

    previous_proof_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.previous_proof_);
  }
  if (from.previous_ledger_hash().size() > 0) {

    previous_ledger_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.previous_ledger_hash_);
  }
  if (from.has_txset()) {
    mutable_txset()->::bumoProtocol::TransactionEnvSet::MergeFrom(from.txset());
  }
  if (from.has_ledger_upgrade()) {
    mutable_ledger_upgrade()->::bumoProtocol::LedgerUpgrade::MergeFrom(from.ledger_upgrade());
  }
  if (from.has_validation()) {
    mutable_validation()->::bumoProtocol::ConsensusValueValidation::MergeFrom(from.validation());
  }
  if (from.close_time() != 0) {
    set_close_time(from.close_time());
  }
  if (from.ledger_seq() != 0) {
    set_ledger_seq(from.ledger_seq());
  }
}

void ConsensusValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.ConsensusValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConsensusValue::CopyFrom(const ConsensusValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.ConsensusValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConsensusValue::IsInitialized() const {
  return true;
}

void ConsensusValue::Swap(ConsensusValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConsensusValue::InternalSwap(ConsensusValue* other) {
  using std::swap;
  previous_proof_.Swap(&other->previous_proof_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  previous_ledger_hash_.Swap(&other->previous_ledger_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(txset_, other->txset_);
  swap(ledger_upgrade_, other->ledger_upgrade_);
  swap(validation_, other->validation_);
  swap(close_time_, other->close_time_);
  swap(ledger_seq_, other->ledger_seq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConsensusValue::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Contract::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Contract::kTypeFieldNumber;
const int Contract::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Contract::Contract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_Contract.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.Contract)
}
Contract::Contract(const Contract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payload().size() > 0) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.Contract)
}

void Contract::SharedCtor() {
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

Contract::~Contract() {
  // @@protoc_insertion_point(destructor:bumoProtocol.Contract)
  SharedDtor();
}

void Contract::SharedDtor() {
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Contract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Contract::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Contract& Contract::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_Contract.base);
  return *internal_default_instance();
}


void Contract::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.Contract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Contract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.Contract)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bumoProtocol.Contract.ContractType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::bumoProtocol::Contract_ContractType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string payload = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_payload()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->payload().data(), static_cast<int>(this->payload().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.Contract.payload"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.Contract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.Contract)
  return false;
#undef DO_
}

void Contract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.Contract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bumoProtocol.Contract.ContractType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // string payload = 2;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payload().data(), static_cast<int>(this->payload().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.Contract.payload");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->payload(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.Contract)
}

::google::protobuf::uint8* Contract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.Contract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bumoProtocol.Contract.ContractType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // string payload = 2;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payload().data(), static_cast<int>(this->payload().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.Contract.payload");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->payload(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.Contract)
  return target;
}

size_t Contract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.Contract)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string payload = 2;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->payload());
  }

  // .bumoProtocol.Contract.ContractType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Contract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.Contract)
  GOOGLE_DCHECK_NE(&from, this);
  const Contract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Contract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.Contract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.Contract)
    MergeFrom(*source);
  }
}

void Contract::MergeFrom(const Contract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.Contract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Contract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.Contract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Contract::CopyFrom(const Contract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.Contract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Contract::IsInitialized() const {
  return true;
}

void Contract::Swap(Contract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Contract::InternalSwap(Contract* other) {
  using std::swap;
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Contract::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperationCreateAccount::InitAsDefaultInstance() {
  ::bumoProtocol::_OperationCreateAccount_default_instance_._instance.get_mutable()->contract_ = const_cast< ::bumoProtocol::Contract*>(
      ::bumoProtocol::Contract::internal_default_instance());
  ::bumoProtocol::_OperationCreateAccount_default_instance_._instance.get_mutable()->priv_ = const_cast< ::bumoProtocol::AccountPrivilege*>(
      ::bumoProtocol::AccountPrivilege::internal_default_instance());
}
void OperationCreateAccount::clear_metadatas() {
  metadatas_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationCreateAccount::kDestAddressFieldNumber;
const int OperationCreateAccount::kContractFieldNumber;
const int OperationCreateAccount::kPrivFieldNumber;
const int OperationCreateAccount::kMetadatasFieldNumber;
const int OperationCreateAccount::kInitBalanceFieldNumber;
const int OperationCreateAccount::kInitInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationCreateAccount::OperationCreateAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_OperationCreateAccount.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.OperationCreateAccount)
}
OperationCreateAccount::OperationCreateAccount(const OperationCreateAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      metadatas_(from.metadatas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dest_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dest_address().size() > 0) {
    dest_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dest_address_);
  }
  init_input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.init_input().size() > 0) {
    init_input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.init_input_);
  }
  if (from.has_contract()) {
    contract_ = new ::bumoProtocol::Contract(*from.contract_);
  } else {
    contract_ = NULL;
  }
  if (from.has_priv()) {
    priv_ = new ::bumoProtocol::AccountPrivilege(*from.priv_);
  } else {
    priv_ = NULL;
  }
  init_balance_ = from.init_balance_;
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.OperationCreateAccount)
}

void OperationCreateAccount::SharedCtor() {
  dest_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  init_input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&contract_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&init_balance_) -
      reinterpret_cast<char*>(&contract_)) + sizeof(init_balance_));
}

OperationCreateAccount::~OperationCreateAccount() {
  // @@protoc_insertion_point(destructor:bumoProtocol.OperationCreateAccount)
  SharedDtor();
}

void OperationCreateAccount::SharedDtor() {
  dest_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  init_input_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete contract_;
  if (this != internal_default_instance()) delete priv_;
}

void OperationCreateAccount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OperationCreateAccount::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperationCreateAccount& OperationCreateAccount::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_OperationCreateAccount.base);
  return *internal_default_instance();
}


void OperationCreateAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.OperationCreateAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadatas_.Clear();
  dest_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  init_input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && contract_ != NULL) {
    delete contract_;
  }
  contract_ = NULL;
  if (GetArenaNoVirtual() == NULL && priv_ != NULL) {
    delete priv_;
  }
  priv_ = NULL;
  init_balance_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool OperationCreateAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.OperationCreateAccount)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string dest_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dest_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dest_address().data(), static_cast<int>(this->dest_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.OperationCreateAccount.dest_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bumoProtocol.Contract contract = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_contract()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bumoProtocol.AccountPrivilege priv = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_priv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bumoProtocol.KeyPair metadatas = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_metadatas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 init_balance = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &init_balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string init_input = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_init_input()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->init_input().data(), static_cast<int>(this->init_input().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.OperationCreateAccount.init_input"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.OperationCreateAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.OperationCreateAccount)
  return false;
#undef DO_
}

void OperationCreateAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.OperationCreateAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dest_address = 1;
  if (this->dest_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dest_address().data(), static_cast<int>(this->dest_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationCreateAccount.dest_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dest_address(), output);
  }

  // .bumoProtocol.Contract contract = 2;
  if (this->has_contract()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_contract(), output);
  }

  // .bumoProtocol.AccountPrivilege priv = 3;
  if (this->has_priv()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_priv(), output);
  }

  // repeated .bumoProtocol.KeyPair metadatas = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadatas_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->metadatas(static_cast<int>(i)),
      output);
  }

  // int64 init_balance = 5;
  if (this->init_balance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->init_balance(), output);
  }

  // string init_input = 6;
  if (this->init_input().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->init_input().data(), static_cast<int>(this->init_input().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationCreateAccount.init_input");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->init_input(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.OperationCreateAccount)
}

::google::protobuf::uint8* OperationCreateAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.OperationCreateAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dest_address = 1;
  if (this->dest_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dest_address().data(), static_cast<int>(this->dest_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationCreateAccount.dest_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dest_address(), target);
  }

  // .bumoProtocol.Contract contract = 2;
  if (this->has_contract()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_contract(), deterministic, target);
  }

  // .bumoProtocol.AccountPrivilege priv = 3;
  if (this->has_priv()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_priv(), deterministic, target);
  }

  // repeated .bumoProtocol.KeyPair metadatas = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadatas_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->metadatas(static_cast<int>(i)), deterministic, target);
  }

  // int64 init_balance = 5;
  if (this->init_balance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->init_balance(), target);
  }

  // string init_input = 6;
  if (this->init_input().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->init_input().data(), static_cast<int>(this->init_input().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationCreateAccount.init_input");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->init_input(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.OperationCreateAccount)
  return target;
}

size_t OperationCreateAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.OperationCreateAccount)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bumoProtocol.KeyPair metadatas = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->metadatas_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metadatas(static_cast<int>(i)));
    }
  }

  // string dest_address = 1;
  if (this->dest_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dest_address());
  }

  // string init_input = 6;
  if (this->init_input().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->init_input());
  }

  // .bumoProtocol.Contract contract = 2;
  if (this->has_contract()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *contract_);
  }

  // .bumoProtocol.AccountPrivilege priv = 3;
  if (this->has_priv()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *priv_);
  }

  // int64 init_balance = 5;
  if (this->init_balance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->init_balance());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperationCreateAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.OperationCreateAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationCreateAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationCreateAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.OperationCreateAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.OperationCreateAccount)
    MergeFrom(*source);
  }
}

void OperationCreateAccount::MergeFrom(const OperationCreateAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.OperationCreateAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadatas_.MergeFrom(from.metadatas_);
  if (from.dest_address().size() > 0) {

    dest_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dest_address_);
  }
  if (from.init_input().size() > 0) {

    init_input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.init_input_);
  }
  if (from.has_contract()) {
    mutable_contract()->::bumoProtocol::Contract::MergeFrom(from.contract());
  }
  if (from.has_priv()) {
    mutable_priv()->::bumoProtocol::AccountPrivilege::MergeFrom(from.priv());
  }
  if (from.init_balance() != 0) {
    set_init_balance(from.init_balance());
  }
}

void OperationCreateAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.OperationCreateAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationCreateAccount::CopyFrom(const OperationCreateAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.OperationCreateAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationCreateAccount::IsInitialized() const {
  return true;
}

void OperationCreateAccount::Swap(OperationCreateAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationCreateAccount::InternalSwap(OperationCreateAccount* other) {
  using std::swap;
  CastToBase(&metadatas_)->InternalSwap(CastToBase(&other->metadatas_));
  dest_address_.Swap(&other->dest_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  init_input_.Swap(&other->init_input_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(contract_, other->contract_);
  swap(priv_, other->priv_);
  swap(init_balance_, other->init_balance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OperationCreateAccount::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperationSetMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperationSetMetadata::kKeyFieldNumber;
const int OperationSetMetadata::kValueFieldNumber;
const int OperationSetMetadata::kVersionFieldNumber;
const int OperationSetMetadata::kDeleteFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperationSetMetadata::OperationSetMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chain_2eproto::scc_info_OperationSetMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.OperationSetMetadata)
}
OperationSetMetadata::OperationSetMetadata(const OperationSetMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&delete_flag_) -
    reinterpret_cast<char*>(&version_)) + sizeof(delete_flag_));
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.OperationSetMetadata)
}

void OperationSetMetadata::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delete_flag_) -
      reinterpret_cast<char*>(&version_)) + sizeof(delete_flag_));
}

OperationSetMetadata::~OperationSetMetadata() {
  // @@protoc_insertion_point(destructor:bumoProtocol.OperationSetMetadata)
  SharedDtor();
}

void OperationSetMetadata::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OperationSetMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OperationSetMetadata::descriptor() {
  ::protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperationSetMetadata& OperationSetMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chain_2eproto::scc_info_OperationSetMetadata.base);
  return *internal_default_instance();
}


void OperationSetMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.OperationSetMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delete_flag_) -
      reinterpret_cast<char*>(&version_)) + sizeof(delete_flag_));
  _internal_metadata_.Clear();
}

bool OperationSetMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.OperationSetMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.OperationSetMetadata.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.OperationSetMetadata.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool delete_flag = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &delete_flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.OperationSetMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.OperationSetMetadata)
  return false;
#undef DO_
}

void OperationSetMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.OperationSetMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationSetMetadata.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationSetMetadata.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // int64 version = 3;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->version(), output);
  }

  // bool delete_flag = 4;
  if (this->delete_flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->delete_flag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.OperationSetMetadata)
}

::google::protobuf::uint8* OperationSetMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.OperationSetMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationSetMetadata.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.OperationSetMetadata.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // int64 version = 3;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->version(), target);
  }

  // bool delete_flag = 4;
  if (this->delete_flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->delete_flag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.OperationSetMetadata)
  return target;
}

size_t OperationSetMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.OperationSetMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // int64 version = 3;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->version());
  }

  // bool delete_flag = 4;
  if (this->delete_flag() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperationSetMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.OperationSetMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationSetMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationSetMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.OperationSetMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.OperationSetMetadata)
    MergeFrom(*source);
  }
}

void OperationSetMetadata::MergeFrom(const OperationSetMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.OperationSetMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.delete_flag() != 0) {
    set_delete_flag(from.delete_flag());
  }
}

void OperationSetMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.OperationSetMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationSetMetadata::CopyFrom(const OperationSetMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.OperationSetMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationSetMetadata::IsInitialized() const {
  return true;
}

void OperationSetMetadata::Swap(OperationSetMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationSetMetadata::InternalSwap(OperationSetMetadata* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(version_, other->version_);
  swap(delete_flag_, other->delete_flag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OperationSetMetadata::GetMetadata() const {
  protobuf_chain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bumoProtocol
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::Account* Arena::CreateMaybeMessage< ::bumoProtocol::Account >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::Account >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::AssetKey* Arena::CreateMaybeMessage< ::bumoProtocol::AssetKey >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::AssetKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::Asset* Arena::CreateMaybeMessage< ::bumoProtocol::Asset >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::Asset >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::AssetProperty* Arena::CreateMaybeMessage< ::bumoProtocol::AssetProperty >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::AssetProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::AssetStore* Arena::CreateMaybeMessage< ::bumoProtocol::AssetStore >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::AssetStore >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::LedgerHeader* Arena::CreateMaybeMessage< ::bumoProtocol::LedgerHeader >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::LedgerHeader >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::Ledger* Arena::CreateMaybeMessage< ::bumoProtocol::Ledger >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::Ledger >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::OperationPayAsset* Arena::CreateMaybeMessage< ::bumoProtocol::OperationPayAsset >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::OperationPayAsset >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::OperationTypeThreshold* Arena::CreateMaybeMessage< ::bumoProtocol::OperationTypeThreshold >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::OperationTypeThreshold >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::AccountPrivilege* Arena::CreateMaybeMessage< ::bumoProtocol::AccountPrivilege >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::AccountPrivilege >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::AccountThreshold* Arena::CreateMaybeMessage< ::bumoProtocol::AccountThreshold >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::AccountThreshold >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::OperationIssueAsset* Arena::CreateMaybeMessage< ::bumoProtocol::OperationIssueAsset >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::OperationIssueAsset >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::OperationPayCoin* Arena::CreateMaybeMessage< ::bumoProtocol::OperationPayCoin >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::OperationPayCoin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::OperationSetSignerWeight* Arena::CreateMaybeMessage< ::bumoProtocol::OperationSetSignerWeight >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::OperationSetSignerWeight >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::OperationLog* Arena::CreateMaybeMessage< ::bumoProtocol::OperationLog >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::OperationLog >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::OperationSetPrivilege* Arena::CreateMaybeMessage< ::bumoProtocol::OperationSetPrivilege >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::OperationSetPrivilege >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::Operation* Arena::CreateMaybeMessage< ::bumoProtocol::Operation >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::Operation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::OperationSetThreshold* Arena::CreateMaybeMessage< ::bumoProtocol::OperationSetThreshold >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::OperationSetThreshold >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::Transaction* Arena::CreateMaybeMessage< ::bumoProtocol::Transaction >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::Transaction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::Signer* Arena::CreateMaybeMessage< ::bumoProtocol::Signer >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::Signer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::Trigger_OperationTrigger* Arena::CreateMaybeMessage< ::bumoProtocol::Trigger_OperationTrigger >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::Trigger_OperationTrigger >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::Trigger* Arena::CreateMaybeMessage< ::bumoProtocol::Trigger >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::Trigger >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::TransactionEnv* Arena::CreateMaybeMessage< ::bumoProtocol::TransactionEnv >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::TransactionEnv >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::TransactionEnvStore* Arena::CreateMaybeMessage< ::bumoProtocol::TransactionEnvStore >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::TransactionEnvStore >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::TransactionEnvSet* Arena::CreateMaybeMessage< ::bumoProtocol::TransactionEnvSet >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::TransactionEnvSet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::ConsensusValueValidation* Arena::CreateMaybeMessage< ::bumoProtocol::ConsensusValueValidation >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::ConsensusValueValidation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::ConsensusValue* Arena::CreateMaybeMessage< ::bumoProtocol::ConsensusValue >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::ConsensusValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::Contract* Arena::CreateMaybeMessage< ::bumoProtocol::Contract >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::Contract >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::OperationCreateAccount* Arena::CreateMaybeMessage< ::bumoProtocol::OperationCreateAccount >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::OperationCreateAccount >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::OperationSetMetadata* Arena::CreateMaybeMessage< ::bumoProtocol::OperationSetMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::OperationSetMetadata >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
