// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#include "common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace bumoProtocol {
class KeyPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyPair>
      _instance;
} _KeyPair_default_instance_;
class SignatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Signature>
      _instance;
} _Signature_default_instance_;
class LedgerUpgradeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LedgerUpgrade>
      _instance;
} _LedgerUpgrade_default_instance_;
class WsMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WsMessage>
      _instance;
} _WsMessage_default_instance_;
class PingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ping>
      _instance;
} _Ping_default_instance_;
class PongDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pong>
      _instance;
} _Pong_default_instance_;
}  // namespace bumoProtocol
namespace protobuf_common_2eproto {
static void InitDefaultsKeyPair() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_KeyPair_default_instance_;
    new (ptr) ::bumoProtocol::KeyPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::KeyPair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KeyPair =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKeyPair}, {}};

static void InitDefaultsSignature() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_Signature_default_instance_;
    new (ptr) ::bumoProtocol::Signature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::Signature::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Signature =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignature}, {}};

static void InitDefaultsLedgerUpgrade() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_LedgerUpgrade_default_instance_;
    new (ptr) ::bumoProtocol::LedgerUpgrade();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::LedgerUpgrade::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LedgerUpgrade =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLedgerUpgrade}, {}};

static void InitDefaultsWsMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_WsMessage_default_instance_;
    new (ptr) ::bumoProtocol::WsMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::WsMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WsMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWsMessage}, {}};

static void InitDefaultsPing() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_Ping_default_instance_;
    new (ptr) ::bumoProtocol::Ping();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::Ping::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ping =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPing}, {}};

static void InitDefaultsPong() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bumoProtocol::_Pong_default_instance_;
    new (ptr) ::bumoProtocol::Pong();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bumoProtocol::Pong::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Pong =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPong}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_KeyPair.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Signature.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LedgerUpgrade.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WsMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ping.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pong.base);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::KeyPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::KeyPair, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::KeyPair, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::KeyPair, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Signature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Signature, public_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Signature, sign_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::LedgerUpgrade, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::LedgerUpgrade, new_ledger_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::LedgerUpgrade, new_validator_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::WsMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::WsMessage, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::WsMessage, request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::WsMessage, sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::WsMessage, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Ping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Ping, nonce_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Pong, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bumoProtocol::Pong, nonce_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bumoProtocol::KeyPair)},
  { 8, -1, sizeof(::bumoProtocol::Signature)},
  { 15, -1, sizeof(::bumoProtocol::LedgerUpgrade)},
  { 22, -1, sizeof(::bumoProtocol::WsMessage)},
  { 31, -1, sizeof(::bumoProtocol::Ping)},
  { 37, -1, sizeof(::bumoProtocol::Pong)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_KeyPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_Signature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_LedgerUpgrade_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_WsMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_Ping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bumoProtocol::_Pong_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "common.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014common.proto\022\014bumoProtocol\"6\n\007KeyPair\022"
      "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\022\017\n\007version\030\003"
      " \001(\003\"2\n\tSignature\022\022\n\npublic_key\030\001 \001(\t\022\021\n"
      "\tsign_data\030\002 \001(\014\"B\n\rLedgerUpgrade\022\032\n\022new"
      "_ledger_version\030\001 \001(\003\022\025\n\rnew_validator\030\002"
      " \001(\t\"J\n\tWsMessage\022\014\n\004type\030\001 \001(\003\022\017\n\007reque"
      "st\030\002 \001(\010\022\020\n\010sequence\030\003 \001(\003\022\014\n\004data\030\004 \001(\014"
      "\"\025\n\004Ping\022\r\n\005nonce\030\001 \001(\003\"\025\n\004Pong\022\r\n\005nonce"
      "\030\001 \001(\003*\317\t\n\tERRORCODE\022\023\n\017ERRCODE_SUCCESS\020"
      "\000\022\032\n\026ERRCODE_INTERNAL_ERROR\020\001\022\035\n\031ERRCODE"
      "_INVALID_PARAMETER\020\002\022\031\n\025ERRCODE_ALREADY_"
      "EXIST\020\003\022\025\n\021ERRCODE_NOT_EXIST\020\004\022\026\n\022ERRCOD"
      "E_TX_TIMEOUT\020\005\022\031\n\025ERRCODE_ACCESS_DENIED\020"
      "\006\022\031\n\025ERRCODE_MATH_OVERFLOW\020\007\022\'\n#ERRCODE_"
      "EXPR_CONDITION_RESULT_FALSE\020\024\022\'\n#ERRCODE"
      "_EXPR_CONDITION_SYNTAX_ERROR\020\025\022\032\n\026ERRCOD"
      "E_INVALID_PUBKEY\020Z\022\032\n\026ERRCODE_INVALID_PR"
      "IKEY\020[\022\031\n\025ERRCODE_ASSET_INVALID\020\\\022\035\n\031ERR"
      "CODE_INVALID_SIGNATURE\020]\022\033\n\027ERRCODE_INVA"
      "LID_ADDRESS\020^\022\036\n\032ERRCODE_MISSING_OPERATI"
      "ONS\020a\022\037\n\033ERRCODE_TOO_MANY_OPERATIONS\020b\022\030"
      "\n\024ERRCODE_BAD_SEQUENCE\020c\022\037\n\033ERRCODE_ACCO"
      "UNT_LOW_RESERVE\020d\022$\n ERRCODE_ACCOUNT_SOU"
      "RCEDEST_EQUAL\020e\022\036\n\032ERRCODE_ACCOUNT_DEST_"
      "EXIST\020f\022\035\n\031ERRCODE_ACCOUNT_NOT_EXIST\020g\022%"
      "\n!ERRCODE_ACCOUNT_ASSET_LOW_RESERVE\020h\022*\n"
      "&ERRCODE_ACCOUNT_ASSET_AMOUNT_TOO_LARGE\020"
      "i\022$\n ERRCODE_ACCOUNT_INIT_LOW_RESERVE\020j\022"
      "\032\n\026ERRCODE_FEE_NOT_ENOUGH\020o\022\027\n\023ERRCODE_F"
      "EE_INVALID\020p\022\032\n\026ERRCODE_OUT_OF_TXCACHE\020r"
      "\022\034\n\030ERRCODE_WEIGHT_NOT_VALID\020x\022\037\n\033ERRCOD"
      "E_THRESHOLD_NOT_VALID\020y\022 \n\033ERRCODE_INVAL"
      "ID_DATAVERSION\020\220\001\022\034\n\027ERRCODE_TX_SIZE_TOO"
      "_BIG\020\222\001\022\"\n\035ERRCODE_CONTRACT_EXECUTE_FAIL"
      "\020\227\001\022\"\n\035ERRCODE_CONTRACT_SYNTAX_ERROR\020\230\001\022"
      "(\n#ERRCODE_CONTRACT_TOO_MANY_RECURSION\020\231"
      "\001\022+\n&ERRCODE_CONTRACT_TOO_MANY_TRANSACTI"
      "ONS\020\232\001\022%\n ERRCODE_CONTRACT_EXECUTE_EXPIR"
      "ED\020\233\001\022!\n\034ERRCODE_TX_INSERT_QUEUE_FAIL\020\240\001"
      "B\"\n io.bumo.sdk.core.extend.protobufb\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1604);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_common_2eproto
namespace bumoProtocol {
const ::google::protobuf::EnumDescriptor* ERRORCODE_descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_enum_descriptors[0];
}
bool ERRORCODE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 20:
    case 21:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 111:
    case 112:
    case 114:
    case 120:
    case 121:
    case 144:
    case 146:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 160:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void KeyPair::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyPair::kKeyFieldNumber;
const int KeyPair::kValueFieldNumber;
const int KeyPair::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyPair::KeyPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_KeyPair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.KeyPair)
}
KeyPair::KeyPair(const KeyPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.KeyPair)
}

void KeyPair::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = GOOGLE_LONGLONG(0);
}

KeyPair::~KeyPair() {
  // @@protoc_insertion_point(destructor:bumoProtocol.KeyPair)
  SharedDtor();
}

void KeyPair::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyPair::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyPair& KeyPair::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_KeyPair.base);
  return *internal_default_instance();
}


void KeyPair::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.KeyPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool KeyPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.KeyPair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.KeyPair.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.KeyPair.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.KeyPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.KeyPair)
  return false;
#undef DO_
}

void KeyPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.KeyPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.KeyPair.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.KeyPair.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // int64 version = 3;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.KeyPair)
}

::google::protobuf::uint8* KeyPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.KeyPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.KeyPair.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.KeyPair.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // int64 version = 3;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.KeyPair)
  return target;
}

size_t KeyPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.KeyPair)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // int64 version = 3;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.KeyPair)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.KeyPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.KeyPair)
    MergeFrom(*source);
  }
}

void KeyPair::MergeFrom(const KeyPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.KeyPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void KeyPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.KeyPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyPair::CopyFrom(const KeyPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.KeyPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyPair::IsInitialized() const {
  return true;
}

void KeyPair::Swap(KeyPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyPair::InternalSwap(KeyPair* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyPair::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Signature::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Signature::kPublicKeyFieldNumber;
const int Signature::kSignDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Signature::Signature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_Signature.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.Signature)
}
Signature::Signature(const Signature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.public_key().size() > 0) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  sign_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sign_data().size() > 0) {
    sign_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_data_);
  }
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.Signature)
}

void Signature::SharedCtor() {
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Signature::~Signature() {
  // @@protoc_insertion_point(destructor:bumoProtocol.Signature)
  SharedDtor();
}

void Signature::SharedDtor() {
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Signature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Signature::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Signature& Signature::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_Signature.base);
  return *internal_default_instance();
}


void Signature::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.Signature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Signature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.Signature)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string public_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->public_key().data(), static_cast<int>(this->public_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.Signature.public_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes sign_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.Signature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.Signature)
  return false;
#undef DO_
}

void Signature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.Signature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string public_key = 1;
  if (this->public_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_key().data(), static_cast<int>(this->public_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.Signature.public_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->public_key(), output);
  }

  // bytes sign_data = 2;
  if (this->sign_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->sign_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.Signature)
}

::google::protobuf::uint8* Signature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.Signature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string public_key = 1;
  if (this->public_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_key().data(), static_cast<int>(this->public_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.Signature.public_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->public_key(), target);
  }

  // bytes sign_data = 2;
  if (this->sign_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->sign_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.Signature)
  return target;
}

size_t Signature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.Signature)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string public_key = 1;
  if (this->public_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->public_key());
  }

  // bytes sign_data = 2;
  if (this->sign_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sign_data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Signature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.Signature)
  GOOGLE_DCHECK_NE(&from, this);
  const Signature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Signature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.Signature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.Signature)
    MergeFrom(*source);
  }
}

void Signature::MergeFrom(const Signature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.Signature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.public_key().size() > 0) {

    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  if (from.sign_data().size() > 0) {

    sign_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_data_);
  }
}

void Signature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.Signature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Signature::CopyFrom(const Signature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.Signature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Signature::IsInitialized() const {
  return true;
}

void Signature::Swap(Signature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Signature::InternalSwap(Signature* other) {
  using std::swap;
  public_key_.Swap(&other->public_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sign_data_.Swap(&other->sign_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Signature::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LedgerUpgrade::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LedgerUpgrade::kNewLedgerVersionFieldNumber;
const int LedgerUpgrade::kNewValidatorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LedgerUpgrade::LedgerUpgrade()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_LedgerUpgrade.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.LedgerUpgrade)
}
LedgerUpgrade::LedgerUpgrade(const LedgerUpgrade& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  new_validator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.new_validator().size() > 0) {
    new_validator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_validator_);
  }
  new_ledger_version_ = from.new_ledger_version_;
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.LedgerUpgrade)
}

void LedgerUpgrade::SharedCtor() {
  new_validator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_ledger_version_ = GOOGLE_LONGLONG(0);
}

LedgerUpgrade::~LedgerUpgrade() {
  // @@protoc_insertion_point(destructor:bumoProtocol.LedgerUpgrade)
  SharedDtor();
}

void LedgerUpgrade::SharedDtor() {
  new_validator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LedgerUpgrade::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LedgerUpgrade::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LedgerUpgrade& LedgerUpgrade::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_LedgerUpgrade.base);
  return *internal_default_instance();
}


void LedgerUpgrade::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.LedgerUpgrade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  new_validator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_ledger_version_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool LedgerUpgrade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.LedgerUpgrade)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 new_ledger_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &new_ledger_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string new_validator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_validator()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->new_validator().data(), static_cast<int>(this->new_validator().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bumoProtocol.LedgerUpgrade.new_validator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.LedgerUpgrade)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.LedgerUpgrade)
  return false;
#undef DO_
}

void LedgerUpgrade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.LedgerUpgrade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 new_ledger_version = 1;
  if (this->new_ledger_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->new_ledger_version(), output);
  }

  // string new_validator = 2;
  if (this->new_validator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_validator().data(), static_cast<int>(this->new_validator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.LedgerUpgrade.new_validator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->new_validator(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.LedgerUpgrade)
}

::google::protobuf::uint8* LedgerUpgrade::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.LedgerUpgrade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 new_ledger_version = 1;
  if (this->new_ledger_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->new_ledger_version(), target);
  }

  // string new_validator = 2;
  if (this->new_validator().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_validator().data(), static_cast<int>(this->new_validator().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bumoProtocol.LedgerUpgrade.new_validator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->new_validator(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.LedgerUpgrade)
  return target;
}

size_t LedgerUpgrade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.LedgerUpgrade)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string new_validator = 2;
  if (this->new_validator().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->new_validator());
  }

  // int64 new_ledger_version = 1;
  if (this->new_ledger_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->new_ledger_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LedgerUpgrade::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.LedgerUpgrade)
  GOOGLE_DCHECK_NE(&from, this);
  const LedgerUpgrade* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LedgerUpgrade>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.LedgerUpgrade)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.LedgerUpgrade)
    MergeFrom(*source);
  }
}

void LedgerUpgrade::MergeFrom(const LedgerUpgrade& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.LedgerUpgrade)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.new_validator().size() > 0) {

    new_validator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_validator_);
  }
  if (from.new_ledger_version() != 0) {
    set_new_ledger_version(from.new_ledger_version());
  }
}

void LedgerUpgrade::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.LedgerUpgrade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LedgerUpgrade::CopyFrom(const LedgerUpgrade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.LedgerUpgrade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LedgerUpgrade::IsInitialized() const {
  return true;
}

void LedgerUpgrade::Swap(LedgerUpgrade* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LedgerUpgrade::InternalSwap(LedgerUpgrade* other) {
  using std::swap;
  new_validator_.Swap(&other->new_validator_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(new_ledger_version_, other->new_ledger_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LedgerUpgrade::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WsMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WsMessage::kTypeFieldNumber;
const int WsMessage::kRequestFieldNumber;
const int WsMessage::kSequenceFieldNumber;
const int WsMessage::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WsMessage::WsMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_WsMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.WsMessage)
}
WsMessage::WsMessage(const WsMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&request_) -
    reinterpret_cast<char*>(&type_)) + sizeof(request_));
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.WsMessage)
}

void WsMessage::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&request_) -
      reinterpret_cast<char*>(&type_)) + sizeof(request_));
}

WsMessage::~WsMessage() {
  // @@protoc_insertion_point(destructor:bumoProtocol.WsMessage)
  SharedDtor();
}

void WsMessage::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WsMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WsMessage::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WsMessage& WsMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_WsMessage.base);
  return *internal_default_instance();
}


void WsMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.WsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&request_) -
      reinterpret_cast<char*>(&type_)) + sizeof(request_));
  _internal_metadata_.Clear();
}

bool WsMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.WsMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool request = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &request_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 sequence = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.WsMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.WsMessage)
  return false;
#undef DO_
}

void WsMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.WsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->type(), output);
  }

  // bool request = 2;
  if (this->request() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->request(), output);
  }

  // int64 sequence = 3;
  if (this->sequence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->sequence(), output);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.WsMessage)
}

::google::protobuf::uint8* WsMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.WsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->type(), target);
  }

  // bool request = 2;
  if (this->request() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->request(), target);
  }

  // int64 sequence = 3;
  if (this->sequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->sequence(), target);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.WsMessage)
  return target;
}

size_t WsMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.WsMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 4;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // int64 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->type());
  }

  // int64 sequence = 3;
  if (this->sequence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->sequence());
  }

  // bool request = 2;
  if (this->request() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WsMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.WsMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const WsMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WsMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.WsMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.WsMessage)
    MergeFrom(*source);
  }
}

void WsMessage::MergeFrom(const WsMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.WsMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.sequence() != 0) {
    set_sequence(from.sequence());
  }
  if (from.request() != 0) {
    set_request(from.request());
  }
}

void WsMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.WsMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WsMessage::CopyFrom(const WsMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.WsMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WsMessage::IsInitialized() const {
  return true;
}

void WsMessage::Swap(WsMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WsMessage::InternalSwap(WsMessage* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(sequence_, other->sequence_);
  swap(request_, other->request_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WsMessage::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ping::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ping::kNonceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ping::Ping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_Ping.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.Ping)
}
Ping::Ping(const Ping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nonce_ = from.nonce_;
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.Ping)
}

void Ping::SharedCtor() {
  nonce_ = GOOGLE_LONGLONG(0);
}

Ping::~Ping() {
  // @@protoc_insertion_point(destructor:bumoProtocol.Ping)
  SharedDtor();
}

void Ping::SharedDtor() {
}

void Ping::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ping::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ping& Ping::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_Ping.base);
  return *internal_default_instance();
}


void Ping::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nonce_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Ping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.Ping)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 nonce = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nonce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.Ping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.Ping)
  return false;
#undef DO_
}

void Ping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 nonce = 1;
  if (this->nonce() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->nonce(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.Ping)
}

::google::protobuf::uint8* Ping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 nonce = 1;
  if (this->nonce() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->nonce(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.Ping)
  return target;
}

size_t Ping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.Ping)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 nonce = 1;
  if (this->nonce() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nonce());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.Ping)
  GOOGLE_DCHECK_NE(&from, this);
  const Ping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.Ping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.Ping)
    MergeFrom(*source);
  }
}

void Ping::MergeFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.Ping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nonce() != 0) {
    set_nonce(from.nonce());
  }
}

void Ping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ping::CopyFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ping::IsInitialized() const {
  return true;
}

void Ping::Swap(Ping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ping::InternalSwap(Ping* other) {
  using std::swap;
  swap(nonce_, other->nonce_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ping::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Pong::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pong::kNonceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pong::Pong()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_Pong.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bumoProtocol.Pong)
}
Pong::Pong(const Pong& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nonce_ = from.nonce_;
  // @@protoc_insertion_point(copy_constructor:bumoProtocol.Pong)
}

void Pong::SharedCtor() {
  nonce_ = GOOGLE_LONGLONG(0);
}

Pong::~Pong() {
  // @@protoc_insertion_point(destructor:bumoProtocol.Pong)
  SharedDtor();
}

void Pong::SharedDtor() {
}

void Pong::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Pong::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pong& Pong::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_Pong.base);
  return *internal_default_instance();
}


void Pong::Clear() {
// @@protoc_insertion_point(message_clear_start:bumoProtocol.Pong)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nonce_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Pong::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bumoProtocol.Pong)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 nonce = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nonce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bumoProtocol.Pong)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bumoProtocol.Pong)
  return false;
#undef DO_
}

void Pong::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bumoProtocol.Pong)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 nonce = 1;
  if (this->nonce() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->nonce(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bumoProtocol.Pong)
}

::google::protobuf::uint8* Pong::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bumoProtocol.Pong)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 nonce = 1;
  if (this->nonce() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->nonce(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bumoProtocol.Pong)
  return target;
}

size_t Pong::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bumoProtocol.Pong)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 nonce = 1;
  if (this->nonce() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nonce());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pong::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bumoProtocol.Pong)
  GOOGLE_DCHECK_NE(&from, this);
  const Pong* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pong>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bumoProtocol.Pong)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bumoProtocol.Pong)
    MergeFrom(*source);
  }
}

void Pong::MergeFrom(const Pong& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bumoProtocol.Pong)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nonce() != 0) {
    set_nonce(from.nonce());
  }
}

void Pong::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bumoProtocol.Pong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pong::CopyFrom(const Pong& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bumoProtocol.Pong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pong::IsInitialized() const {
  return true;
}

void Pong::Swap(Pong* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pong::InternalSwap(Pong* other) {
  using std::swap;
  swap(nonce_, other->nonce_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Pong::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bumoProtocol
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::KeyPair* Arena::CreateMaybeMessage< ::bumoProtocol::KeyPair >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::KeyPair >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::Signature* Arena::CreateMaybeMessage< ::bumoProtocol::Signature >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::Signature >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::LedgerUpgrade* Arena::CreateMaybeMessage< ::bumoProtocol::LedgerUpgrade >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::LedgerUpgrade >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::WsMessage* Arena::CreateMaybeMessage< ::bumoProtocol::WsMessage >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::WsMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::Ping* Arena::CreateMaybeMessage< ::bumoProtocol::Ping >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::Ping >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bumoProtocol::Pong* Arena::CreateMaybeMessage< ::bumoProtocol::Pong >(Arena* arena) {
  return Arena::CreateInternal< ::bumoProtocol::Pong >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
